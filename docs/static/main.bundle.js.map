{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/gif.js/dist/gif.js","webpack:///./src/droid_sans_regular.typeface.json","webpack:///./src/main.css?e0d3","webpack:///./src/main.css","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/three/build/three.module.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","e","u","a","f","Error","code","length","1","EventEmitter","this","_events","_maxListeners","undefined","isFunction","arg","isObject","isUndefined","defaultMaxListeners","setMaxListeners","isNumber","isNaN","TypeError","emit","type","er","handler","len","args","listeners","error","arguments","err","context","Array","slice","apply","addListener","listener","newListener","push","warned","console","trace","on","once","fired","g","removeListener","list","position","splice","removeAllListeners","listenerCount","evlistener","emitter","2","UA","browser","platform","ua","navigator","userAgent","toLowerCase","match","document","documentMode","version","parseFloat","parseInt","3","GIF","hasProp","indexOf","item","superClass","defaults","frameDefaults","options","base","running","frames","freeWorkers","activeWorkers","setOptions","child","parent","ctor","constructor","__super__","extend","workerScript","workers","repeat","background","quality","width","height","transparent","debug","dither","delay","copy","setOption","_canvas","results","addFrame","image","frame","ImageData","data","CanvasRenderingContext2D","WebGLRenderingContext","getContextData","childNodes","getImageData","render","j","numWorkers","ref","nextFrame","finishedFrames","imageParts","spawnWorkers","globalPalette","renderNextFrame","abort","worker","shift","log","terminate","Math","min","forEach","_this","Worker","onmessage","event","frameFinished","index","finishRendering","k","len1","len2","len3","offset","page","ref1","ref2","pageSize","cursor","round","Uint8Array","set","Blob","task","getTask","postMessage","ctx","createElement","getContext","setFill","fillRect","drawImage","last","canTransfer","./browser.coffee","events","content","hmr","transform","insertInto","locals","useSourceMap","toString","map","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","toComment","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","id","stylesInDom","isOldIE","fn","memo","memoize","window","all","atob","getElement","target","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","refs","parts","addStyle","listToStyles","newStyles","part","css","media","insertStyleElement","style","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","createStyleElement","attrs","nonce","nc","getNonce","addAttrs","el","keys","setAttribute","obj","update","remove","result","default","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","replaceText","textStore","replacement","filter","Boolean","cssNode","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","EventDispatcher","Number","EPSILON","pow","isInteger","isFinite","floor","sign","x","Function","assign","output","nextKey","addEventListener","_listeners","hasEventListener","removeEventListener","listenerArray","dispatchEvent","array","REVISION","CullFaceNone","CullFaceBack","CullFaceFront","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","LoopRepeat","ZeroCurvatureEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","_Math","DEG2RAD","PI","RAD2DEG","generateUUID","lut","d0","random","d1","d2","d3","toUpperCase","clamp","max","euclideanModulo","mapLinear","a1","a2","b1","b2","lerp","y","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","ceil","LN2","floorPowerOfTwo","Vector2","Matrix4","elements","Quaternion","z","w","_x","_y","_z","_w","Vector3","Matrix3","defineProperties","isVector2","setScalar","scalar","setX","setY","setComponent","getComponent","clone","v","add","warn","addVectors","addScalar","b","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","clampScalar","minVal","maxVal","clampLength","roundToZero","negate","dot","lengthSq","sqrt","manhattanLength","abs","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","cos","sin","isMatrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","te","identity","me","copyPosition","extractBasis","xAxis","yAxis","zAxis","setFromMatrixColumn","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","euler","isEuler","order","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","zero","one","q","compose","lookAt","eye","up","crossVectors","multiplyMatrices","premultiply","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","applyToBufferAttribute","count","getZ","applyMatrix4","setXYZ","determinant","transpose","tmp","setPosition","getInverse","throwOnDegenerate","t11","t12","t13","t14","det","msg","detInv","scale","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","theta","makeRotationY","makeRotationZ","makeRotationAxis","axis","tx","ty","makeScale","makeShear","quaternion","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","sx","sy","sz","decompose","vector","matrix","invSX","invSY","invSZ","setFromRotationMatrix","makePerspective","left","right","top","bottom","near","far","makeOrthographic","h","slerp","qa","qb","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","tDir","onChangeCallback","setFromEuler","c1","c2","c3","s1","s2","s3","setFromAxisAngle","halfAngle","m11","m12","m13","m21","m22","m23","m31","m32","m33","setFromUnitVectors","vFrom","vTo","inverse","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","onChange","callback","isVector3","setZ","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","projectionMatrix","matrixWorld","unproject","transformDirection","cross","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","normal","angleTo","acos","dz","setFromSpherical","sinPhiRadius","phi","radius","setFromCylindrical","setFromMatrixPosition","setFromMatrixScale","isMatrix3","setFromMatrix4","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","rotation","cx","cy","rotate","translate","textureId","Texture","mapping","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","uuid","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","onUpdate","Vector4","WebGLRenderTarget","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","WebGLRenderTargetCube","activeCubeFace","activeMipMapLevel","DataTexture","Box3","Infinity","Sphere","Plane","constant","Frustum","p0","p1","p2","p3","p4","p5","planes","isTexture","updateMatrix","toJSON","meta","isRootObject","textures","getDataURL","canvas","HTMLCanvasElement","createElementNS","putImageData","toDataURL","metadata","generator","wrap","images","url","isArray","dispose","transformUv","uv","isVector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","getW","isWebGLRenderTarget","setSize","isWebGLRenderTargetCube","isDataTexture","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","points","makeEmpty","il","expandByPoint","setFromCenterAndSize","size","halfSize","setFromObject","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","expandByScalar","scope","traverse","node","geometry","isGeometry","vertices","isBufferGeometry","attributes","updateMatrixWorld","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","closestPoint","sphere","clampPoint","intersectsPlane","plane","intersectsTriangle","v0","f0","f1","f2","testAxis","extents","triangleNormal","satForAxes","axes","triangle","distanceToPoint","getBoundingSphere","intersect","union","xax","xay","xaz","xbx","xby","xbz","yax","yay","yaz","ybx","yby","ybz","zax","zay","zaz","zbx","zby","zbz","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","direction","delta","denominator","start","intersectsLine","startSign","endSign","end","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","referencePoint","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","boundingSphere","computeBoundingSphere","intersectsSprite","sprite","negRadius","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_pars_maps","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","UniformsUtils","merge","uniforms","merged","uniforms_src","uniforms_dst","parameter_src","isColor","ColorKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Color","setRGB","setHex","setStyle","hex","setHSL","hue2rgb","handleAlpha","string","exec","color","components","charAt","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","copySRGBToLinear","SRGBToLinear","copyLinearToSRGB","LinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","getHSL","hue","saturation","lightness","getStyle","offsetHSL","hsl","addColors","color1","color2","UniformsLib","diffuse","opacity","uvTransform","alphaMap","specularmap","specularMap","envmap","envMap","flipEnvMap","reflectivity","refractionRatio","maxMipLevel","aomap","aoMap","aoMapIntensity","lightmap","lightMap","lightMapIntensity","emissivemap","emissiveMap","bumpmap","bumpMap","bumpScale","normalmap","normalMap","normalScale","displacementmap","displacementMap","displacementScale","displacementBias","roughnessmap","roughnessMap","metalnessmap","metalnessMap","gradientmap","gradientMap","fog","fogDensity","fogNear","fogFar","fogColor","lights","ambientLightColor","directionalLights","properties","shadow","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","distance","coneCos","penumbraCos","decay","spotShadowMap","spotShadowMatrix","pointLights","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ShaderLib","basic","vertexShader","fragmentShader","lambert","emissive","phong","specular","shininess","standard","roughness","metalness","envMapIntensity","dashed","dashSize","totalSize","depth","cube","tCube","tFlip","equirect","tEquirect","distanceRGBA","referencePosition","nearDistance","farDistance","WebGLAnimation","isAnimating","animationLoop","onAnimationFrame","time","requestAnimationFrame","stop","setAnimationLoop","setContext","WebGLAttributes","gl","buffers","WeakMap","isInterleavedBufferAttribute","deleteBuffer","buffer","delete","bufferType","usage","dynamic","DYNAMIC_DRAW","STATIC_DRAW","createBuffer","bindBuffer","bufferData","onUploadCallback","FLOAT","Float32Array","Float64Array","Uint16Array","UNSIGNED_SHORT","Int16Array","SHORT","Uint32Array","UNSIGNED_INT","Int32Array","INT","Int8Array","BYTE","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateRange","bufferSubData","subarray","updateBuffer","Euler","_order","DefaultOrder","Layers","mask","physical","clearCoat","clearCoatRoughness","RotationOrders","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","channel","enable","toggle","disable","layers","object3DId","Object3D","children","DefaultUp","modelViewMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","userData","Camera","matrixWorldInverse","OrthographicCamera","zoom","view","updateProjectionMatrix","Face3","materialIndex","vertexNormals","vertexColors","isObject3D","onBeforeRender","onAfterRender","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","q1","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","getObjectById","getObjectByProperty","getObjectByName","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverseVisible","traverseAncestors","force","geometries","materials","shapes","serialize","library","element","parameters","shape","material","uuids","extractFromCache","cache","values","recursive","parse","isOrthographicCamera","setViewOffset","fullWidth","fullHeight","enabled","offsetX","offsetY","clearViewOffset","zoomW","zoomH","scaleW","scaleH","geometryId","Geometry","colors","faces","faceVertexUvs","morphTargets","morphNormals","skinWeights","skinIndices","lineDistances","boundingBox","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","BufferAttribute","itemSize","normalized","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","DirectGeometry","normals","uvs","uvs2","groups","arrayMax","face","jl","computeBoundingBox","fromBufferGeometry","indices","positions","uv2","tempNormals","tempUVs","tempUVs2","addFace","group","computeFaceNormals","cb","ab","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","isMesh","mergeVertices","verticesMap","unique","changes","precision","faceIndicesToRemove","diff","sortFacesByMaterialIndex","_id","sort","newUvs1","newUvs2","vertex","normalsHash","colorsHash","uvsHash","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","hash","kl","uvsCopy","morphTarget","morphNormal","srcVertexNormal","destVertexNormal","isBufferAttribute","setArray","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZW","onUpload","computeGroups","fromGeometry","morphTargetsPosition","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","bufferGeometryId","BufferGeometry","morphAttributes","drawRange","BoxGeometry","widthSegments","heightSegments","depthSegments","BoxBufferGeometry","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","addGroup","setIndex","addAttribute","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","getIndex","getAttribute","removeAttribute","clearGroups","setDrawRange","needsUpdate","isPoints","isLine","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","pA","pB","pC","normalizeNormals","attributeArray1","attribute2","attributeArray2","toNonIndexed","geometry2","array2","morphAttribute","materialId","Material","blending","side","flatShading","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","premultipliedAlpha","overdraw","MeshBasicMaterial","combine","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","setValues","ShaderMaterial","defines","linewidth","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","Ray","origin","Line3","Triangle","Mesh","drawMode","updateMorphTargets","absNumericalSort","CubeTexture","isMaterial","onBeforeCompile","newValue","currentValue","isRoot","emissiveIntensity","normalMapType","sizeAttenuation","gapSize","srcPlanes","dstPlanes","isMeshBasicMaterial","isShaderMaterial","ray","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","distanceSq","closestPointToPointParameter","startP","startEnd","clampToLine","startEnd2","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","setFromPointsAndIndices","i0","i1","i2","getArea","getMidpoint","getPlane","edgeList","projectedPoint","minDistance","setDrawMode","morphTargetInfluences","morphTargetDictionary","ml","String","inverseMatrix","tempA","tempB","tempC","uvA","uvB","uvC","barycoord","intersectionPoint","intersectionPointWorld","uvIntersection","uv1","uv3","checkIntersection","raycaster","checkBufferGeometryIntersection","intersection","intersects","groupMaterial","faceIndex","fvA","fvB","fvC","isMultiMaterial","faceMaterial","morphInfluences","tl","influence","targets","uvs_f","isCubeTexture","emptyTexture","emptyCubeTexture","UniformContainer","seq","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","renderer","allocTextureUnit","setValue1f","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2f","uniform2fv","setValue3fv","uniform3f","uniform3fv","setValue4fv","uniform4f","uniform4fv","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","setValue4fm","uniformMatrix4fv","setValueT1","unit","setTexture2D","setValueT6","setTextureCube","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","updateCache","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","units","setValueT6a","SingleUniform","activeInfo","setValue","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","matchEnd","idIsIndex","subscript","next","WebGLUniforms","program","getProgramParameter","ACTIVE_UNIFORMS","info","getActiveUniform","getUniformLocation","WebGLShader","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","VERTEX_SHADER","lines","split","addLineNumbers","setOptional","upload","seqWithValue","programIdCount","getEncodingComponents","getTexelDecodingFunction","functionName","filterEmptyLine","replaceLightNums","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","parseIncludes","include","unrollLoops","snippet","unroll","WebGLProgram","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","prefixVertex","prefixFragment","gammaFactorDefine","customExtensions","rendererExtensions","envMapCubeUV","objectSpaceNormalMap","logarithmicDepthBuffer","generateExtensions","customDefines","chunks","generateDefines","createProgram","isRawShaderMaterial","supportsVertexTextures","maxBones","useFog","fogExp","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","toneMapping","toneMappingName","getToneMappingFunction","outputEncoding","mapEncoding","envMapEncoding","emissiveMapEncoding","getTexelEncodingFunction","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","FRAGMENT_SHADER","attachShader","bindAttribLocation","linkProgram","cachedUniforms","cachedAttributes","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","getUniforms","getAttributes","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","fetchAttributeLocations","destroy","deleteProgram","usedTimes","WebGLPrograms","capabilities","programs","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","parameterNames","getTextureEncodingFromMap","gammaOverrideLinear","getParameters","shadows","nClipPlanes","nClipIntersection","shaderID","isSkinnedMesh","bones","skeleton","floatVertexTextures","nVertexUniforms","maxVertexUniforms","nVertexMatrices","allocateBones","getMaxPrecision","currentRenderTarget","getRenderTarget","vertexTextures","gammaOutput","gammaInput","envMapMode","isFogExp2","maxMorphTargets","maxMorphNormals","directional","spot","rectArea","hemi","shadowMap","getProgramCode","acquireProgram","pl","programInfo","releaseProgram","pop","painterSortStable","reversePainterSortStable","WebGLRenderLists","lists","scene","renderItems","renderItemsIndex","opaque","init","renderItem","WebGLLights","light","halfWidth","halfHeight","state","ambient","vector3","matrix42","setup","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","viewMatrix","intensity","isAmbientLight","isDirectionalLight","bias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","WebGLRenderStates","renderStates","renderState","lightsArray","shadowsArray","spritesArray","setupLights","pushLight","pushShadow","shadowLight","pushSprite","WebGLShadowMap","_renderer","_objects","maxTextureSize","_frustum","_projScreenMatrix","_shadowMapSize","_maxShadowMapSize","_lookTarget","_lightPositionWorld","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","_materialCache","0","cubeDirections","cubeUps","cube2DViewPorts","useMorphing","useSkinning","depthMaterial","distanceMaterial","getDepthMaterial","lightPositionWorld","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","variantIndex","localClippingEnabled","keyA","keyB","materialsForVariant","cachedMaterial","isMeshDistanceMaterial","renderObject","shadowCamera","renderBufferDirect","autoUpdate","faceCount","_gl","_state","BLEND","setClear","setTest","setScissorTest","vpWidth","vpHeight","pars","isSpotLightShadow","shadowMatrix","setRenderTarget","clear","vpDimensions","CanvasTexture","WebGLSpriteRenderer","vertexBuffer","elementBuffer","spritePosition","spriteRotation","spriteScale","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","uvOffset","uvScale","fogType","fogDepth","fillStyle","sprites","useProgram","initAttributes","enableAttribute","disableUnusedAttributes","CULL_FACE","vertexAttribPointer","activeTexture","TEXTURE0","oldFogType","sceneFogType","isFog","density","setBlending","setMask","drawElements","TRIANGLES","reset","WebGLTextures","utils","_isWebGL2","WebGL2RenderingContext","_videoTextures","clampToMaxSize","maxSize","textureNeedsGenerateMipmaps","generateMipmap","__maxMipLevel","LOG2E","filterFallback","NEAREST","LINEAR","onTextureDispose","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","deallocateTexture","isVideoTexture","memory","onRenderTargetDispose","renderTarget","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","deallocateRenderTarget","slot","updateVideoTexture","__version","complete","createTexture","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","textureNeedsPowerOfTwo","HTMLImageElement","ImageBitmap","makePowerOfTwo","isPowerOfTwoImage","glFormat","convert","glType","setTextureParameters","mipmap","isDepthTexture","internalFormat","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","DEPTH_STENCIL","texImage2D","isCompressedTexture","getCompressedTextureFormats","compressedTexImage2D","uploadTexture","textureType","extension","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","CLAMP_TO_EDGE","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","RGBA4","setupDepthRenderbuffer","isCube","webglDepthTexture","setupDepthTexture","createRenderbuffer","TEXTURE_CUBE_MAP","isCompressed","cubeImage","maxCubemapSize","TEXTURE_CUBE_MAP_POSITIVE_X","setTextureCubeDynamic","setupRenderTarget","isTargetPowerOfTwo","createFramebuffer","COLOR_ATTACHMENT0","updateRenderTargetMipmap","webglTexture","Group","PerspectiveCamera","fov","aspect","focus","filmGauge","filmOffset","ArrayCamera","cameras","WebVRManager","device","frameData","poseTarget","controllers","standingMatrix","standingMatrixInverse","VRFrameData","onVRDisplayPresentChange","tempQuaternion","tempPosition","cameraL","bounds","cameraR","currentSize","currentPixelRatio","cameraVR","isPresenting","eyeParameters","getEyeParameters","renderWidth","renderHeight","getPixelRatio","setDrawingBufferSize","animation","isTriggerPressed","findGamepad","gamepads","getGamepads","gamepad","startsWith","userHeight","getController","controller","getDevice","setDevice","setPoseTarget","getCamera","depthNear","depthFar","getFrameData","stageParameters","sittingToStandingTransform","pose","poseObject","orientation","leftViewMatrix","rightViewMatrix","leftProjectionMatrix","rightProjectionMatrix","getLayers","layer","leftBounds","rightBounds","hasPosition","buttonId","buttons","pressed","updateControllers","getStandingMatrix","submitFrame","WebGLRenderer","_context","_alpha","_depth","_stencil","stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","currentRenderList","currentRenderState","domElement","autoClear","autoClearColor","autoClearDepth","autoClearStencil","sortObjects","toneMappingExposure","toneMappingWhitePoint","objects","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","spriteRenderer","_isContextLost","_framebuffer","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentArrayCamera","_currentViewport","_currentScissor","_currentScissorTest","_usedTextureUnits","_width","_height","_pixelRatio","_viewport","_scissor","_scissorTest","_clipping","globalState","numGlobalPlanes","renderingShadows","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","i4","enableLocalClipping","beginShadows","endShadows","setState","fromCache","nGlobal","lGlobal","clippingState","_clippingEnabled","_localClippingEnabled","_vector3","getTargetPixelRatio","contextAttributes","onContextLost","onContextRestore","getShaderPrecisionFormat","rangeMin","rangeMax","message","initGLContext","getExtension","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT_OES","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","ZERO","ONE","SRC_COLOR","ONE_MINUS_SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8_WEBGL","maxAnisotropy","HIGH_FLOAT","MEDIUM_FLOAT","maxPrecision","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","floatFragmentTextures","MAX_TEXTURE_MAX_ANISOTROPY_EXT","colorBuffer","locked","currentColorMask","currentColorClear","colorMask","setLocked","lock","clearColor","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","clearStencil","maxVertexAttributes","newAttributes","enabledAttributes","attributeDivisors","compressedTextureFormats","currentProgram","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","emptyTextures","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","vertexAttribDivisorANGLE","blendEquationSeparate","blendFuncSeparate","blendFunc","setFlipSided","frontFace","CW","CCW","setCullFace","cullFace","BACK","FRONT","FRONT_AND_BACK","setPolygonOffset","factor","POLYGON_OFFSET_FILL","webglSlot","disableVertexAttribArray","formats","COMPRESSED_TEXTURE_FORMATS","setMaterial","frontFaceCW","setLineWidth","lineWidth","SCISSOR_TEST","webglType","boundTexture","calls","triangles","autoReset","instanceCount","TRIANGLE_STRIP","TRIANGLE_FAN","LINES","LINE_STRIP","LINE_LOOP","POINTS","wireframeAttributes","onGeometryDispose","buffergeometry","_bufferGeometry","geometryAttributes","getWireframeAttribute","geometryIndex","updateList","influencesList","objectInfluences","influences","planeCamera","planeMesh","boxMesh","clearAlpha","getClearColor","setClearColor","getClearAlpha","setClearAlpha","renderList","forceClear","setMode","drawArrays","renderInstances","drawArraysInstancedANGLE","maxInstancedCount","drawElementsInstancedANGLE","vr","session","frameOfRef","inputSources","onSessionEvent","inputSource","onSessionEnd","setFramebuffer","updateCamera","setCompatibleXRDevice","setSession","baseLayer","XRWebGLLayer","requestFrameOfReference","frameOfReferenceType","then","getInputSources","onAnimationFrameCallback","getDevicePose","views","getViewport","getViewMatrix","inputPose","getInputPose","pointerMatrix","THREE","preventDefault","onMaterialDispose","releaseMaterialProgramReference","deallocateMaterial","getContextAttributes","forceContextLoss","loseContext","forceContextRestore","restoreContext","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","pixelRatio","getCurrentViewport","setScissor","boolean","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearTarget","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","programAttributes","positionArray","isMeshPhongMaterial","isMeshStandardMaterial","isMeshNormalMaterial","normalArray","nx","ny","nz","uvArray","colorArray","setProgram","geometryProgram","updateBuffers","rangeFactor","isInstancedBufferGeometry","materialDefaultAttributeValues","programAttribute","geometryAttribute","stride","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","compile","isLight","initMaterial","renderObjects","overrideMaterial","isArrayCamera","camera2","isImmediateRenderObject","renderObjectImmediate","materialProperties","programChange","lightsHash","numSupportedMorphTargets","numSupportedMorphNormals","progUniforms","uniformsList","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isMeshLambertMaterial","boneTexture","boneMatrices","boneTextureSize","markUniformsLightsNeedsUpdate","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsPhong","refreshUniformsToon","isMeshPhysicalMaterial","refreshUniformsStandard","refreshUniformsPhysical","isMeshDepthMaterial","refreshUniformsDepth","refreshUniformsDistance","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isShadowMaterial","ltc_1","LTC_1","ltc_2","LTC_2","uvScaleMap","projectObject","isSprite","opaqueObjects","transparentObjects","textureUnit","setTexture","readRenderTargetPixels","restore","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","copyFramebufferToTexture","level","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","FogExp2","Fog","Scene","SpriteMaterial","Sprite","LOD","levels","Skeleton","boneInverses","calculateInverses","Bone","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","initBones","normalizeSkinWeights","linecap","linejoin","Line","LineSegments","LineLoop","Points","VideoTexture","video","CompressedTexture","DepthTexture","WireframeGeometry","ol","edge","edges","ParametricGeometry","func","slices","stacks","ParametricBufferGeometry","pu","pv","sliceCount","PolyhedronGeometry","detail","PolyhedronBufferGeometry","uvBuffer","subdivideFace","cols","aj","bj","rows","pushVertex","getVertexByIndex","correctUV","azimuth","inclination","subdivide","appplyRadius","centroid","azi","correctUVs","correctSeam","generateUVs","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","TubeGeometry","tubularSegments","radialSegments","closed","taper","bufferGeometry","TubeBufferGeometry","tangents","binormals","computeFrenetFrames","P","generateSegment","getPointAt","N","B","generateIndices","generateBufferData","TorusKnotGeometry","tube","heightScale","TorusKnotBufferGeometry","P1","P2","T","calculatePositionOnCurve","cu","su","quOverP","cs","TorusGeometry","arc","TorusBufferGeometry","isCanvasTexture","isGroup","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","skew","isSpriteMaterial","intersectPoint","worldScale","mvPosition","alignedPosition","rotatedPosition","viewWorldMatrix","transformVertex","vertexPosition","addLevel","getObjectForDistance","matrixPosition","bone","isBone","offsetMatrix","identityMatrix","getBoneByName","gbone","pos","rotq","scl","sw","vec","skinWeight","computeLineDistances","positionAttribute","linePrecision","precisionSq","vStart","vEnd","interSegment","interRay","step","nbVertices","threshold","params","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","distanceToRay","readyState","HAVE_CURRENT_DATA","Earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","queue","steiner","getLeftmost","compareX","eliminateHole","filterPoints","eliminateHoles","earcutLinked","clockwise","sum","signedArea","insertNode","removeNode","again","three_module_area","prev","ear","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","locallyInside","isValidDiagonal","splitPolygon","hole","hx","hy","mx","my","tanMin","findHoleBridge","leftmost","px","py","intersectsPolygon","inside","middleInside","q2","Node","an","bp","ShapeUtils","area","contour","isClockWise","pts","triangulateShape","holes","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","ExtrudeBufferGeometry","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","splineTube","binormal","position2","ahole","hl","extrudeByPath","getSpacedPoints","shapePoints","extractPoints","reverse","scalePt2","pt","bs","vert","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","direction_eq","contourMovements","oneHoleMovements","holesMovements","verticesMovements","sidewalls","layeroffset","sl","slen1","slen2","f4","f3","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","buildLidFaces","buildSideFaces","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","TextGeometry","text","TextBufferGeometry","font","isFont","generateShapes","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","SphereBufferGeometry","thetaEnd","grid","verticesRow","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","RingBufferGeometry","segment","radiusStep","thetaSegmentLevel","LatheGeometry","segments","LatheBufferGeometry","inverseSegments","n1","n2","ShapeGeometry","ShapeBufferGeometry","shapeHole","indexOffset","shapeVertices","shapeHoles","toJSON$1","EdgesGeometry","thresholdAngle","thresholdDot","sourceVertices","face1","face2","CylinderGeometry","radiusTop","radiusBottom","openEnded","CylinderBufferGeometry","indexArray","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","slope","indexRow","generateTorso","ConeGeometry","ConeBufferGeometry","CircleGeometry","CircleBufferGeometry","Geometries","freeze","RawShaderMaterial","STANDARD","PHYSICAL","TOON","Materials","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","DefaultLoadingManager","loading","FileLoader","manager","DataTextureLoader","_parser","ImageLoader","CubeTextureLoader","TextureLoader","Curve","arcLengthDivisions","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","ArcCurve","aRadius","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","t2","calc","load","cached","setTimeout","dataUriRegexResult","mimeType","isBase64","decodeURIComponent","response","responseType","charCodeAt","parser","DOMParser","parseFromString","request","XMLHttpRequest","header","open","callbacks","status","withCredentials","overrideMimeType","requestHeader","setRequestHeader","send","setPath","setResponseType","setWithCredentials","setMimeType","loader","loadTexture","texDatas","loaded","mipmapCount","isCubemap","texData","crossOrigin","onImageLoad","onImageError","substr","src","setCrossOrigin","urls","isJPEG","search","getPoint","optionalTarget","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","current","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","getTangent","pt1","getTangentAt","mat","MAX_VALUE","tz","fromJSON","json","isEllipseCurve","twoPi","deltaAngle","samePoints","isArcCurve","pz","CatmullRomCurve3","curveType","CatmullRom","QuadraticBezier","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","CubicBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezierCurve","v3","CubicBezierCurve3","LineCurve","LineCurve3","QuadraticBezierCurve","QuadraticBezierCurve3","SplineCurve","isCatmullRomCurve3","intPoint","weight","isCubicBezierCurve","isCubicBezierCurve3","isLineCurve","isLineCurve3","isQuadraticBezierCurve","isQuadraticBezierCurve3","isSplineCurve","Curves","CurvePath","curves","autoClose","Path","currentPoint","Shape","Light","HemisphereLight","LightShadow","SpotLightShadow","SpotLight","power","PointLight","DirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","StringKeyframeTrack","times","interpolation","KeyframeTrack","BooleanKeyframeTrack","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","QuaternionLinearInterpolant","QuaternionKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","LinearInterpolant","DiscreteInterpolant","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","segmentLength","lens","cacheLengths","sums","resolution","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","absarc","absellipse","ellipse","firstPoint","lastPoint","getPointsHoles","holesPts","ValueTypeName","ValueBufferType","DefaultInterpolation","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","getValueSize","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","AnimationUtils","arraySlice","from","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","TimeBufferType","setInterpolation","validate","optimize","VectorKeyframeTrack","AnimationClip","duration","tracks","resetDuration","MaterialLoader","BufferGeometryLoader","trackType","_getTrackTypeForValueTypeName","track","getInterpolation","typeName","InterpolantFactoryMethodDiscrete","factoryMethod","createInterpolant","timeOffset","timeScale","startTime","endTime","nKeys","valid","prevTime","currTime","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","jsonTracks","frameTime","fps","clip","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","setTextures","getTexture","shading","typedArray","TYPED_ARRAYS","drawcalls","offsets","Loader","Handlers","handlers","regex","onLoadStart","onLoadProgress","onLoadComplete","initMaterials","texturePath","createMaterial","BlendingMode","textureLoader","materialLoader","fullPath","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","LoaderUtils","lastIndexOf","JSONLoader","setTexturePath","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","hasMaterial","faceA","faceB","uvLayer","nUvLayers","parseModel","influencesPerVertex","parseSkin","dstVertices","srcVertices","morphColors","parseMorphing","outputAnimations","morphAnimationClips","parseAnimations","substring","parseShape","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","details","geometryShapes","loadImage","currentUrl","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","UVMapping","ImageBitmapLoader","createImageBitmap","fetch","ShapePath","subPaths","currentPath","Font","createPath","char","glyph","glyphs","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","ha","FontLoader","res","imageBitmap","catch","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","tmpPoints","tmpHoles","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","paths","chars","line_height","yMax","yMin","underlineThickness","ret","createPaths","AudioContext","webkitAudioContext","AudioLoader","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","AudioListener","gain","createGain","connect","destination","Audio","getInput","autoplay","loop","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","PositionalAudio","panner","createPanner","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getOutput","PropertyMixer","binding","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","bufferCopy","decodeAudioData","audioBuffer","eyeSep","instance","eyeRight","eyeLeft","xmin","xmax","eyeSepOnProjection","ymax","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","setValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setBuffer","play","createBufferSource","onended","onEnded","pause","getFilters","setFilters","setPlaybackRate","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","getFrequencyData","getByteFrequencyData","getAverageFrequency","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","lineGeometry","coneGeometry","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","rootNode","findNode","nodeName","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","interpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","AnimationMixer","root","_root","_initMemoryManager","_accuIndex","Uniform","InstancedBufferGeometry","InterleavedBufferAttribute","interleavedBuffer","InterleavedBuffer","InstancedInterleavedBuffer","InstancedBufferAttribute","ascSort","intersectObject","Box2","ImmediateRenderObject","VertexNormalsHelper","nNormals","objGeometry","SpotLightHelper","cone","SkeletonHelper","getBoneList","boneList","PointLightHelper","sphereSize","RectAreaLightHelper","HemisphereLightHelper","GridHelper","PolarGridHelper","radials","circles","FaceNormalsHelper","DirectionalLightHelper","lightPlane","targetLine","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","BoxHelper","Box3Helper","PlaneHelper","ArrowHelper","headLength","headWidth","setDirection","AxesHelper","firstValidIndex","nCachedObjects_","bindings","unbind","isAnimationObjectGroup","sanitizeNodeName","reservedRe","RegExp","wordChar","wordCharOrDot","directoryRe","nodeRe","objectRe","propertyRe","trackRe","supportedObjectNames","matches","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","resolvedProperty","SetterByBindingTypeAndVersioning","targetObject","dest","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","now","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_update","deltaTime","timeDirection","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","interpolantValue","loopCount","_setEndings","handle_stop","pingPong","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","remove_empty_map","_","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","isInterleavedBuffer","PointCloud","setFromCamera","coords","intersectObjects","autoStart","oldTime","elapsedTime","performance","Date","getElapsedTime","getDelta","newTime","other","makeSafe","vec3","objPos","objNorm","coneLength","coneWidth","boneMatrix","matrixWorldInv","setPoint","setColor","Spline","construct","createPointsGeometry","createGeometry","createSpacedPointsGeometry","fromPoints","initFromArray","getControlPointsArray","reparametrizeByArcLength","setColors","extractUrlBase","isIntersectionBox","isIntersectionSphere","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBuffer","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","midpoint","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","getChildByName","renderDepth","getWorldRotation","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","copyIndicesArray","addIndex","addDrawCall","clearDrawCalls","computeOffsets","getArrays","addShapeList","wrapAround","wrapRGB","metal","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","shadowMapCullFace","renderReverseSided","renderSingleSided","standing","getData","updateCubeMap","createText","displayText","centerOffset","textMesh","src_submitButton","getElementById","inputText","inputColor","inputSpeed","submitButton","rotatingText","rotationFactor","droid_sans_regular_typeface_default","dirLight","createDirectionalLight","pointLight","createPointLight","webGlCanvas","animateFunction","tc","gif","gif_default","rotationSlice","drawingIterations","renderGif","cameraTarget","createCamera"],"mappings":"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","file":"main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","// gif.js 0.2.0 - https://github.com/jnordberg/gif.js\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.GIF=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){function EventEmitter(){this._events=this._events||{};this._maxListeners=this._maxListeners||undefined}module.exports=EventEmitter;EventEmitter.EventEmitter=EventEmitter;EventEmitter.prototype._events=undefined;EventEmitter.prototype._maxListeners=undefined;EventEmitter.defaultMaxListeners=10;EventEmitter.prototype.setMaxListeners=function(n){if(!isNumber(n)||n<0||isNaN(n))throw TypeError(\"n must be a positive number\");this._maxListeners=n;return this};EventEmitter.prototype.emit=function(type){var er,handler,len,args,i,listeners;if(!this._events)this._events={};if(type===\"error\"){if(!this._events.error||isObject(this._events.error)&&!this._events.error.length){er=arguments[1];if(er instanceof Error){throw er}else{var err=new Error('Uncaught, unspecified \"error\" event. ('+er+\")\");err.context=er;throw err}}}handler=this._events[type];if(isUndefined(handler))return false;if(isFunction(handler)){switch(arguments.length){case 1:handler.call(this);break;case 2:handler.call(this,arguments[1]);break;case 3:handler.call(this,arguments[1],arguments[2]);break;default:args=Array.prototype.slice.call(arguments,1);handler.apply(this,args)}}else if(isObject(handler)){args=Array.prototype.slice.call(arguments,1);listeners=handler.slice();len=listeners.length;for(i=0;i<len;i++)listeners[i].apply(this,args)}return true};EventEmitter.prototype.addListener=function(type,listener){var m;if(!isFunction(listener))throw TypeError(\"listener must be a function\");if(!this._events)this._events={};if(this._events.newListener)this.emit(\"newListener\",type,isFunction(listener.listener)?listener.listener:listener);if(!this._events[type])this._events[type]=listener;else if(isObject(this._events[type]))this._events[type].push(listener);else this._events[type]=[this._events[type],listener];if(isObject(this._events[type])&&!this._events[type].warned){if(!isUndefined(this._maxListeners)){m=this._maxListeners}else{m=EventEmitter.defaultMaxListeners}if(m&&m>0&&this._events[type].length>m){this._events[type].warned=true;console.error(\"(node) warning: possible EventEmitter memory \"+\"leak detected. %d listeners added. \"+\"Use emitter.setMaxListeners() to increase limit.\",this._events[type].length);if(typeof console.trace===\"function\"){console.trace()}}}return this};EventEmitter.prototype.on=EventEmitter.prototype.addListener;EventEmitter.prototype.once=function(type,listener){if(!isFunction(listener))throw TypeError(\"listener must be a function\");var fired=false;function g(){this.removeListener(type,g);if(!fired){fired=true;listener.apply(this,arguments)}}g.listener=listener;this.on(type,g);return this};EventEmitter.prototype.removeListener=function(type,listener){var list,position,length,i;if(!isFunction(listener))throw TypeError(\"listener must be a function\");if(!this._events||!this._events[type])return this;list=this._events[type];length=list.length;position=-1;if(list===listener||isFunction(list.listener)&&list.listener===listener){delete this._events[type];if(this._events.removeListener)this.emit(\"removeListener\",type,listener)}else if(isObject(list)){for(i=length;i-- >0;){if(list[i]===listener||list[i].listener&&list[i].listener===listener){position=i;break}}if(position<0)return this;if(list.length===1){list.length=0;delete this._events[type]}else{list.splice(position,1)}if(this._events.removeListener)this.emit(\"removeListener\",type,listener)}return this};EventEmitter.prototype.removeAllListeners=function(type){var key,listeners;if(!this._events)return this;if(!this._events.removeListener){if(arguments.length===0)this._events={};else if(this._events[type])delete this._events[type];return this}if(arguments.length===0){for(key in this._events){if(key===\"removeListener\")continue;this.removeAllListeners(key)}this.removeAllListeners(\"removeListener\");this._events={};return this}listeners=this._events[type];if(isFunction(listeners)){this.removeListener(type,listeners)}else if(listeners){while(listeners.length)this.removeListener(type,listeners[listeners.length-1])}delete this._events[type];return this};EventEmitter.prototype.listeners=function(type){var ret;if(!this._events||!this._events[type])ret=[];else if(isFunction(this._events[type]))ret=[this._events[type]];else ret=this._events[type].slice();return ret};EventEmitter.prototype.listenerCount=function(type){if(this._events){var evlistener=this._events[type];if(isFunction(evlistener))return 1;else if(evlistener)return evlistener.length}return 0};EventEmitter.listenerCount=function(emitter,type){return emitter.listenerCount(type)};function isFunction(arg){return typeof arg===\"function\"}function isNumber(arg){return typeof arg===\"number\"}function isObject(arg){return typeof arg===\"object\"&&arg!==null}function isUndefined(arg){return arg===void 0}},{}],2:[function(require,module,exports){var UA,browser,mode,platform,ua;ua=navigator.userAgent.toLowerCase();platform=navigator.platform.toLowerCase();UA=ua.match(/(opera|ie|firefox|chrome|version)[\\s\\/:]([\\w\\d\\.]+)?.*?(safari|version[\\s\\/:]([\\w\\d\\.]+)|$)/)||[null,\"unknown\",0];mode=UA[1]===\"ie\"&&document.documentMode;browser={name:UA[1]===\"version\"?UA[3]:UA[1],version:mode||parseFloat(UA[1]===\"opera\"&&UA[4]?UA[4]:UA[2]),platform:{name:ua.match(/ip(?:ad|od|hone)/)?\"ios\":(ua.match(/(?:webos|android)/)||platform.match(/mac|win|linux/)||[\"other\"])[0]}};browser[browser.name]=true;browser[browser.name+parseInt(browser.version,10)]=true;browser.platform[browser.platform.name]=true;module.exports=browser},{}],3:[function(require,module,exports){var EventEmitter,GIF,browser,extend=function(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key]}function ctor(){this.constructor=child}ctor.prototype=parent.prototype;child.prototype=new ctor;child.__super__=parent.prototype;return child},hasProp={}.hasOwnProperty,indexOf=[].indexOf||function(item){for(var i=0,l=this.length;i<l;i++){if(i in this&&this[i]===item)return i}return-1},slice=[].slice;EventEmitter=require(\"events\").EventEmitter;browser=require(\"./browser.coffee\");GIF=function(superClass){var defaults,frameDefaults;extend(GIF,superClass);defaults={workerScript:\"gif.worker.js\",workers:2,repeat:0,background:\"#fff\",quality:10,width:null,height:null,transparent:null,debug:false,dither:false};frameDefaults={delay:500,copy:false};function GIF(options){var base,key,value;this.running=false;this.options={};this.frames=[];this.freeWorkers=[];this.activeWorkers=[];this.setOptions(options);for(key in defaults){value=defaults[key];if((base=this.options)[key]==null){base[key]=value}}}GIF.prototype.setOption=function(key,value){this.options[key]=value;if(this._canvas!=null&&(key===\"width\"||key===\"height\")){return this._canvas[key]=value}};GIF.prototype.setOptions=function(options){var key,results,value;results=[];for(key in options){if(!hasProp.call(options,key))continue;value=options[key];results.push(this.setOption(key,value))}return results};GIF.prototype.addFrame=function(image,options){var frame,key;if(options==null){options={}}frame={};frame.transparent=this.options.transparent;for(key in frameDefaults){frame[key]=options[key]||frameDefaults[key]}if(this.options.width==null){this.setOption(\"width\",image.width)}if(this.options.height==null){this.setOption(\"height\",image.height)}if(typeof ImageData!==\"undefined\"&&ImageData!==null&&image instanceof ImageData){frame.data=image.data}else if(typeof CanvasRenderingContext2D!==\"undefined\"&&CanvasRenderingContext2D!==null&&image instanceof CanvasRenderingContext2D||typeof WebGLRenderingContext!==\"undefined\"&&WebGLRenderingContext!==null&&image instanceof WebGLRenderingContext){if(options.copy){frame.data=this.getContextData(image)}else{frame.context=image}}else if(image.childNodes!=null){if(options.copy){frame.data=this.getImageData(image)}else{frame.image=image}}else{throw new Error(\"Invalid image\")}return this.frames.push(frame)};GIF.prototype.render=function(){var i,j,numWorkers,ref;if(this.running){throw new Error(\"Already running\")}if(this.options.width==null||this.options.height==null){throw new Error(\"Width and height must be set prior to rendering\")}this.running=true;this.nextFrame=0;this.finishedFrames=0;this.imageParts=function(){var j,ref,results;results=[];for(i=j=0,ref=this.frames.length;0<=ref?j<ref:j>ref;i=0<=ref?++j:--j){results.push(null)}return results}.call(this);numWorkers=this.spawnWorkers();if(this.options.globalPalette===true){this.renderNextFrame()}else{for(i=j=0,ref=numWorkers;0<=ref?j<ref:j>ref;i=0<=ref?++j:--j){this.renderNextFrame()}}this.emit(\"start\");return this.emit(\"progress\",0)};GIF.prototype.abort=function(){var worker;while(true){worker=this.activeWorkers.shift();if(worker==null){break}this.log(\"killing active worker\");worker.terminate()}this.running=false;return this.emit(\"abort\")};GIF.prototype.spawnWorkers=function(){var j,numWorkers,ref,results;numWorkers=Math.min(this.options.workers,this.frames.length);(function(){results=[];for(var j=ref=this.freeWorkers.length;ref<=numWorkers?j<numWorkers:j>numWorkers;ref<=numWorkers?j++:j--){results.push(j)}return results}).apply(this).forEach(function(_this){return function(i){var worker;_this.log(\"spawning worker \"+i);worker=new Worker(_this.options.workerScript);worker.onmessage=function(event){_this.activeWorkers.splice(_this.activeWorkers.indexOf(worker),1);_this.freeWorkers.push(worker);return _this.frameFinished(event.data)};return _this.freeWorkers.push(worker)}}(this));return numWorkers};GIF.prototype.frameFinished=function(frame){var i,j,ref;this.log(\"frame \"+frame.index+\" finished - \"+this.activeWorkers.length+\" active\");this.finishedFrames++;this.emit(\"progress\",this.finishedFrames/this.frames.length);this.imageParts[frame.index]=frame;if(this.options.globalPalette===true){this.options.globalPalette=frame.globalPalette;this.log(\"global palette analyzed\");if(this.frames.length>2){for(i=j=1,ref=this.freeWorkers.length;1<=ref?j<ref:j>ref;i=1<=ref?++j:--j){this.renderNextFrame()}}}if(indexOf.call(this.imageParts,null)>=0){return this.renderNextFrame()}else{return this.finishRendering()}};GIF.prototype.finishRendering=function(){var data,frame,i,image,j,k,l,len,len1,len2,len3,offset,page,ref,ref1,ref2;len=0;ref=this.imageParts;for(j=0,len1=ref.length;j<len1;j++){frame=ref[j];len+=(frame.data.length-1)*frame.pageSize+frame.cursor}len+=frame.pageSize-frame.cursor;this.log(\"rendering finished - filesize \"+Math.round(len/1e3)+\"kb\");data=new Uint8Array(len);offset=0;ref1=this.imageParts;for(k=0,len2=ref1.length;k<len2;k++){frame=ref1[k];ref2=frame.data;for(i=l=0,len3=ref2.length;l<len3;i=++l){page=ref2[i];data.set(page,offset);if(i===frame.data.length-1){offset+=frame.cursor}else{offset+=frame.pageSize}}}image=new Blob([data],{type:\"image/gif\"});return this.emit(\"finished\",image,data)};GIF.prototype.renderNextFrame=function(){var frame,task,worker;if(this.freeWorkers.length===0){throw new Error(\"No free workers\")}if(this.nextFrame>=this.frames.length){return}frame=this.frames[this.nextFrame++];worker=this.freeWorkers.shift();task=this.getTask(frame);this.log(\"starting frame \"+(task.index+1)+\" of \"+this.frames.length);this.activeWorkers.push(worker);return worker.postMessage(task)};GIF.prototype.getContextData=function(ctx){return ctx.getImageData(0,0,this.options.width,this.options.height).data};GIF.prototype.getImageData=function(image){var ctx;if(this._canvas==null){this._canvas=document.createElement(\"canvas\");this._canvas.width=this.options.width;this._canvas.height=this.options.height}ctx=this._canvas.getContext(\"2d\");ctx.setFill=this.options.background;ctx.fillRect(0,0,this.options.width,this.options.height);ctx.drawImage(image,0,0);return this.getContextData(ctx)};GIF.prototype.getTask=function(frame){var index,task;index=this.frames.indexOf(frame);task={index:index,last:index===this.frames.length-1,delay:frame.delay,transparent:frame.transparent,width:this.options.width,height:this.options.height,quality:this.options.quality,dither:this.options.dither,globalPalette:this.options.globalPalette,repeat:this.options.repeat,canTransfer:browser.name===\"chrome\"};if(frame.data!=null){task.data=frame.data}else if(frame.context!=null){task.data=this.getContextData(frame.context)}else if(frame.image!=null){task.data=this.getImageData(frame.image)}else{throw new Error(\"Invalid frame\")}return task};GIF.prototype.log=function(){var args;args=1<=arguments.length?slice.call(arguments,0):[];if(!this.options.debug){return}return console.log.apply(console,args)};return GIF}(EventEmitter);module.exports=GIF},{\"./browser.coffee\":2,events:1}]},{},[3])(3)});\n//# sourceMappingURL=gif.js.map\n","module.exports = \"data:application/json;base64,\"","\nvar content = require(\"!!../node_modules/css-loader/index.js!./main.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./main.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./main.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"body { margin: 0; }\\ncanvas { width: 100%; height: 100% }\\n.container {\\n    display: grid;\\n    grid-template-rows: 20% 80%;\\n}\\n.menu{\\n    display: grid;\\n    grid-template-rows: 10% 10% 10% 10%;\\n    padding: 10px;\\n    align-items: center;\\n    text-align: right;\\n}\\n.canvas {\\n    display: grid;\\n    grid-column-start: 2;\\n}\\n.gif {\\n    display: grid;\\n    grid-column-start: 2;\\n}\\n\", \"\"]);\n\n// exports\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","// Polyfills\n\nif ( Number.EPSILON === undefined ) {\n\n\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n}\n\nif ( Number.isInteger === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\tNumber.isInteger = function ( value ) {\n\n\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t};\n\n}\n\n//\n\nif ( Math.sign === undefined ) {\n\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\tMath.sign = function ( x ) {\n\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t};\n\n}\n\nif ( 'name' in Function.prototype === false ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\tget: function () {\n\n\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t}\n\n\t} );\n\n}\n\nif ( Object.assign === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t( function () {\n\n\t\tObject.assign = function ( target ) {\n\n\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t}\n\n\t\t\tvar output = Object( target );\n\n\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t};\n\n\t} )();\n\n}\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nfunction EventDispatcher() {}\n\nObject.assign( EventDispatcher.prototype, {\n\n\taddEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tvar listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t},\n\n\thasEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tvar listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t},\n\n\tremoveEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\nvar REVISION = '94';\nvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\nvar CullFaceNone = 0;\nvar CullFaceBack = 1;\nvar CullFaceFront = 2;\nvar CullFaceFrontBack = 3;\nvar FrontFaceDirectionCW = 0;\nvar FrontFaceDirectionCCW = 1;\nvar BasicShadowMap = 0;\nvar PCFShadowMap = 1;\nvar PCFSoftShadowMap = 2;\nvar FrontSide = 0;\nvar BackSide = 1;\nvar DoubleSide = 2;\nvar FlatShading = 1;\nvar SmoothShading = 2;\nvar NoColors = 0;\nvar FaceColors = 1;\nvar VertexColors = 2;\nvar NoBlending = 0;\nvar NormalBlending = 1;\nvar AdditiveBlending = 2;\nvar SubtractiveBlending = 3;\nvar MultiplyBlending = 4;\nvar CustomBlending = 5;\nvar AddEquation = 100;\nvar SubtractEquation = 101;\nvar ReverseSubtractEquation = 102;\nvar MinEquation = 103;\nvar MaxEquation = 104;\nvar ZeroFactor = 200;\nvar OneFactor = 201;\nvar SrcColorFactor = 202;\nvar OneMinusSrcColorFactor = 203;\nvar SrcAlphaFactor = 204;\nvar OneMinusSrcAlphaFactor = 205;\nvar DstAlphaFactor = 206;\nvar OneMinusDstAlphaFactor = 207;\nvar DstColorFactor = 208;\nvar OneMinusDstColorFactor = 209;\nvar SrcAlphaSaturateFactor = 210;\nvar NeverDepth = 0;\nvar AlwaysDepth = 1;\nvar LessDepth = 2;\nvar LessEqualDepth = 3;\nvar EqualDepth = 4;\nvar GreaterEqualDepth = 5;\nvar GreaterDepth = 6;\nvar NotEqualDepth = 7;\nvar MultiplyOperation = 0;\nvar MixOperation = 1;\nvar AddOperation = 2;\nvar NoToneMapping = 0;\nvar LinearToneMapping = 1;\nvar ReinhardToneMapping = 2;\nvar Uncharted2ToneMapping = 3;\nvar CineonToneMapping = 4;\nvar UVMapping = 300;\nvar CubeReflectionMapping = 301;\nvar CubeRefractionMapping = 302;\nvar EquirectangularReflectionMapping = 303;\nvar EquirectangularRefractionMapping = 304;\nvar SphericalReflectionMapping = 305;\nvar CubeUVReflectionMapping = 306;\nvar CubeUVRefractionMapping = 307;\nvar RepeatWrapping = 1000;\nvar ClampToEdgeWrapping = 1001;\nvar MirroredRepeatWrapping = 1002;\nvar NearestFilter = 1003;\nvar NearestMipMapNearestFilter = 1004;\nvar NearestMipMapLinearFilter = 1005;\nvar LinearFilter = 1006;\nvar LinearMipMapNearestFilter = 1007;\nvar LinearMipMapLinearFilter = 1008;\nvar UnsignedByteType = 1009;\nvar ByteType = 1010;\nvar ShortType = 1011;\nvar UnsignedShortType = 1012;\nvar IntType = 1013;\nvar UnsignedIntType = 1014;\nvar FloatType = 1015;\nvar HalfFloatType = 1016;\nvar UnsignedShort4444Type = 1017;\nvar UnsignedShort5551Type = 1018;\nvar UnsignedShort565Type = 1019;\nvar UnsignedInt248Type = 1020;\nvar AlphaFormat = 1021;\nvar RGBFormat = 1022;\nvar RGBAFormat = 1023;\nvar LuminanceFormat = 1024;\nvar LuminanceAlphaFormat = 1025;\nvar RGBEFormat = RGBAFormat;\nvar DepthFormat = 1026;\nvar DepthStencilFormat = 1027;\nvar RGB_S3TC_DXT1_Format = 33776;\nvar RGBA_S3TC_DXT1_Format = 33777;\nvar RGBA_S3TC_DXT3_Format = 33778;\nvar RGBA_S3TC_DXT5_Format = 33779;\nvar RGB_PVRTC_4BPPV1_Format = 35840;\nvar RGB_PVRTC_2BPPV1_Format = 35841;\nvar RGBA_PVRTC_4BPPV1_Format = 35842;\nvar RGBA_PVRTC_2BPPV1_Format = 35843;\nvar RGB_ETC1_Format = 36196;\nvar RGBA_ASTC_4x4_Format = 37808;\nvar RGBA_ASTC_5x4_Format = 37809;\nvar RGBA_ASTC_5x5_Format = 37810;\nvar RGBA_ASTC_6x5_Format = 37811;\nvar RGBA_ASTC_6x6_Format = 37812;\nvar RGBA_ASTC_8x5_Format = 37813;\nvar RGBA_ASTC_8x6_Format = 37814;\nvar RGBA_ASTC_8x8_Format = 37815;\nvar RGBA_ASTC_10x5_Format = 37816;\nvar RGBA_ASTC_10x6_Format = 37817;\nvar RGBA_ASTC_10x8_Format = 37818;\nvar RGBA_ASTC_10x10_Format = 37819;\nvar RGBA_ASTC_12x10_Format = 37820;\nvar RGBA_ASTC_12x12_Format = 37821;\nvar LoopOnce = 2200;\nvar LoopRepeat = 2201;\nvar LoopPingPong = 2202;\nvar InterpolateDiscrete = 2300;\nvar InterpolateLinear = 2301;\nvar InterpolateSmooth = 2302;\nvar ZeroCurvatureEnding = 2400;\nvar ZeroSlopeEnding = 2401;\nvar WrapAroundEnding = 2402;\nvar TrianglesDrawMode = 0;\nvar TriangleStripDrawMode = 1;\nvar TriangleFanDrawMode = 2;\nvar LinearEncoding = 3000;\nvar sRGBEncoding = 3001;\nvar GammaEncoding = 3007;\nvar RGBEEncoding = 3002;\nvar LogLuvEncoding = 3003;\nvar RGBM7Encoding = 3004;\nvar RGBM16Encoding = 3005;\nvar RGBDEncoding = 3006;\nvar BasicDepthPacking = 3200;\nvar RGBADepthPacking = 3201;\nvar TangentSpaceNormalMap = 0;\nvar ObjectSpaceNormalMap = 1;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _Math = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: ( function () {\n\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\tvar lut = [];\n\n\t\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\t\tlut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n\t\t}\n\n\t\treturn function generateUUID() {\n\n\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\t\tvar uuid = lut[ d0 & 0xff ] + lut[ d0 >> 8 & 0xff ] + lut[ d0 >> 16 & 0xff ] + lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d1 & 0xff ] + lut[ d1 >> 8 & 0xff ] + '-' + lut[ d1 >> 16 & 0x0f | 0x40 ] + lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d2 & 0x3f | 0x80 ] + lut[ d2 >> 8 & 0xff ] + '-' + lut[ d2 >> 16 & 0xff ] + lut[ d2 >> 24 & 0xff ] +\n\t\t\t\tlut[ d3 & 0xff ] + lut[ d3 >> 8 & 0xff ] + lut[ d3 >> 16 & 0xff ] + lut[ d3 >> 24 & 0xff ];\n\n\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\t\treturn uuid.toUpperCase();\n\n\t\t};\n\n\t} )(),\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * _Math.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * _Math.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nfunction Vector2( x, y ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\n}\n\nObject.defineProperties( Vector2.prototype, {\n\n\t\"width\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.x = value;\n\n\t\t}\n\n\t},\n\n\t\"height\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.y = value;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tisVector2: true,\n\n\tset: function ( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector2();\n\t\tvar max = new Vector2();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tangle: function () {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\treturn angle;\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t},\n\n\trotateAround: function ( center, angle ) {\n\n\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tvar x = this.x - center.x;\n\t\tvar y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Matrix4() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix4.prototype, {\n\n\tisMatrix4: true,\n\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t},\n\n\tcopyPosition: function ( m ) {\n\n\t\tvar te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\textractRotation: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function extractRotation( m ) {\n\n\t\t\t// this method does not support reflection matrices\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\t\tte[ 3 ] = 0;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\t\tte[ 7 ] = 0;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakeRotationFromEuler: function ( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationFromQuaternion: function () {\n\n\t\tvar zero = new Vector3( 0, 0, 0 );\n\t\tvar one = new Vector3( 1, 1, 1 );\n\n\t\treturn function makeRotationFromQuaternion( q ) {\n\n\t\t\treturn this.compose( zero, q, one );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar x = new Vector3();\n\t\tvar y = new Vector3();\n\t\tvar z = new Vector3();\n\n\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tz.subVectors( eye, target );\n\n\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t// eye and target are in the same position\n\n\t\t\t\tz.z = 1;\n\n\t\t\t}\n\n\t\t\tz.normalize();\n\t\t\tx.crossVectors( up, z );\n\n\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t// up and z are parallel\n\n\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\tz.x += 0.0001;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz.z += 0.0001;\n\n\t\t\t\t}\n\n\t\t\t\tz.normalize();\n\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t}\n\n\t\t\tx.normalize();\n\t\t\ty.crossVectors( z, x );\n\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar te = this.elements;\n\t\tvar tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tsetPosition: function ( v ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 12 ] = v.x;\n\t\tte[ 13 ] = v.y;\n\t\tte[ 14 ] = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tvar te = this.elements,\n\t\t\tme = m.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( v ) {\n\n\t\tvar te = this.elements;\n\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxScaleOnAxis: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t},\n\n\tmakeTranslation: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationX: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationY: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationZ: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tvar c = Math.cos( angle );\n\t\tvar s = Math.sin( angle );\n\t\tvar t = 1 - c;\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\tvar tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\t return this;\n\n\t},\n\n\tmakeScale: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeShear: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tcompose: function ( position, quaternion, scale ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tvar x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tvar sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t        te[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t        te[ 1 ] = ( xy + wz ) * sx;\n\t        te[ 2 ] = ( xz - wy ) * sx;\n\t        te[ 3 ] = 0;\n\n\t        te[ 4 ] = ( xy - wz ) * sy;\n\t        te[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t        te[ 6 ] = ( yz + wx ) * sy;\n\t        te[ 7 ] = 0;\n\n\t        te[ 8 ] = ( xz + wy ) * sz;\n\t        te[ 9 ] = ( yz - wx ) * sz;\n\t        te[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t        te[ 11 ] = 0;\n\n\t        te[ 12 ] = position.x;\n\t        te[ 13 ] = position.y;\n\t        te[ 14 ] = position.z;\n\t        te[ 15 ] = 1;\n\n\t        return this;\n\n\t},\n\n\tdecompose: function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tvar det = this.determinant();\n\t\t\tif ( det < 0 ) sx = - sx;\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\t\t\tmatrix.copy( this );\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\n\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\t\tvar x = 2 * near / ( right - left );\n\t\tvar y = 2 * near / ( top - bottom );\n\n\t\tvar a = ( right + left ) / ( right - left );\n\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\tvar c = - ( far + near ) / ( far - near );\n\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t},\n\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\tvar te = this.elements;\n\t\tvar w = 1.0 / ( right - left );\n\t\tvar h = 1.0 / ( top - bottom );\n\t\tvar p = 1.0 / ( far - near );\n\n\t\tvar x = ( right + left ) * w;\n\t\tvar y = ( top + bottom ) * h;\n\t\tvar z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Quaternion( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Quaternion, {\n\n\tslerp: function ( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tvar s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tvar tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n} );\n\nObject.defineProperties( Quaternion.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tw: {\n\n\t\tget: function () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c1 = cos( x / 2 );\n\t\tvar c2 = cos( y / 2 );\n\t\tvar c3 = cos( z / 2 );\n\n\t\tvar s1 = sin( x / 2 );\n\t\tvar s2 = sin( y / 2 );\n\t\tvar s3 = sin( z / 2 );\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t}\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function () {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar v1 = new Vector3();\n\t\tvar r;\n\n\t\tvar EPS = 0.000001;\n\n\t\treturn function setFromUnitVectors( vFrom, vTo ) {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\tr = vFrom.dot( vTo ) + 1;\n\n\t\t\tif ( r < EPS ) {\n\n\t\t\t\tr = 0;\n\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tv1.crossVectors( vFrom, vTo );\n\n\t\t\t}\n\n\t\t\tthis._x = v1.x;\n\t\t\tthis._y = v1.y;\n\t\t\tthis._z = v1.z;\n\t\t\tthis._w = r;\n\n\t\t\treturn this.normalize();\n\n\t\t};\n\n\t}(),\n\n\tinverse: function () {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tvar s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\treturn this.normalize();\n\n\t\t}\n\n\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector3( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n}\n\nObject.assign( Vector3.prototype, {\n\n\tisVector3: true,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyEuler( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyAxisAngle: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function project( camera ) {\n\n\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t};\n\n\t}(),\n\n\tunproject: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function unproject( camera ) {\n\n\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t};\n\n\t}(),\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector3();\n\t\tvar max = new Vector3();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\t// TODO lengthSquared?\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function ( vector ) {\n\n\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t},\n\n\tprojectOnPlane: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( v1 );\n\n\t\t};\n\n\t}(),\n\n\treflect: function () {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function reflect( normal ) {\n\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( v ) {\n\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t},\n\n\tsetFromSpherical: function ( s ) {\n\n\t\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( s.theta );\n\t\tthis.y = Math.cos( s.phi ) * s.radius;\n\t\tthis.z = sinPhiRadius * Math.cos( s.theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCylindrical: function ( c ) {\n\n\t\tthis.x = c.radius * Math.sin( c.theta );\n\t\tthis.y = c.y;\n\t\tthis.z = c.radius * Math.cos( c.theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n * @author tschw\n */\n\nfunction Matrix3() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0,\n\t\t0, 1, 0,\n\t\t0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix3.prototype, {\n\n\tisMatrix3: true,\n\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix4: function ( m ) {\n\n\t\tvar me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t},\n\n\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\tif ( matrix && matrix.isMatrix4 ) {\n\n\t\t\tconsole.error( \"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\" );\n\n\t\t}\n\n\t\tvar me = matrix.elements,\n\t\t\tte = this.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar tmp, m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t},\n\n\ttransposeIntoArray: function ( r ) {\n\n\t\tvar m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tvar c = Math.cos( rotation );\n\t\tvar s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t},\n\n\tscale: function ( sx, sy ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t},\n\n\trotate: function ( theta ) {\n\n\t\tvar c = Math.cos( theta );\n\t\tvar s = Math.sin( theta );\n\n\t\tvar te = this.elements;\n\n\t\tvar a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tvar a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( tx, ty ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar textureId = 0;\n\nfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\n\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\tthis.mipmaps = [];\n\n\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\tthis.format = format !== undefined ? format : RGBAFormat;\n\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\tthis.offset = new Vector2( 0, 0 );\n\tthis.repeat = new Vector2( 1, 1 );\n\tthis.center = new Vector2( 0, 0 );\n\tthis.rotation = 0;\n\n\tthis.matrixAutoUpdate = true;\n\tthis.matrix = new Matrix3();\n\n\tthis.generateMipmaps = true;\n\tthis.premultiplyAlpha = false;\n\tthis.flipY = true;\n\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t//\n\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\tthis.version = 0;\n\tthis.onUpdate = null;\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Texture,\n\n\tisTexture: true,\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tfunction getDataURL( image ) {\n\n\t\t\tvar canvas;\n\n\t\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\t\tcanvas = image;\n\n\t\t\t} else {\n\n\t\t\t\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = image.width;\n\t\t\t\tcanvas.height = image.height;\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\n\t\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t\t} else {\n\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY\n\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tvar image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tvar url;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\turl = [];\n\n\t\t\t\t\tfor ( var i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\turl.push( getDataURL( image[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// process single image\n\n\t\t\t\t\turl = getDataURL( image );\n\n\t\t\t\t}\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: url\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t},\n\n\ttransformUv: function ( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector4( x, y, z, w ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\tthis.w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Vector4.prototype, {\n\n\tisVector4: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min, max;\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tif ( min === undefined ) {\n\n\t\t\t\tmin = new Vector4();\n\t\t\t\tmax = new Vector4();\n\n\t\t\t}\n\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n * @author Marius Kintel / https://github.com/kintel\n */\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nfunction WebGLRenderTarget( width, height, options ) {\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tthis.scissor = new Vector4( 0, 0, width, height );\n\tthis.scissorTest = false;\n\n\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\toptions = options || {};\n\n\tif ( options.minFilter === undefined ) options.minFilter = LinearFilter;\n\n\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : true;\n\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n}\n\nWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: WebGLRenderTarget,\n\n\tisWebGLRenderTarget: true,\n\n\tsetSize: function ( width, height ) {\n\n\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com\n */\n\nfunction WebGLRenderTargetCube( width, height, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\tthis.activeMipMapLevel = 0;\n\n}\n\nWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\nWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\nWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { data: data, width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\tthis.unpackAlignment = 1;\n\n}\n\nDataTexture.prototype = Object.create( Texture.prototype );\nDataTexture.prototype.constructor = DataTexture;\n\nDataTexture.prototype.isDataTexture = true;\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n}\n\nObject.assign( Box3.prototype, {\n\n\tisBox3: true,\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromArray: function ( array ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tvar x = array[ i ];\n\t\t\tvar y = array[ i + 1 ];\n\t\t\tvar z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tvar x = attribute.getX( i );\n\t\t\tvar y = attribute.getY( i );\n\t\t\tvar z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\texpandByObject: function () {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tvar scope, i, l;\n\n\t\tvar v1 = new Vector3();\n\n\t\tfunction traverse( node ) {\n\n\t\t\tvar geometry = node.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tv1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn function expandByObject( object ) {\n\n\t\t\tscope = this;\n\n\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\tobject.traverse( traverse );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t},\n\n\tintersectsSphere: ( function () {\n\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t};\n\n\t} )(),\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tvar min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= plane.constant && max >= plane.constant );\n\n\t},\n\n\tintersectsTriangle: ( function () {\n\n\t\t// triangle centered vertices\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\t// triangle edge vectors\n\t\tvar f0 = new Vector3();\n\t\tvar f1 = new Vector3();\n\t\tvar f2 = new Vector3();\n\n\t\tvar testAxis = new Vector3();\n\n\t\tvar center = new Vector3();\n\t\tvar extents = new Vector3();\n\n\t\tvar triangleNormal = new Vector3();\n\n\t\tfunction satForAxes( axes ) {\n\n\t\t\tvar i, j;\n\n\t\t\tfor ( i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t\t\ttestAxis.fromArray( axes, i );\n\t\t\t\t// project the aabb onto the seperating axis\n\t\t\t\tvar r = extents.x * Math.abs( testAxis.x ) + extents.y * Math.abs( testAxis.y ) + extents.z * Math.abs( testAxis.z );\n\t\t\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\t\t\tvar p0 = v0.dot( testAxis );\n\t\t\t\tvar p1 = v1.dot( testAxis );\n\t\t\t\tvar p2 = v2.dot( testAxis );\n\t\t\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\t\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t\t// the axis is seperating and we can exit\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn function intersectsTriangle( triangle ) {\n\n\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// compute box center and extents\n\t\t\tthis.getCenter( center );\n\t\t\textents.subVectors( this.max, center );\n\n\t\t\t// translate triangle to aabb origin\n\t\t\tv0.subVectors( triangle.a, center );\n\t\t\tv1.subVectors( triangle.b, center );\n\t\t\tv2.subVectors( triangle.c, center );\n\n\t\t\t// compute edge vectors for triangle\n\t\t\tf0.subVectors( v1, v0 );\n\t\t\tf1.subVectors( v2, v1 );\n\t\t\tf2.subVectors( v0, v2 );\n\n\t\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\t\tvar axes = [\n\t\t\t\t0, - f0.z, f0.y, 0, - f1.z, f1.y, 0, - f2.z, f2.y,\n\t\t\t\tf0.z, 0, - f0.x, f1.z, 0, - f1.x, f2.z, 0, - f2.x,\n\t\t\t\t- f0.y, f0.x, 0, - f1.y, f1.x, 0, - f2.y, f2.x, 0\n\t\t\t];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// test 3 face normals from the aabb\n\t\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// finally testing the face normal of the triangle\n\t\t\t// use already existing triangle edge vectors here\n\t\t\ttriangleNormal.crossVectors( f0, f1 );\n\t\t\taxes = [ triangleNormal.x, triangleNormal.y, triangleNormal.z ];\n\t\t\treturn satForAxes( axes );\n\n\t\t};\n\n\t} )(),\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tgetBoundingSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getBoundingSphere( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t\ttarget = new Sphere();\n\n\t\t\t}\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( v1 ).length() * 0.5;\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty( ) ) return this;\n\n\t\tvar m = matrix.elements;\n\n\t\tvar xax = m[ 0 ] * this.min.x, xay = m[ 1 ] * this.min.x, xaz = m[ 2 ] * this.min.x;\n\t\tvar xbx = m[ 0 ] * this.max.x, xby = m[ 1 ] * this.max.x, xbz = m[ 2 ] * this.max.x;\n\t\tvar yax = m[ 4 ] * this.min.y, yay = m[ 5 ] * this.min.y, yaz = m[ 6 ] * this.min.y;\n\t\tvar ybx = m[ 4 ] * this.max.y, yby = m[ 5 ] * this.max.y, ybz = m[ 6 ] * this.max.y;\n\t\tvar zax = m[ 8 ] * this.min.z, zay = m[ 9 ] * this.min.z, zaz = m[ 10 ] * this.min.z;\n\t\tvar zbx = m[ 8 ] * this.max.z, zby = m[ 9 ] * this.max.z, zbz = m[ 10 ] * this.max.z;\n\n\t\tthis.min.x = Math.min( xax, xbx ) + Math.min( yax, ybx ) + Math.min( zax, zbx ) + m[ 12 ];\n\t\tthis.min.y = Math.min( xay, xby ) + Math.min( yay, yby ) + Math.min( zay, zby ) + m[ 13 ];\n\t\tthis.min.z = Math.min( xaz, xbz ) + Math.min( yaz, ybz ) + Math.min( zaz, zbz ) + m[ 14 ];\n\t\tthis.max.x = Math.max( xax, xbx ) + Math.max( yax, ybx ) + Math.max( zax, zbx ) + m[ 12 ];\n\t\tthis.max.y = Math.max( xay, xby ) + Math.max( yay, yby ) + Math.max( zay, zby ) + m[ 13 ];\n\t\tthis.max.z = Math.max( xaz, xbz ) + Math.max( yaz, ybz ) + Math.max( zaz, zbz ) + m[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Sphere( center, radius ) {\n\n\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n}\n\nObject.assign( Sphere.prototype, {\n\n\tset: function ( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function setFromPoints( points, optionalCenter ) {\n\n\t\t\tvar center = this.center;\n\n\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t} else {\n\n\t\t\t\tbox.setFromPoints( points ).getCenter( center );\n\n\t\t\t}\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t},\n\n\tempty: function () {\n\n\t\treturn ( this.radius <= 0 );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t},\n\n\tgetBoundingBox: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\ttarget = new Box3();\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Plane( normal, constant ) {\n\n\t// normal is assumed to be normalized\n\n\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n}\n\nObject.assign( Plane.prototype, {\n\n\tset: function ( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponents: function ( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCoplanarPoints: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t},\n\n\tnormalize: function () {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t},\n\n\tdistanceToSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t},\n\n\tprojectPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t},\n\n\tintersectLine: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectLine( line, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar direction = line.delta( v1 );\n\n\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\treturn target.copy( line.start );\n\n\t\t\t\t}\n\n\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t};\n\n\t}(),\n\n\tintersectsLine: function ( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tvar startSign = this.distanceToPoint( line.start );\n\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t},\n\n\tcoplanarPoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar m1 = new Matrix3();\n\n\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\n\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io\n */\n\nfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\tthis.planes = [\n\n\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t];\n\n}\n\nObject.assign( Frustum.prototype, {\n\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tvar planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( frustum ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix: function ( m ) {\n\n\t\tvar planes = this.planes;\n\t\tvar me = m.elements;\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\tintersectsObject: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsObject( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSprite: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsSprite( sprite ) {\n\n\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar planes = this.planes;\n\t\tvar center = sphere.center;\n\t\tvar negRadius = - sphere.radius;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tintersectsBox: function () {\n\n\t\tvar p1 = new Vector3(),\n\t\t\tp2 = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\n\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\n\n\t\t\t\t// if both outside plane, no intersection\n\n\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n} );\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\n\nvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\n\nvar beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\n\nvar bsdfs = \"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t}\\n\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\\n\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\n\nvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\n\nvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\n\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\n\nvar encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\n\nvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM            = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat D      = max( maxRange / maxRGB, 1.0 );\\n\\tD            = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract(Le);\\n\\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\n\nvar fog_vertex = \"\\n#ifdef USE_FOG\\nfogDepth = -mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n  varying float fogDepth;\\n#endif\\n\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\";\n\nvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lights_pars_begin = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n\";\n\nvar lights_pars_maps = \"#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n#endif\\n\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#ifndef STANDARD\\n\\t\\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#endif\\n#endif\\n\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\\n\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\n\nvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\n\nvar normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\\n\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t#ifdef FLIP_SIDED\\n\\t\\t\\tnormal = - normal;\\n\\t\\t#endif\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\tnormal = normalize( normalMatrix * normal );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tuniform mat3 normalMatrix;\\n\\t#else\\n\\t\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t\\tmapN.xy *= normalScale;\\n\\t\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\treturn normalize( tsn * mapN );\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\n\nvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n\";\n\nvar dithering_fragment = \"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n\nvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\n\";\n\nvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n\";\n\nvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\n\nvar cube_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\\n\";\n\nvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\n\nvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\nvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\\n\";\n\nvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\\n\";\n\nvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\n\nvar equirect_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\nvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars_begin>\\n#include <lights_pars_maps>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\";\n\nvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\";\n\nvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar shadow_vert = \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_pars_maps: lights_pars_maps,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert\n};\n\n/**\n * Uniform Utilities\n */\n\nvar UniformsUtils = {\n\n\tmerge: function ( uniforms ) {\n\n\t\tvar merged = {};\n\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\n\n\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn merged;\n\n\t},\n\n\tclone: function ( uniforms_src ) {\n\n\t\tvar uniforms_dst = {};\n\n\t\tfor ( var u in uniforms_src ) {\n\n\t\t\tuniforms_dst[ u ] = {};\n\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\n\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\n\n\t\t\t\tif ( parameter_src && ( parameter_src.isColor ||\n\t\t\t\t\tparameter_src.isMatrix3 || parameter_src.isMatrix4 ||\n\t\t\t\t\tparameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 ||\n\t\t\t\t\tparameter_src.isTexture ) ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\n\n\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn uniforms_dst;\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nfunction Color( r, g, b ) {\n\n\tif ( g === undefined && b === undefined ) {\n\n\t\t// r is THREE.Color, hex or string\n\t\treturn this.set( r );\n\n\t}\n\n\treturn this.setRGB( r, g, b );\n\n}\n\nObject.assign( Color.prototype, {\n\n\tisColor: true,\n\n\tr: 1, g: 1, b: 1,\n\n\tset: function ( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetHex: function ( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t},\n\n\tsetRGB: function ( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t},\n\n\tsetHSL: function () {\n\n\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\tif ( t < 0 ) t += 1;\n\t\t\tif ( t > 1 ) t -= 1;\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\treturn p;\n\n\t\t}\n\n\t\treturn function setHSL( h, s, l ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\t\tif ( s === 0 ) {\n\n\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t} else {\n\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetStyle: function ( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tvar color;\n\t\t\tvar name = m[ 1 ];\n\t\t\tvar components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tvar hex = m[ 1 ];\n\t\t\tvar size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\t// color keywords\n\t\t\tvar hex = ColorKeywords[ style ];\n\n\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t// red\n\t\t\t\tthis.setHex( hex );\n\n\t\t\t} else {\n\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t},\n\n\tcopy: function ( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t},\n\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t},\n\n\tconvertGammaToLinear: function ( gammaFactor ) {\n\n\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToGamma: function ( gammaFactor ) {\n\n\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopySRGBToLinear: function () {\n\n\t\tfunction SRGBToLinear( c ) {\n\n\t\t\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n\t\t}\n\n\t\treturn function copySRGBToLinear( color ) {\n\n\t\t\tthis.r = SRGBToLinear( color.r );\n\t\t\tthis.g = SRGBToLinear( color.g );\n\t\t\tthis.b = SRGBToLinear( color.b );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcopyLinearToSRGB: function () {\n\n\t\tfunction LinearToSRGB( c ) {\n\n\t\t\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n\t\t}\n\n\t\treturn function copyLinearToSRGB( color ) {\n\n\t\t\tthis.r = LinearToSRGB( color.r );\n\t\t\tthis.g = LinearToSRGB( color.g );\n\t\t\tthis.b = LinearToSRGB( color.b );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tconvertSRGBToLinear: function () {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToSRGB: function () {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t},\n\n\tgetHex: function () {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t},\n\n\tgetHexString: function () {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t},\n\n\tgetHSL: function ( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t}\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tvar max = Math.max( r, g, b );\n\t\tvar min = Math.min( r, g, b );\n\n\t\tvar hue, saturation;\n\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tvar delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t},\n\n\tgetStyle: function () {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t},\n\n\toffsetHSL: function () {\n\n\t\tvar hsl = {};\n\n\t\treturn function ( h, s, l ) {\n\n\t\t\tthis.getHSL( hsl );\n\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t},\n\n\taddColors: function ( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn this.getHex();\n\n\t}\n\n} );\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nvar UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 },\n\t\tmaxMipLevel: { value: 0 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\nvar ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 0.5 },\n\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: UniformsUtils.merge( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearCoat: { value: 0 },\n\t\t\tclearCoatRoughness: { value: 0 }\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAnimation() {\n\n\tvar context = null;\n\tvar isAnimating = false;\n\tvar animationLoop = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tif ( isAnimating === false ) return;\n\n\t\tanimationLoop( time, frame );\n\n\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAttributes( gl ) {\n\n\tvar buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar usage = attribute.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n\n\t\tvar buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tvar type = gl.FLOAT;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( attribute.dynamic === false ) {\n\n\t\t\tgl.bufferData( bufferType, array, gl.STATIC_DRAW );\n\n\t\t} else if ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else if ( updateRange.count === 0 ) {\n\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t} else {\n\n\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Euler( x, y, z, order ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._order = order || Euler.DefaultOrder;\n\n}\n\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nEuler.DefaultOrder = 'XYZ';\n\nObject.defineProperties( Euler.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\torder: {\n\n\t\tget: function () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Euler.prototype, {\n\n\tisEuler: true,\n\n\tset: function ( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t},\n\n\tcopy: function ( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\tvar clamp = _Math.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements;\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._y = 0;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromQuaternion: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t};\n\n\t}(),\n\n\tsetFromVector3: function ( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t},\n\n\treorder: function () {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\tvar q = new Quaternion();\n\n\t\treturn function reorder( newOrder ) {\n\n\t\t\tq.setFromEuler( this );\n\n\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t},\n\n\ttoVector3: function ( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Layers() {\n\n\tthis.mask = 1 | 0;\n\n}\n\nObject.assign( Layers.prototype, {\n\n\tset: function ( channel ) {\n\n\t\tthis.mask = 1 << channel | 0;\n\n\t},\n\n\tenable: function ( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t},\n\n\ttoggle: function ( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t},\n\n\tdisable: function ( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t},\n\n\ttest: function ( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch\n */\n\nvar object3DId = 0;\n\nfunction Object3D() {\n\n\tObject.defineProperty( this, 'id', { value: object3DId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Object3D';\n\n\tthis.parent = null;\n\tthis.children = [];\n\n\tthis.up = Object3D.DefaultUp.clone();\n\n\tvar position = new Vector3();\n\tvar rotation = new Euler();\n\tvar quaternion = new Quaternion();\n\tvar scale = new Vector3( 1, 1, 1 );\n\n\tfunction onRotationChange() {\n\n\t\tquaternion.setFromEuler( rotation, false );\n\n\t}\n\n\tfunction onQuaternionChange() {\n\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t}\n\n\trotation.onChange( onRotationChange );\n\tquaternion.onChange( onQuaternionChange );\n\n\tObject.defineProperties( this, {\n\t\tposition: {\n\t\t\tenumerable: true,\n\t\t\tvalue: position\n\t\t},\n\t\trotation: {\n\t\t\tenumerable: true,\n\t\t\tvalue: rotation\n\t\t},\n\t\tquaternion: {\n\t\t\tenumerable: true,\n\t\t\tvalue: quaternion\n\t\t},\n\t\tscale: {\n\t\t\tenumerable: true,\n\t\t\tvalue: scale\n\t\t},\n\t\tmodelViewMatrix: {\n\t\t\tvalue: new Matrix4()\n\t\t},\n\t\tnormalMatrix: {\n\t\t\tvalue: new Matrix3()\n\t\t}\n\t} );\n\n\tthis.matrix = new Matrix4();\n\tthis.matrixWorld = new Matrix4();\n\n\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\tthis.matrixWorldNeedsUpdate = false;\n\n\tthis.layers = new Layers();\n\tthis.visible = true;\n\n\tthis.castShadow = false;\n\tthis.receiveShadow = false;\n\n\tthis.frustumCulled = true;\n\tthis.renderOrder = 0;\n\n\tthis.userData = {};\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Object3D,\n\n\tisObject3D: true,\n\n\tonBeforeRender: function () {},\n\tonAfterRender: function () {},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t},\n\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t},\n\n\tsetRotationFromEuler: function ( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t},\n\n\tsetRotationFromMatrix: function ( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t},\n\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t},\n\n\trotateOnAxis: function () {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateOnWorldAxis: function () {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnWorldAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.premultiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\ttranslateOnAxis: function () {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function translateOnAxis( axis, distance ) {\n\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function translateX( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function translateY( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function translateZ( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\tlocalToWorld: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t},\n\n\tworldToLocal: function () {\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function worldToLocal( vector ) {\n\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\t// This method does not support objects with rotated and/or translated parent(s)\n\n\t\tvar m1 = new Matrix4();\n\t\tvar vector = new Vector3();\n\n\t\treturn function lookAt( x, y, z ) {\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\tvector.copy( x );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( x, y, z );\n\n\t\t\t}\n\n\t\t\tif ( this.isCamera ) {\n\n\t\t\t\tm1.lookAt( this.position, vector, this.up );\n\n\t\t\t} else {\n\n\t\t\t\tm1.lookAt( vector, this.position, this.up );\n\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\tthis.children.push( object );\n\n\t\t} else {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetObjectById: function ( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t},\n\n\tgetObjectByName: function ( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t},\n\n\tgetObjectByProperty: function ( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tvar child = this.children[ i ];\n\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tgetWorldPosition: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t},\n\n\tgetWorldQuaternion: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar scale = new Vector3();\n\n\t\treturn function getWorldQuaternion( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\t\ttarget = new Quaternion();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, target, scale );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldScale: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldScale( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, target );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldDirection: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldDirection( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn target.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t};\n\n\t}(),\n\n\traycast: function () {},\n\n\ttraverse: function ( callback ) {\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseVisible: function ( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseAncestors: function ( callback ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t},\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tvar output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tvar object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.geometry !== undefined ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tvar parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tvar shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tvar uuids = [];\n\n\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\t\t\tvar shapes = extractFromCache( meta.shapes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\t\t\treturn values;\n\n\t\t}\n\n\t},\n\n\tclone: function ( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t},\n\n\tcopy: function ( source, recursive ) {\n\n\t\tif ( recursive === undefined ) recursive = true;\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tvar child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nfunction Camera() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Camera';\n\n\tthis.matrixWorldInverse = new Matrix4();\n\tthis.projectionMatrix = new Matrix4();\n\n}\n\nCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Camera,\n\n\tisCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\n\t\treturn this;\n\n\t},\n\n\tgetWorldDirection: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldDirection( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn target.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t};\n\n\t}(),\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author arose / http://github.com/arose\n */\n\nfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'OrthographicCamera';\n\n\tthis.zoom = 1;\n\tthis.view = null;\n\n\tthis.left = left;\n\tthis.right = right;\n\tthis.top = top;\n\tthis.bottom = bottom;\n\n\tthis.near = ( near !== undefined ) ? near : 0.1;\n\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\tthis.updateProjectionMatrix();\n\n}\n\nOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: OrthographicCamera,\n\n\tisOrthographicCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t},\n\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tvar cx = ( this.right + this.left ) / 2;\n\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\tvar left = cx - dx;\n\t\tvar right = cx + dx;\n\t\tvar top = cy + dy;\n\t\tvar bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\tthis.a = a;\n\tthis.b = b;\n\tthis.c = c;\n\n\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\tthis.color = ( color && color.isColor ) ? color : new Color();\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n}\n\nObject.assign( Face3.prototype, {\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.a = source.a;\n\t\tthis.b = source.b;\n\t\tthis.c = source.c;\n\n\t\tthis.normal.copy( source.normal );\n\t\tthis.color.copy( source.color );\n\n\t\tthis.materialIndex = source.materialIndex;\n\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t}\n\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://clara.io\n */\n\nvar geometryId = 0; // Geometry uses even numbers as Id\n\nfunction Geometry() {\n\n\tObject.defineProperty( this, 'id', { value: geometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Geometry';\n\n\tthis.vertices = [];\n\tthis.colors = [];\n\tthis.faces = [];\n\tthis.faceVertexUvs = [[]];\n\n\tthis.morphTargets = [];\n\tthis.morphNormals = [];\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\tthis.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.elementsNeedUpdate = false;\n\tthis.verticesNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.lineDistancesNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Geometry,\n\n\tisGeometry: true,\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t}\n\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.verticesNeedUpdate = true;\n\t\tthis.normalsNeedUpdate = true;\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tfromBufferGeometry: function ( geometry ) {\n\n\t\tvar scope = this;\n\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\tvar attributes = geometry.attributes;\n\n\t\tvar positions = attributes.position.array;\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\tvar tempNormals = [];\n\t\tvar tempUVs = [];\n\t\tvar tempUVs2 = [];\n\n\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\tscope.vertices.push( new Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\n\n\t\t\tif ( normals !== undefined ) {\n\n\t\t\t\ttempNormals.push( new Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\tscope.colors.push( new Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\ttempUVs.push( new Vector2( uvs[ j ], uvs[ j + 1 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\ttempUVs2.push( new Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\n\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\n\n\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\tscope.faces.push( face );\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar groups = geometry.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tvar start = group.start;\n\t\t\t\tvar count = group.count;\n\n\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeFaceNormals();\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tnormalize: function () {\n\n\t\tthis.computeBoundingSphere();\n\n\t\tvar center = this.boundingSphere.center;\n\t\tvar radius = this.boundingSphere.radius;\n\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\tvar matrix = new Matrix4();\n\t\tmatrix.set(\n\t\t\ts, 0, 0, - s * center.x,\n\t\t\t0, s, 0, - s * center.y,\n\t\t\t0, 0, s, - s * center.z,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\tthis.applyMatrix( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tvar face = this.faces[ f ];\n\n\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\tcb.subVectors( vC, vB );\n\t\t\tab.subVectors( vA, vB );\n\t\t\tcb.cross( ab );\n\n\t\t\tcb.normalize();\n\n\t\t\tface.normal.copy( cb );\n\n\t\t}\n\n\t},\n\n\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\tvar v, vl, f, fl, face, vertices;\n\n\t\tvertices = new Array( this.vertices.length );\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ] = new Vector3();\n\n\t\t}\n\n\t\tif ( areaWeighted ) {\n\n\t\t\t// vertex normals weighted by triangle areas\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ].normalize();\n\n\t\t}\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeFlatVertexNormals: function () {\n\n\t\tvar f, fl, face;\n\n\t\tthis.computeFaceNormals();\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeMorphNormals: function () {\n\n\t\tvar i, il, f, fl, face;\n\n\t\t// save original normals\n\t\t// - create temp variables on first access\n\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t} else {\n\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t}\n\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\tvar tmpGeo = new Geometry();\n\t\ttmpGeo.faces = this.faces;\n\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t// create on first access\n\n\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t// set vertices to morph target\n\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t// compute morph normals\n\n\t\t\ttmpGeo.computeFaceNormals();\n\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t// store morph normals\n\n\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore original normals\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t},\n\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar normalMatrix,\n\t\t\tvertexOffset = this.vertices.length,\n\t\t\tvertices1 = this.vertices,\n\t\t\tvertices2 = geometry.vertices,\n\t\t\tfaces1 = this.faces,\n\t\t\tfaces2 = geometry.faces,\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\n\t\t\tcolors1 = this.colors,\n\t\t\tcolors2 = geometry.colors;\n\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\tif ( matrix !== undefined ) {\n\n\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t}\n\n\t\t// vertices\n\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\tvertices1.push( vertexCopy );\n\n\t\t}\n\n\t\t// colors\n\n\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t}\n\n\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t}\n\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\tfaces1.push( faceCopy );\n\n\t\t}\n\n\t\t// uvs\n\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\tif ( uv === undefined ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t}\n\n\t\t\tuvs1.push( uvCopy );\n\n\t\t}\n\n\t},\n\n\tmergeMesh: function ( mesh ) {\n\n\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( mesh.matrixAutoUpdate ) mesh.updateMatrix();\n\n\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t},\n\n\t/*\n\t * Checks for duplicate vertices with hashmap.\n\t * Duplicated vertices are removed\n\t * and faces' vertices are updated.\n\t */\n\n\tmergeVertices: function () {\n\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\tvar unique = [], changes = [];\n\n\t\tvar v, key;\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\tvar i, il, face;\n\t\tvar indices, j, jl;\n\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tv = this.vertices[ i ];\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// if faces are completely degenerate after merging vertices, we\n\t\t// have to remove them from the geometry.\n\t\tvar faceIndicesToRemove = [];\n\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tface = this.faces[ i ];\n\n\t\t\tface.a = changes[ face.a ];\n\t\t\tface.b = changes[ face.b ];\n\t\t\tface.c = changes[ face.c ];\n\n\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t// we have to remove the face as nothing can be saved\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Use unique set of vertices\n\n\t\tvar diff = this.vertices.length - unique.length;\n\t\tthis.vertices = unique;\n\t\treturn diff;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.vertices = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsortFacesByMaterialIndex: function () {\n\n\t\tvar faces = this.faces;\n\t\tvar length = faces.length;\n\n\t\t// tag faces\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tfaces[ i ]._id = i;\n\n\t\t}\n\n\t\t// sort faces\n\n\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t}\n\n\t\tfaces.sort( materialIndexSort );\n\n\t\t// sort uvs\n\n\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\tvar newUvs1, newUvs2;\n\n\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar id = faces[ i ]._id;\n\n\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t}\n\n\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Geometry',\n\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Geometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tvar vertices = [];\n\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tvar faces = [];\n\t\tvar normals = [];\n\t\tvar normalsHash = {};\n\t\tvar colors = [];\n\t\tvar colorsHash = {};\n\t\tvar uvs = [];\n\t\tvar uvsHash = {};\n\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\n\t\t\tvar hasMaterial = true;\n\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\tvar faceType = 0;\n\n\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\tfaces.push( faceType );\n\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\tfaces.push( face.materialIndex );\n\n\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t}\n\n\t\tfunction getNormalIndex( normal ) {\n\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\treturn normalsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getColorIndex( color ) {\n\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\tcolors.push( color.getHex() );\n\n\t\t\treturn colorsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getUvIndex( uv ) {\n\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\treturn uvsHash[ hash ];\n\n\t\t}\n\n\t\tdata.data = {};\n\n\t\tdata.data.vertices = vertices;\n\t\tdata.data.normals = normals;\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\tdata.data.faces = faces;\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new Geometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar i, il, j, jl, k, kl;\n\n\t\t// reset\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\t\tthis.lineDistances = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// vertices\n\n\t\tvar vertices = source.vertices;\n\n\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t}\n\n\t\t// colors\n\n\t\tvar colors = source.colors;\n\n\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tvar faces = source.faces;\n\n\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t}\n\n\t\t// face vertex uvs\n\n\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphTargets = source.morphTargets;\n\n\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = {};\n\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t// vertices\n\n\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// normals\n\n\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t}\n\n\t\t// morph normals\n\n\t\tvar morphNormals = source.morphNormals;\n\n\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\tvar morphNormal = {};\n\n\t\t\t// vertex normals\n\n\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// face normals\n\n\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t}\n\n\t\t// skin weights\n\n\t\tvar skinWeights = source.skinWeights;\n\n\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t}\n\n\t\t// skin indices\n\n\t\tvar skinIndices = source.skinIndices;\n\n\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t}\n\n\t\t// line distances\n\n\t\tvar lineDistances = source.lineDistances;\n\n\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferAttribute( array, itemSize, normalized ) {\n\n\tif ( Array.isArray( array ) ) {\n\n\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t}\n\n\tthis.name = '';\n\n\tthis.array = array;\n\tthis.itemSize = itemSize;\n\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\tthis.normalized = normalized === true;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( BufferAttribute.prototype, {\n\n\tisBufferAttribute: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyArray: function ( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t},\n\n\tcopyColorsArray: function ( colors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tvar color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector2sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector3sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector4sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n} );\n\n//\n\nfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n}\n\nInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\nfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n}\n\nUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\nfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n}\n\nUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\nfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n}\n\nInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\nfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n}\n\nUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\nfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n}\n\nInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\nfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n}\n\nUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\nfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n}\n\nFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\nfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n}\n\nFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectGeometry() {\n\n\tthis.vertices = [];\n\tthis.normals = [];\n\tthis.colors = [];\n\tthis.uvs = [];\n\tthis.uvs2 = [];\n\n\tthis.groups = [];\n\n\tthis.morphTargets = {};\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\t// this.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.verticesNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nObject.assign( DirectGeometry.prototype, {\n\n\tcomputeGroups: function ( geometry ) {\n\n\t\tvar group;\n\t\tvar groups = [];\n\t\tvar materialIndex = undefined;\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\t// materials\n\n\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t}\n\n\t\t\t\tgroup = {\n\t\t\t\t\tstart: i * 3,\n\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( group !== undefined ) {\n\n\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\tgroups.push( group );\n\n\t\t}\n\n\t\tthis.groups = groups;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tvar faces = geometry.faces;\n\t\tvar vertices = geometry.vertices;\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t// morphs\n\n\t\tvar morphTargets = geometry.morphTargets;\n\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\tvar morphTargetsPosition;\n\n\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\tmorphTargetsPosition = [];\n\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsPosition[ i ] = [];\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t}\n\n\t\tvar morphNormals = geometry.morphNormals;\n\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\tvar morphTargetsNormal;\n\n\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\tmorphTargetsNormal = [];\n\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsNormal[ i ] = [];\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t}\n\n\t\t// skins\n\n\t\tvar skinIndices = geometry.skinIndices;\n\t\tvar skinWeights = geometry.skinWeights;\n\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t//\n\n\t\tif ( vertices.length > 0 && faces.length === 0 ) {\n\n\t\t\tconsole.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t}\n\n\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar color = face.color;\n\n\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morphs\n\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t}\n\n\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeGroups( geometry );\n\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tvar max = array[ 0 ];\n\n\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\nfunction BufferGeometry() {\n\n\tObject.defineProperty( this, 'id', { value: bufferGeometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'BufferGeometry';\n\n\tthis.index = null;\n\tthis.attributes = {};\n\n\tthis.morphAttributes = {};\n\n\tthis.groups = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\tthis.drawRange = { start: 0, count: Infinity };\n\n\tthis.userData = {};\n\n}\n\nBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: BufferGeometry,\n\n\tisBufferGeometry: true,\n\n\tgetIndex: function () {\n\n\t\treturn this.index;\n\n\t},\n\n\tsetIndex: function ( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t},\n\n\taddAttribute: function ( name, attribute ) {\n\n\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\treturn this.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t}\n\n\t\tif ( name === 'index' ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\tthis.setIndex( attribute );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t},\n\n\tgetAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t},\n\n\tremoveAttribute: function ( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t},\n\n\taddGroup: function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t} );\n\n\t},\n\n\tclearGroups: function () {\n\n\t\tthis.groups = [];\n\n\t},\n\n\tsetDrawRange: function ( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tmatrix.applyToBufferAttribute( position );\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tvar normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormalMatrix.applyToBufferAttribute( normal );\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t} else if ( object.isMesh ) {\n\n\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tvar position = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t},\n\n\tupdateFromObject: function ( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\tdirect = undefined;\n\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( direct === undefined ) {\n\n\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\tgeometry = direct;\n\n\t\t}\n\n\t\tvar attribute;\n\n\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.position;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.normal;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.color;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.uv;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t},\n\n\tfromDirectGeometry: function ( geometry ) {\n\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t}\n\n\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t}\n\n\t\t// groups\n\n\t\tthis.groups = geometry.groups;\n\n\t\t// morphs\n\n\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.length * 3, 3 );\n\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// skinning\n\n\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t}\n\n\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar box = new Box3();\n\t\tvar vector = new Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position ) {\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tbox.setFromBufferAttribute( position );\n\t\t\t\tbox.getCenter( center );\n\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.x = position.getX( i );\n\t\t\t\t\tvector.y = position.getY( i );\n\t\t\t\t\tvector.z = position.getZ( i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeFaceNormals: function () {\n\n\t\t// backwards compatibility\n\n\t},\n\n\tcomputeVertexNormals: function () {\n\n\t\tvar index = this.index;\n\t\tvar attributes = this.attributes;\n\t\tvar groups = this.groups;\n\n\t\tif ( attributes.position ) {\n\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar normals = attributes.normal.array;\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tvar indices = index.array;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tthis.addGroup( 0, indices.length );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\n\n\t\t\t\t\tvar group = groups[ j ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tmerge: function ( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tvar attribute1 = attributes[ key ];\n\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\tvar attributeSize = attribute2.itemSize;\n\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tnormalizeNormals: function () {\n\n\t\tvar vector = new Vector3();\n\n\t\treturn function normalizeNormals() {\n\n\t\t\tvar normals = this.attributes.normal;\n\n\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t\tvector.x = normals.getX( i );\n\t\t\t\tvector.y = normals.getY( i );\n\t\t\t\tvector.z = normals.getZ( i );\n\n\t\t\t\tvector.normalize();\n\n\t\t\t\tnormals.setXYZ( i, vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoNonIndexed: function () {\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar geometry2 = new BufferGeometry();\n\n\t\tvar indices = this.index.array;\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tvar index = 0, index2 = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tdata.data = { attributes: {} };\n\n\t\tvar index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tvar array = Array.prototype.slice.call( index.array );\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: array\n\t\t\t};\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\n\t\t\tvar array = Array.prototype.slice.call( attribute.array );\n\n\t\t\tdata.data.attributes[ key ] = {\n\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: attribute.normalized\n\t\t\t};\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tvar boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar name, i, l;\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = source.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// groups\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// BoxGeometry\n\nfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'BoxGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\tthis.mergeVertices();\n\n}\n\nBoxGeometry.prototype = Object.create( Geometry.prototype );\nBoxGeometry.prototype.constructor = BoxGeometry;\n\n// BoxBufferGeometry\n\nfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'BoxBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tvar scope = this;\n\n\twidth = width || 1;\n\theight = height || 1;\n\tdepth = depth || 1;\n\n\t// segments\n\n\twidthSegments = Math.floor( widthSegments ) || 1;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar numberOfVertices = 0;\n\tvar groupStart = 0;\n\n\t// build each side of the box geometry\n\n\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\tvar segmentWidth = width / gridX;\n\t\tvar segmentHeight = height / gridY;\n\n\t\tvar widthHalf = width / 2;\n\t\tvar heightHalf = height / 2;\n\t\tvar depthHalf = depth / 2;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar vertexCounter = 0;\n\t\tvar groupCount = 0;\n\n\t\tvar ix, iy;\n\n\t\tvar vector = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = 0;\n\t\t\t\tvector[ v ] = 0;\n\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// uvs\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t// counters\n\n\t\t\t\tvertexCounter += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\t// 1. you need three indices to draw a single face\n\t\t// 2. a single segment consists of two faces\n\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// increase counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t\t// update total number of vertices\n\n\t\tnumberOfVertices += vertexCounter;\n\n\t}\n\n}\n\nBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PlaneGeometry\n\nfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PlaneGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\tthis.mergeVertices();\n\n}\n\nPlaneGeometry.prototype = Object.create( Geometry.prototype );\nPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n// PlaneBufferGeometry\n\nfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PlaneBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\twidth = width || 1;\n\theight = height || 1;\n\n\tvar width_half = width / 2;\n\tvar height_half = height / 2;\n\n\tvar gridX = Math.floor( widthSegments ) || 1;\n\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\tvar gridX1 = gridX + 1;\n\tvar gridY1 = gridY + 1;\n\n\tvar segment_width = width / gridX;\n\tvar segment_height = height / gridY;\n\n\tvar ix, iy;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\tvar y = iy * segment_height - height_half;\n\n\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\tuvs.push( ix / gridX );\n\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\tvar a = ix + gridX1 * iy;\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar materialId = 0;\n\nfunction Material() {\n\n\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.fog = true;\n\tthis.lights = true;\n\n\tthis.blending = NormalBlending;\n\tthis.side = FrontSide;\n\tthis.flatShading = false;\n\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blendSrc = SrcAlphaFactor;\n\tthis.blendDst = OneMinusSrcAlphaFactor;\n\tthis.blendEquation = AddEquation;\n\tthis.blendSrcAlpha = null;\n\tthis.blendDstAlpha = null;\n\tthis.blendEquationAlpha = null;\n\n\tthis.depthFunc = LessEqualDepth;\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.clippingPlanes = null;\n\tthis.clipIntersection = false;\n\tthis.clipShadows = false;\n\n\tthis.shadowSide = null;\n\n\tthis.colorWrite = true;\n\n\tthis.precision = null; // override the renderer's default precision for this material\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.dithering = false;\n\n\tthis.alphaTest = 0;\n\tthis.premultipliedAlpha = false;\n\n\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n\tthis.visible = true;\n\n\tthis.userData = {};\n\n\tthis.needsUpdate = true;\n\n}\n\nMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Material,\n\n\tisMaterial: true,\n\n\tonBeforeCompile: function () {},\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( var key in values ) {\n\n\t\t\tvar newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else if ( key === 'overdraw' ) {\n\n\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\n\t\t\t\tthis[ key ] = Number( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;\n\t\tif ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t}\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.flatShading = source.flatShading;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.overdraw = source.overdraw;\n\n\t\tthis.visible = source.visible;\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.clipShadows = source.clipShadows;\n\t\tthis.clipIntersection = source.clipIntersection;\n\n\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\tdstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tvar n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nfunction MeshBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshBasicMaterial';\n\n\tthis.color = new Color( 0xffffff ); // emissive\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshBasicMaterial.prototype = Object.create( Material.prototype );\nMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction ShaderMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShaderMaterial';\n\n\tthis.defines = {};\n\tthis.uniforms = {};\n\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n\n\tthis.linewidth = 1;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false; // set to use scene fog\n\tthis.lights = false; // set to use scene lights\n\tthis.clipping = false; // set to use user-defined clipping planes\n\n\tthis.skinning = false; // set to use skinning attribute streams\n\tthis.morphTargets = false; // set to use morph targets\n\tthis.morphNormals = false; // set to use morph normals\n\n\tthis.extensions = {\n\t\tderivatives: false, // set to use derivatives\n\t\tfragDepth: false, // set to use fragment depth values\n\t\tdrawBuffers: false, // set to use draw buffers\n\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t};\n\n\t// When rendered geometry doesn't include these attributes but the material does,\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\tthis.defaultAttributeValues = {\n\t\t'color': [ 1, 1, 1 ],\n\t\t'uv': [ 0, 0 ],\n\t\t'uv2': [ 0, 0 ]\n\t};\n\n\tthis.index0AttributeName = undefined;\n\tthis.uniformsNeedUpdate = false;\n\n\tif ( parameters !== undefined ) {\n\n\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nShaderMaterial.prototype = Object.create( Material.prototype );\nShaderMaterial.prototype.constructor = ShaderMaterial;\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nShaderMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.fragmentShader = source.fragmentShader;\n\tthis.vertexShader = source.vertexShader;\n\n\tthis.uniforms = UniformsUtils.clone( source.uniforms );\n\n\tthis.defines = Object.assign( {}, source.defines );\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.lights = source.lights;\n\tthis.clipping = source.clipping;\n\n\tthis.skinning = source.skinning;\n\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\tthis.extensions = source.extensions;\n\n\treturn this;\n\n};\n\nShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\tdata.uniforms = this.uniforms;\n\tdata.vertexShader = this.vertexShader;\n\tdata.fragmentShader = this.fragmentShader;\n\n\treturn data;\n\n};\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Ray( origin, direction ) {\n\n\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n}\n\nObject.assign( Ray.prototype, {\n\n\tset: function ( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t},\n\n\tlookAt: function ( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\trecast: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function recast( t ) {\n\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tvar directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t},\n\n\tdistanceSqToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceSqToPoint( point ) {\n\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t// point behind the ray\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t}\n\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\treturn v1.distanceToSquared( point );\n\n\t\t};\n\n\t}(),\n\n\tdistanceSqToSegment: function () {\n\n\t\tvar segCenter = new Vector3();\n\t\tvar segDir = new Vector3();\n\t\tvar diff = new Vector3();\n\n\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\tvar c = diff.lengthSq();\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\tif ( det > 0 ) {\n\n\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\n\t\t};\n\n\t}(),\n\n\tintersectSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectSphere( sphere, target ) {\n\n\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\tvar tca = v1.dot( this.direction );\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\tvar t0 = tca - thc;\n\n\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\tvar t1 = tca + thc;\n\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t// test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\treturn this.at( t0, target );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\n\n\t},\n\n\tdistanceToPlane: function ( plane ) {\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t},\n\n\tintersectPlane: function ( plane, target ) {\n\n\t\tvar t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t},\n\n\tintersectBox: function ( box, target ) {\n\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tvar invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tvar origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t},\n\n\tintersectsBox: ( function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t};\n\n\t} )(),\n\n\tintersectTriangle: function () {\n\n\t\t// Compute the offset origin, edges, and normal.\n\t\tvar diff = new Vector3();\n\t\tvar edge1 = new Vector3();\n\t\tvar edge2 = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\treturn function intersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\tedge1.subVectors( b, a );\n\t\t\tedge2.subVectors( c, a );\n\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\tvar sign;\n\n\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\tsign = 1;\n\n\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\tsign = - 1;\n\t\t\t\tDdN = - DdN;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tdiff.subVectors( this.origin, a );\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t// b1 < 0, no intersection\n\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t// b2 < 0, no intersection\n\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// b1+b2 > 1, no intersection\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Line intersects triangle, check if ray does.\n\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t// t < 0, no intersection\n\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Ray intersects triangle.\n\t\t\treturn this.at( QdN / DdN, target );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix4: function ( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Line3( start, end ) {\n\n\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n}\n\nObject.assign( Line3.prototype, {\n\n\tset: function ( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t},\n\n\tdelta: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t},\n\n\tdistanceSq: function () {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t},\n\n\tdistance: function () {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tclosestPointToPointParameter: function () {\n\n\t\tvar startP = new Vector3();\n\t\tvar startEnd = new Vector3();\n\n\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n\t\t\tstartP.subVectors( point, this.start );\n\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\tif ( clampToLine ) {\n\n\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t\t}\n\n\t\t\treturn t;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, clampToLine, target ) {\n\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Triangle( a, b, c ) {\n\n\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n}\n\nObject.assign( Triangle, {\n\n\tgetNormal: function () {\n\n\t\tvar v0 = new Vector3();\n\n\t\treturn function getNormal( a, b, c, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.subVectors( c, b );\n\t\t\tv0.subVectors( a, b );\n\t\t\ttarget.cross( v0 );\n\n\t\t\tvar targetLengthSq = target.lengthSq();\n\t\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn target.set( 0, 0, 0 );\n\n\t\t};\n\n\t}(),\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tgetBarycoord: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function getBarycoord( point, a, b, c, target ) {\n\n\t\t\tv0.subVectors( c, a );\n\t\t\tv1.subVectors( b, a );\n\t\t\tv2.subVectors( point, a );\n\n\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\tvar dot12 = v1.dot( v2 );\n\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn target.set( 1 - u - v, v, u );\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function containsPoint( point, a, b, c ) {\n\n\t\t\tTriangle.getBarycoord( point, a, b, c, v1 );\n\n\t\t\treturn ( v1.x >= 0 ) && ( v1.y >= 0 ) && ( ( v1.x + v1.y ) <= 1 );\n\n\t\t};\n\n\t}()\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tset: function ( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t},\n\n\tgetArea: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getArea() {\n\n\t\t\tv0.subVectors( this.c, this.b );\n\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t};\n\n\t}(),\n\n\tgetMidpoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t},\n\n\tgetNormal: function ( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t},\n\n\tgetPlane: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t},\n\n\tgetBarycoord: function ( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t},\n\n\tclosestPointToPoint: function () {\n\n\t\tvar plane = new Plane();\n\t\tvar edgeList = [ new Line3(), new Line3(), new Line3() ];\n\t\tvar projectedPoint = new Vector3();\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function closestPointToPoint( point, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar minDistance = Infinity;\n\n\t\t\t// project the point onto the plane of the triangle\n\n\t\t\tplane.setFromCoplanarPoints( this.a, this.b, this.c );\n\t\t\tplane.projectPoint( point, projectedPoint );\n\n\t\t\t// check if the projection lies within the triangle\n\n\t\t\tif ( this.containsPoint( projectedPoint ) === true ) {\n\n\t\t\t\t// if so, this is the closest point\n\n\t\t\t\ttarget.copy( projectedPoint );\n\n\t\t\t} else {\n\n\t\t\t\t// if not, the point falls outside the triangle. the target is the closest point to the triangle's edges or vertices\n\n\t\t\t\tedgeList[ 0 ].set( this.a, this.b );\n\t\t\t\tedgeList[ 1 ].set( this.b, this.c );\n\t\t\t\tedgeList[ 2 ].set( this.c, this.a );\n\n\t\t\t\tfor ( var i = 0; i < edgeList.length; i ++ ) {\n\n\t\t\t\t\tedgeList[ i ].closestPointToPoint( projectedPoint, true, closestPoint );\n\n\t\t\t\t\tvar distance = projectedPoint.distanceToSquared( closestPoint );\n\n\t\t\t\t\tif ( distance < minDistance ) {\n\n\t\t\t\t\t\tminDistance = distance;\n\n\t\t\t\t\t\ttarget.copy( closestPoint );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\nfunction Mesh( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Mesh';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\tthis.drawMode = TrianglesDrawMode;\n\n\tthis.updateMorphTargets();\n\n}\n\nMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Mesh,\n\n\tisMesh: true,\n\n\tsetDrawMode: function ( value ) {\n\n\t\tthis.drawMode = value;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.drawMode = source.drawMode;\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tvar geometry = this.geometry;\n\t\tvar m, ml, name;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( m = 0, ml = morphTargets.length; m < ml; m ++ ) {\n\n\t\t\t\t\tname = morphTargets[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tvar tempA = new Vector3();\n\t\tvar tempB = new Vector3();\n\t\tvar tempC = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tvar barycoord = new Vector3();\n\n\t\tvar intersectionPoint = new Vector3();\n\t\tvar intersectionPointWorld = new Vector3();\n\n\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\n\n\t\t\tTriangle.getBarycoord( point, p1, p2, p3, barycoord );\n\n\t\t\tuv1.multiplyScalar( barycoord.x );\n\t\t\tuv2.multiplyScalar( barycoord.y );\n\t\t\tuv3.multiplyScalar( barycoord.z );\n\n\t\t\tuv1.add( uv2 ).add( uv3 );\n\n\t\t\treturn uv1.clone();\n\n\t\t}\n\n\t\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\tvar intersect;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t} else {\n\n\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t\t}\n\n\t\t\tif ( intersect === null ) return null;\n\n\t\t\tintersectionPointWorld.copy( point );\n\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\treturn {\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\tobject: object\n\t\t\t};\n\n\t\t}\n\n\t\tfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, uv, a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( position, a );\n\t\t\tvB.fromBufferAttribute( position, b );\n\t\t\tvC.fromBufferAttribute( position, c );\n\n\t\t\tvar intersection = checkIntersection( object, material, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\tif ( intersection ) {\n\n\t\t\t\tif ( uv ) {\n\n\t\t\t\t\tuvA.fromBufferAttribute( uv, a );\n\t\t\t\t\tuvB.fromBufferAttribute( uv, b );\n\t\t\t\t\tuvC.fromBufferAttribute( uv, c );\n\n\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\n\n\t\t\t\t}\n\n\t\t\t\tvar face = new Face3( a, b, c );\n\t\t\t\tTriangle.getNormal( vA, vB, vC, face.normal );\n\n\t\t\t\tintersection.face = face;\n\n\t\t\t}\n\n\t\t\treturn intersection;\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\tif ( material === undefined ) return;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t// Check boundingBox before continuing\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t}\n\n\t\t\tvar intersection;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar a, b, c;\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\tvar groups = geometry.groups;\n\t\t\t\tvar drawRange = geometry.drawRange;\n\t\t\t\tvar i, j, il, jl;\n\t\t\t\tvar group, groupMaterial;\n\t\t\t\tvar start, end;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = j;\n\t\t\t\t\t\t\t\tb = j + 1;\n\t\t\t\t\t\t\t\tc = j + 2;\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\ta = i;\n\t\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar uvs;\n\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\n\n\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\n\n\t\t\t\t\t\tvA.set( 0, 0, 0 );\n\t\t\t\t\t\tvB.set( 0, 0, 0 );\n\t\t\t\t\t\tvC.set( 0, 0, 0 );\n\n\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\n\n\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\n\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\n\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvA.add( fvA );\n\t\t\t\t\t\tvB.add( fvB );\n\t\t\t\t\t\tvC.add( fvC );\n\n\t\t\t\t\t\tfvA = vA;\n\t\t\t\t\t\tfvB = vB;\n\t\t\t\t\t\tfvC = vC;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\n\n\tvar clearColor = new Color( 0x000000 );\n\tvar clearAlpha = 0;\n\n\tvar planeCamera, planeMesh;\n\tvar boxMesh;\n\n\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\tvar background = scene.background;\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && background.isCubeTexture ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tuniforms: ShaderLib.cube.uniforms,\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: true,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.removeAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.removeAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.tCube.value = background;\n\n\t\t\trenderList.push( boxMesh, boxMesh.geometry, boxMesh.material, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeCamera === undefined ) {\n\n\t\t\t\tplaneCamera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\tnew MeshBasicMaterial( { depthTest: false, depthWrite: false, fog: false } )\n\t\t\t\t);\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.map = background;\n\n\t\t\t// TODO Push this to renderList\n\n\t\t\trenderer.renderBufferDirect( planeCamera, null, planeMesh.geometry, planeMesh.material, planeMesh, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBufferRenderer( gl, extensions, info ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\textension.drawArraysInstancedANGLE( mode, start, count, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tvar maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tvar maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tvar maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tvar maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tvar maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tvar maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tvar maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tvar maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tvar maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tvar vertexTextures = maxVertexTextures > 0;\n\tvar floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\n\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\treturn {\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures\n\n\t};\n\n}\n\n/**\n * @author tschw\n */\n\nfunction WebGLClipping() {\n\n\tvar scope = this,\n\n\t\tglobalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false,\n\n\t\tplane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tvar enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tcache.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\tdstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLExtensions( gl ) {\n\n\tvar extensions = {};\n\n\treturn {\n\n\t\tget: function ( name ) {\n\n\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\treturn extensions[ name ];\n\n\t\t\t}\n\n\t\t\tvar extension;\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t}\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\textensions[ name ] = extension;\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLGeometries( gl, attributes, info ) {\n\n\tvar geometries = {};\n\tvar wireframeAttributes = {};\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tvar geometry = event.target;\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t}\n\n\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\t// TODO Remove duplicate code\n\n\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\tdelete wireframeAttributes[ geometry.id ];\n\n\t\t}\n\n\t\tattribute = wireframeAttributes[ buffergeometry.id ];\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\tdelete wireframeAttributes[ buffergeometry.id ];\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tbuffergeometry = geometry;\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t}\n\n\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t}\n\n\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tvar index = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( var name in morphAttributes ) {\n\n\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\tif ( attribute ) return attribute;\n\n\t\tvar indices = [];\n\n\t\tvar geometryIndex = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t// console.time( 'wireframe' );\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tvar array = geometryIndex.array;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar array = geometryAttributes.position.array;\n\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tvar a = i + 0;\n\t\t\t\tvar b = i + 1;\n\t\t\t\tvar c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// console.timeEnd( 'wireframe' );\n\n\t\tattribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\n\t\tattributes.update( attribute, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\twireframeAttributes[ geometry.id ] = attribute;\n\n\t\treturn attribute;\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tvar type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\textension.drawElementsInstancedANGLE( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLInfo( gl ) {\n\n\tvar memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tvar render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\tinstanceCount = instanceCount || 1;\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.TRIANGLE_STRIP:\n\t\t\tcase gl.TRIANGLE_FAN:\n\t\t\t\trender.triangles += instanceCount * ( count - 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tvar influencesList = {};\n\tvar morphInfluences = new Float32Array( 8 );\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tvar objectInfluences = object.morphTargetInfluences;\n\n\t\tvar length = objectInfluences.length;\n\n\t\tvar influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\t// Remove current morphAttributes\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence[ 1 ] !== 0 ) {\n\n\t\t\t\tif ( morphTargets ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\tif ( morphNormals ) geometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\t// Add morphAttributes\n\n\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence ) {\n\n\t\t\t\tvar index = influence[ 0 ];\n\t\t\t\tvar value = influence[ 1 ];\n\n\t\t\t\tif ( value ) {\n\n\t\t\t\t\tif ( morphTargets ) geometry.addAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\t\t\t\t\tif ( morphNormals ) geometry.addAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLObjects( geometries, info ) {\n\n\tvar updateList = {};\n\n\tfunction update( object ) {\n\n\t\tvar frame = info.render.frame;\n\n\t\tvar geometry = object.geometry;\n\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\n\n\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateList[ buffergeometry.id ] = frame;\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\timages = images !== undefined ? images : [];\n\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.flipY = false;\n\n}\n\nCubeTexture.prototype = Object.create( Texture.prototype );\nCubeTexture.prototype.constructor = CubeTexture;\n\nCubeTexture.prototype.isCubeTexture = true;\n\nObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\tget: function () {\n\n\t\treturn this.image;\n\n\t},\n\n\tset: function ( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n * @author Mugen87 / https://github.com/Mugen87\n * @author mrdoob / http://mrdoob.com/\n *\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [renderer] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'renderer' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (renderer factorizations):\n *\n * .upload( gl, seq, values, renderer )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (renderer factorizations):\n *\n * .setValue( gl, name, value )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .set( gl, obj, prop )\n *\n * \t\tsets uniform from object and property with same name than uniform\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nvar emptyTexture = new Texture();\nvar emptyCubeTexture = new CubeTexture();\n\n// --- Base for inner nodes (including the root) ---\n\nfunction UniformContainer() {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nvar arrayCacheF32 = [];\nvar arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nvar mat4array = new Float32Array( 16 );\nvar mat3array = new Float32Array( 9 );\nvar mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tvar firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tvar n = nBlocks * blockSize,\n\t\tr = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( var i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( var i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( renderer, n ) {\n\n\tvar r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i )\n\t\tr[ i ] = renderer.allocTextureUnit();\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValue1f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\nfunction setValue1i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValue2fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValue3fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValue4fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or MatrixN)\n\nfunction setValue2fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValue3fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValue4fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar unit = renderer.allocTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\trenderer.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar unit = renderer.allocTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\trenderer.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\nfunction setValue2iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValue3iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValue4iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1f; // FLOAT\n\t\tcase 0x8b50: return setValue2fv; // _VEC2\n\t\tcase 0x8b51: return setValue3fv; // _VEC3\n\t\tcase 0x8b52: return setValue4fv; // _VEC4\n\n\t\tcase 0x8b5a: return setValue2fm; // _MAT2\n\t\tcase 0x8b5b: return setValue3fm; // _MAT3\n\t\tcase 0x8b5c: return setValue4fm; // _MAT4\n\n\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// Array of scalars\n\nfunction setValue1fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform1fv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\nfunction setValue1iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform1iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Array of vectors (flat or from THREE classes)\n\nfunction setValueV2a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 2 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform2fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueV3a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 3 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform3fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueV4a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 4 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform4fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\n// Array of matrices (flat or from THREE clases)\n\nfunction setValueM2a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 4 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueM3a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 9 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueM4a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 16 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1a( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( renderer, n );\n\n\tif ( arraysEqual( cache, units ) === false ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6a( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( renderer, n );\n\n\tif ( arraysEqual( cache, units ) === false ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1fv; // FLOAT\n\t\tcase 0x8b50: return setValueV2a; // _VEC2\n\t\tcase 0x8b51: return setValueV3a; // _VEC3\n\t\tcase 0x8b52: return setValueV4a; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2a; // _MAT2\n\t\tcase 0x8b5b: return setValueM3a; // _MAT3\n\t\tcase 0x8b5c: return setValueM4a; // _MAT4\n\n\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\n\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\tvar cache = this.cache;\n\n\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\tthis.cache = new Float32Array( data.length );\n\n\t}\n\n\tcopyArray( cache, data );\n\n};\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tUniformContainer.call( this ); // mix-in\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value ) {\n\n\t// Note: Don't need an extra 'renderer' parameter, since samplers\n\t// are not allowed in structured uniforms.\n\n\tvar seq = this.seq;\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ] );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tvar path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tvar match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\tid = match[ 1 ],\n\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tvar map = container.map, next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program, renderer ) {\n\n\tUniformContainer.call( this );\n\n\tthis.renderer = renderer;\n\n\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value ) {\n\n\tvar u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tvar v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, renderer ) {\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, renderer );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tvar r = [];\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction addLineNumbers( string ) {\n\n\tvar lines = string.split( '\\n' );\n\n\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tvar shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\n\n\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n\t}\n\n\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\n\t}\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\treturn shader;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar programIdCount = 0;\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t}\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tvar toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase Uncharted2ToneMapping:\n\t\t\ttoneMappingName = 'Uncharted2';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\textensions = extensions || {};\n\n\tvar chunks = [\n\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || ( parameters.normalMap && ! parameters.objectSpaceNormalMap ) || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tvar chunks = [];\n\n\tfor ( var name in defines ) {\n\n\t\tvar value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tvar attributes = {};\n\n\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\tvar info = gl.getActiveAttrib( program, i );\n\t\tvar name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\nfunction parseIncludes( string ) {\n\n\tvar pattern = /^[ \\t]*#include +<([\\w\\d.]+)>/gm;\n\n\tfunction replace( match, include ) {\n\n\t\tvar replace = ShaderChunk[ include ];\n\n\t\tif ( replace === undefined ) {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t\treturn parseIncludes( replace );\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction unrollLoops( string ) {\n\n\tvar pattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\tfunction replace( match, start, end, snippet ) {\n\n\t\tvar unroll = '';\n\n\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t}\n\n\t\treturn unroll;\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction WebGLProgram( renderer, extensions, code, material, shader, parameters ) {\n\n\tvar gl = renderer.context;\n\n\tvar defines = material.defines;\n\n\tvar vertexShader = shader.vertexShader;\n\tvar fragmentShader = shader.fragmentShader;\n\n\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t}\n\n\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t\tcase EquirectangularReflectionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\tbreak;\n\n\t\t\tcase SphericalReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t// console.log( 'building new program ' );\n\n\t//\n\n\tvar customExtensions = generateExtensions( material.extensions, parameters, extensions );\n\n\tvar customDefines = generateDefines( defines );\n\n\t//\n\n\tvar program = gl.createProgram();\n\n\tvar prefixVertex, prefixFragment;\n\n\tif ( material.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\tparameters.envMap && extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ) : '',\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + material.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = parseIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = parseIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tvar vertexGlsl = prefixVertex + vertexShader;\n\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tvar glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tvar glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( material.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tvar programLog = gl.getProgramInfoLog( program ).trim();\n\tvar vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\tvar runnable = true;\n\tvar haveDiagnostics = true;\n\n\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\trunnable = false;\n\n\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\n\t} else if ( programLog !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\thaveDiagnostics = false;\n\n\t}\n\n\tif ( haveDiagnostics ) {\n\n\t\tthis.diagnostics = {\n\n\t\t\trunnable: runnable,\n\t\t\tmaterial: material,\n\n\t\t\tprogramLog: programLog,\n\n\t\t\tvertexShader: {\n\n\t\t\t\tlog: vertexLog,\n\t\t\t\tprefix: prefixVertex\n\n\t\t\t},\n\n\t\t\tfragmentShader: {\n\n\t\t\t\tlog: fragmentLog,\n\t\t\t\tprefix: prefixFragment\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// clean up\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tvar cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program, renderer );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tvar cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t// DEPRECATED\n\n\tObject.defineProperties( this, {\n\n\t\tuniforms: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\treturn this.getUniforms();\n\n\t\t\t}\n\t\t},\n\n\t\tattributes: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\treturn this.getAttributes();\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\n\t//\n\n\tthis.name = shader.name;\n\tthis.id = programIdCount ++;\n\tthis.code = code;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLPrograms( renderer, extensions, capabilities ) {\n\n\tvar programs = [];\n\n\tvar shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'phong',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow'\n\t};\n\n\tvar parameterNames = [\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"displacementMap\", \"specularMap\",\n\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"\n\t];\n\n\n\tfunction allocateBones( object ) {\n\n\t\tvar skeleton = object.skeleton;\n\t\tvar bones = skeleton.bones;\n\n\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\tvar encoding;\n\n\t\tif ( ! map ) {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t} else if ( map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t}\n\n\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\tencoding = GammaEncoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tthis.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\t\tvar precision = capabilities.precision;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar parameters = {\n\n\t\t\tshaderID: shaderID,\n\n\t\t\tprecision: precision,\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\tenvMap: !! material.envMap,\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexColors: material.vertexColors,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t};\n\n\t\treturn parameters;\n\n\t};\n\n\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\tvar array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( material.fragmentShader );\n\t\t\tarray.push( material.vertexShader );\n\n\t\t}\n\n\t\tif ( material.defines !== undefined ) {\n\n\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t}\n\n\t\tarray.push( material.onBeforeCompile.toString() );\n\n\t\tarray.push( renderer.gammaOutput );\n\n\t\treturn array.join();\n\n\t};\n\n\tthis.acquireProgram = function ( material, shader, parameters, code ) {\n\n\t\tvar program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tvar programInfo = programs[ p ];\n\n\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\tprogram = programInfo;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, extensions, code, material, shader, parameters );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t};\n\n\tthis.releaseProgram = function ( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tvar i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t};\n\n\t// Exposed for resource monitoring & error feedback via renderer.info:\n\tthis.programs = programs;\n\n}\n\n/**\n * @author fordacious / fordacious.github.io\n */\n\nfunction WebGLProperties() {\n\n\tvar properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tvar map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program && b.program && a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction WebGLRenderList() {\n\n\tvar renderItems = [];\n\tvar renderItemsIndex = 0;\n\n\tvar opaque = [];\n\tvar transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction push( object, geometry, material, z, group ) {\n\n\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: material.program,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = material.program;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t\trenderItemsIndex ++;\n\n\t}\n\n\tfunction sort() {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( painterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( reversePainterSortStable );\n\n\t}\n\n\treturn {\n\t\topaque: opaque,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tvar lists = {};\n\n\tfunction get( scene, camera ) {\n\n\t\tvar hash = scene.id + ',' + camera.id;\n\t\tvar list = lists[ hash ];\n\n\t\tif ( list === undefined ) {\n\n\t\t\t// console.log( 'THREE.WebGLRenderLists:', hash );\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists[ hash ] = list;\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction UniformsCache() {\n\n\tvar lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tvar uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nvar count = 0;\n\nfunction WebGLLights() {\n\n\tvar cache = new UniformsCache();\n\n\tvar state = {\n\n\t\tid: count ++,\n\n\t\thash: '',\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tdirectional: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\tpoint: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tvar vector3 = new Vector3();\n\tvar matrix4 = new Matrix4();\n\tvar matrix42 = new Matrix4();\n\n\tfunction setup( lights, shadows, camera ) {\n\n\t\tvar r = 0, g = 0, b = 0;\n\n\t\tvar directionalLength = 0;\n\t\tvar pointLength = 0;\n\t\tvar spotLength = 0;\n\t\tvar rectAreaLength = 0;\n\t\tvar hemiLength = 0;\n\n\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\n\t\t\tvar color = light.color;\n\t\t\tvar intensity = light.intensity;\n\t\t\tvar distance = light.distance;\n\n\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tuniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tuniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t}\n\n\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tstate.directional.length = directionalLength;\n\t\tstate.spot.length = spotLength;\n\t\tstate.rectArea.length = rectAreaLength;\n\t\tstate.point.length = pointLength;\n\t\tstate.hemi.length = hemiLength;\n\n\t\tstate.hash = state.id + ',' + directionalLength + ',' + pointLength + ',' + spotLength + ',' + rectAreaLength + ',' + hemiLength + ',' + shadows.length;\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tstate: state\n\t};\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLRenderState() {\n\n\tvar lights = new WebGLLights();\n\n\tvar lightsArray = [];\n\tvar shadowsArray = [];\n\tvar spritesArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\t\tspritesArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction pushSprite( sprite ) {\n\n\t\tspritesArray.push( sprite );\n\n\t}\n\n\tfunction setupLights( camera ) {\n\n\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t}\n\n\tvar state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\t\tspritesArray: spritesArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow,\n\t\tpushSprite: pushSprite\n\t};\n\n}\n\nfunction WebGLRenderStates() {\n\n\tvar renderStates = {};\n\n\tfunction get( scene, camera ) {\n\n\t\tvar hash = scene.id + ',' + camera.id;\n\n\t\tvar renderState = renderStates[ hash ];\n\n\t\tif ( renderState === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState();\n\t\t\trenderStates[ hash ] = renderState;\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / https://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nfunction MeshDepthMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDepthMaterial';\n\n\tthis.depthPacking = BasicDepthPacking;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDepthMaterial.prototype = Object.create( Material.prototype );\nMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.depthPacking = source.depthPacking;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nfunction MeshDistanceMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDistanceMaterial';\n\n\tthis.referencePosition = new Vector3();\n\tthis.nearDistance = 1;\n\tthis.farDistance = 1000;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDistanceMaterial.prototype = Object.create( Material.prototype );\nMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.referencePosition.copy( source.referencePosition );\n\tthis.nearDistance = source.nearDistance;\n\tthis.farDistance = source.farDistance;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\tvar _frustum = new Frustum(),\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_shadowMapSize = new Vector2(),\n\t\t_maxShadowMapSize = new Vector2( maxTextureSize, maxTextureSize ),\n\n\t\t_lookTarget = new Vector3(),\n\t\t_lightPositionWorld = new Vector3(),\n\n\t\t_MorphingFlag = 1,\n\t\t_SkinningFlag = 2,\n\n\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t_materialCache = {};\n\n\tvar shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tvar cubeDirections = [\n\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t];\n\n\tvar cubeUps = [\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t];\n\n\tvar cube2DViewPorts = [\n\t\tnew Vector4(), new Vector4(), new Vector4(),\n\t\tnew Vector4(), new Vector4(), new Vector4()\n\t];\n\n\t// init\n\n\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\tvar depthMaterial = new MeshDepthMaterial( {\n\n\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\t//\n\n\t\tvar distanceMaterial = new MeshDistanceMaterial( {\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t}\n\n\t//\n\n\tvar scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\t// TODO Clean up (needed in case of contextlost)\n\t\tvar _gl = _renderer.context;\n\t\tvar _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.disable( _gl.BLEND );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tvar faceCount;\n\n\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\t\t\tvar shadow = light.shadow;\n\t\t\tvar isPointLight = light && light.isPointLight;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t// following orientation:\n\t\t\t\t//\n\t\t\t\t//  xzXZ\n\t\t\t\t//   y Y\n\t\t\t\t//\n\t\t\t\t// X - Positive x direction\n\t\t\t\t// x - Negative x direction\n\t\t\t\t// Y - Positive y direction\n\t\t\t\t// y - Negative y direction\n\t\t\t\t// Z - Positive z direction\n\t\t\t\t// z - Negative z direction\n\n\t\t\t\t// positive X\n\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative X\n\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Z\n\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative Z\n\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Y\n\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t// negative Y\n\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.isSpotLightShadow ) {\n\n\t\t\t\tshadow.update( light );\n\n\t\t\t}\n\n\t\t\tvar shadowMap = shadow.map;\n\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tfaceCount = 6;\n\n\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t// equal to inverse of the light's position\n\n\t\t\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t\t} else {\n\n\t\t\t\tfaceCount = 1;\n\n\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t// compute shadow matrix\n\n\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t);\n\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t_renderer.clear();\n\n\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t// run a single pass if not\n\n\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t}\n\n\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\trenderObject( scene, camera, shadowCamera, isPointLight );\n\n\t\t\t}\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t};\n\n\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tvar result = null;\n\n\t\tvar materialVariants = _depthMaterials;\n\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\tif ( isPointLight ) {\n\n\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( ! customMaterial ) {\n\n\t\t\tvar useMorphing = false;\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tif ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t} else if ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isSkinnedMesh && material.skinning === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t}\n\n\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\n\t\t\tvar variantIndex = 0;\n\n\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tresult.side = ( material.shadowSide != null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( isPointLight && result.isMeshDistanceMaterial ) {\n\n\t\t\tresult.referencePosition.copy( lightPositionWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, isPointLight ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, isPointLight );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.needsUpdate = true;\n\n}\n\nCanvasTexture.prototype = Object.create( Texture.prototype );\nCanvasTexture.prototype.constructor = CanvasTexture;\nCanvasTexture.prototype.isCanvasTexture = true;\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction WebGLSpriteRenderer( renderer, gl, state, textures, capabilities ) {\n\n\tvar vertexBuffer, elementBuffer;\n\tvar program, attributes, uniforms;\n\n\tvar texture;\n\n\t// decompose matrixWorld\n\n\tvar spritePosition = new Vector3();\n\tvar spriteRotation = new Quaternion();\n\tvar spriteScale = new Vector3();\n\n\tfunction init() {\n\n\t\tvar vertices = new Float32Array( [\n\t\t\t- 0.5, - 0.5, 0, 0,\n\t\t\t  0.5, - 0.5, 1, 0,\n\t\t\t  0.5, 0.5, 1, 1,\n\t\t\t- 0.5, 0.5, 0, 1\n\t\t] );\n\n\t\tvar faces = new Uint16Array( [\n\t\t\t0, 1, 2,\n\t\t\t0, 2, 3\n\t\t] );\n\n\t\tvertexBuffer = gl.createBuffer();\n\t\telementBuffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\tprogram = createProgram();\n\n\t\tattributes = {\n\t\t\tposition: gl.getAttribLocation( program, 'position' ),\n\t\t\tuv: gl.getAttribLocation( program, 'uv' )\n\t\t};\n\n\t\tuniforms = {\n\t\t\tuvOffset: gl.getUniformLocation( program, 'uvOffset' ),\n\t\t\tuvScale: gl.getUniformLocation( program, 'uvScale' ),\n\n\t\t\trotation: gl.getUniformLocation( program, 'rotation' ),\n\t\t\tcenter: gl.getUniformLocation( program, 'center' ),\n\t\t\tscale: gl.getUniformLocation( program, 'scale' ),\n\n\t\t\tcolor: gl.getUniformLocation( program, 'color' ),\n\t\t\tmap: gl.getUniformLocation( program, 'map' ),\n\t\t\topacity: gl.getUniformLocation( program, 'opacity' ),\n\n\t\t\tmodelViewMatrix: gl.getUniformLocation( program, 'modelViewMatrix' ),\n\t\t\tprojectionMatrix: gl.getUniformLocation( program, 'projectionMatrix' ),\n\n\t\t\tfogType: gl.getUniformLocation( program, 'fogType' ),\n\t\t\tfogDensity: gl.getUniformLocation( program, 'fogDensity' ),\n\t\t\tfogNear: gl.getUniformLocation( program, 'fogNear' ),\n\t\t\tfogFar: gl.getUniformLocation( program, 'fogFar' ),\n\t\t\tfogColor: gl.getUniformLocation( program, 'fogColor' ),\n\t\t\tfogDepth: gl.getUniformLocation( program, 'fogDepth' ),\n\n\t\t\talphaTest: gl.getUniformLocation( program, 'alphaTest' )\n\t\t};\n\n\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\tcanvas.width = 8;\n\t\tcanvas.height = 8;\n\n\t\tvar context = canvas.getContext( '2d' );\n\t\tcontext.fillStyle = 'white';\n\t\tcontext.fillRect( 0, 0, 8, 8 );\n\n\t\ttexture = new CanvasTexture( canvas );\n\n\t}\n\n\tthis.render = function ( sprites, scene, camera ) {\n\n\t\tif ( sprites.length === 0 ) return;\n\n\t\t// setup gl\n\n\t\tif ( program === undefined ) {\n\n\t\t\tinit();\n\n\t\t}\n\n\t\tstate.useProgram( program );\n\n\t\tstate.initAttributes();\n\t\tstate.enableAttribute( attributes.position );\n\t\tstate.enableAttribute( attributes.uv );\n\t\tstate.disableUnusedAttributes();\n\n\t\tstate.disable( gl.CULL_FACE );\n\t\tstate.enable( gl.BLEND );\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\n\n\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\tgl.uniform1i( uniforms.map, 0 );\n\n\t\tvar oldFogType = 0;\n\t\tvar sceneFogType = 0;\n\t\tvar fog = scene.fog;\n\n\t\tif ( fog ) {\n\n\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\n\n\t\t\tif ( fog.isFog ) {\n\n\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\n\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\n\t\t\t\toldFogType = 1;\n\t\t\t\tsceneFogType = 1;\n\n\t\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\n\t\t\t\toldFogType = 2;\n\t\t\t\tsceneFogType = 2;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgl.uniform1i( uniforms.fogType, 0 );\n\t\t\toldFogType = 0;\n\t\t\tsceneFogType = 0;\n\n\t\t}\n\n\n\t\t// update positions and sort\n\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\tvar sprite = sprites[ i ];\n\n\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\n\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\n\n\t\t}\n\n\t\tsprites.sort( painterSortStable );\n\n\t\t// render all sprites\n\n\t\tvar scale = [];\n\t\tvar center = [];\n\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\tvar sprite = sprites[ i ];\n\t\t\tvar material = sprite.material;\n\n\t\t\tif ( material.visible === false ) continue;\n\n\t\t\tsprite.onBeforeRender( renderer, scene, camera, undefined, material, undefined );\n\n\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\n\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\n\n\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\n\n\t\t\tscale[ 0 ] = spriteScale.x;\n\t\t\tscale[ 1 ] = spriteScale.y;\n\n\t\t\tcenter[ 0 ] = sprite.center.x - 0.5;\n\t\t\tcenter[ 1 ] = sprite.center.y - 0.5;\n\n\t\t\tvar fogType = 0;\n\n\t\t\tif ( scene.fog && material.fog ) {\n\n\t\t\t\tfogType = sceneFogType;\n\n\t\t\t}\n\n\t\t\tif ( oldFogType !== fogType ) {\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\n\t\t\t\toldFogType = fogType;\n\n\t\t\t}\n\n\t\t\tif ( material.map !== null ) {\n\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\n\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\n\n\t\t\t} else {\n\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\n\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\n\n\t\t\t}\n\n\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\n\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\n\n\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\n\t\t\tgl.uniform2fv( uniforms.center, center );\n\t\t\tgl.uniform2fv( uniforms.scale, scale );\n\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\t\t\tstate.buffers.depth.setTest( material.depthTest );\n\t\t\tstate.buffers.depth.setMask( material.depthWrite );\n\t\t\tstate.buffers.color.setMask( material.colorWrite );\n\n\t\t\ttextures.setTexture2D( material.map || texture, 0 );\n\n\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\tsprite.onAfterRender( renderer, scene, camera, undefined, material, undefined );\n\n\t\t}\n\n\t\t// restore gl\n\n\t\tstate.enable( gl.CULL_FACE );\n\n\t\tstate.reset();\n\n\t};\n\n\tfunction createProgram() {\n\n\t\tvar program = gl.createProgram();\n\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\n\t\tgl.shaderSource( vertexShader, [\n\n\t\t\t'precision ' + capabilities.precision + ' float;',\n\n\t\t\t'#define SHADER_NAME ' + 'SpriteMaterial',\n\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform float rotation;',\n\t\t\t'uniform vec2 center;',\n\t\t\t'uniform vec2 scale;',\n\t\t\t'uniform vec2 uvOffset;',\n\t\t\t'uniform vec2 uvScale;',\n\n\t\t\t'attribute vec2 position;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'varying vec2 vUV;',\n\t\t\t'varying float fogDepth;',\n\n\t\t\t'void main() {',\n\n\t\t\t'\tvUV = uvOffset + uv * uvScale;',\n\n\t\t\t'\tvec2 alignedPosition = ( position - center ) * scale;',\n\n\t\t\t'\tvec2 rotatedPosition;',\n\t\t\t'\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\n\t\t\t'\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\n\n\t\t\t'\tvec4 mvPosition;',\n\n\t\t\t'\tmvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\n\t\t\t'\tmvPosition.xy += rotatedPosition;',\n\n\t\t\t'\tgl_Position = projectionMatrix * mvPosition;',\n\n\t\t\t'\tfogDepth = - mvPosition.z;',\n\n\t\t\t'}'\n\n\t\t].join( '\\n' ) );\n\n\t\tgl.shaderSource( fragmentShader, [\n\n\t\t\t'precision ' + capabilities.precision + ' float;',\n\n\t\t\t'#define SHADER_NAME ' + 'SpriteMaterial',\n\n\t\t\t'uniform vec3 color;',\n\t\t\t'uniform sampler2D map;',\n\t\t\t'uniform float opacity;',\n\n\t\t\t'uniform int fogType;',\n\t\t\t'uniform vec3 fogColor;',\n\t\t\t'uniform float fogDensity;',\n\t\t\t'uniform float fogNear;',\n\t\t\t'uniform float fogFar;',\n\t\t\t'uniform float alphaTest;',\n\n\t\t\t'varying vec2 vUV;',\n\t\t\t'varying float fogDepth;',\n\n\t\t\t'void main() {',\n\n\t\t\t'\tvec4 texture = texture2D( map, vUV );',\n\n\t\t\t'\tgl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\n\n\t\t\t'\tif ( gl_FragColor.a < alphaTest ) discard;',\n\n\t\t\t'\tif ( fogType > 0 ) {',\n\n\t\t\t'\t\tfloat fogFactor = 0.0;',\n\n\t\t\t'\t\tif ( fogType == 1 ) {',\n\n\t\t\t'\t\t\tfogFactor = smoothstep( fogNear, fogFar, fogDepth );',\n\n\t\t\t'\t\t} else {',\n\n\t\t\t'\t\t\tconst float LOG2 = 1.442695;',\n\t\t\t'\t\t\tfogFactor = exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 );',\n\t\t\t'\t\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\n\n\t\t\t'\t\t}',\n\n\t\t\t'\t\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );',\n\n\t\t\t'\t}',\n\n\t\t\t'}'\n\n\t\t].join( '\\n' ) );\n\n\t\tgl.compileShader( vertexShader );\n\t\tgl.compileShader( fragmentShader );\n\n\t\tgl.attachShader( program, vertexShader );\n\t\tgl.attachShader( program, fragmentShader );\n\n\t\tgl.linkProgram( program );\n\n\t\treturn program;\n\n\t}\n\n\tfunction painterSortStable( a, b ) {\n\n\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else {\n\n\t\t\treturn b.id - a.id;\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLState( gl, extensions, utils ) {\n\n\tfunction ColorBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar color = new Vector4();\n\t\tvar currentColorMask = null;\n\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentDepthMask = null;\n\t\tvar currentDepthFunc = null;\n\t\tvar currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentStencilMask = null;\n\t\tvar currentStencilFunc = null;\n\t\tvar currentStencilRef = null;\n\t\tvar currentStencilFuncMask = null;\n\t\tvar currentStencilFail = null;\n\t\tvar currentStencilZFail = null;\n\t\tvar currentStencilZPass = null;\n\t\tvar currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar colorBuffer = new ColorBuffer();\n\tvar depthBuffer = new DepthBuffer();\n\tvar stencilBuffer = new StencilBuffer();\n\n\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\tvar capabilities = {};\n\n\tvar compressedTextureFormats = null;\n\n\tvar currentProgram = null;\n\n\tvar currentBlending = null;\n\tvar currentBlendEquation = null;\n\tvar currentBlendSrc = null;\n\tvar currentBlendDst = null;\n\tvar currentBlendEquationAlpha = null;\n\tvar currentBlendSrcAlpha = null;\n\tvar currentBlendDstAlpha = null;\n\tvar currentPremultipledAlpha = false;\n\n\tvar currentFlipSided = null;\n\tvar currentCullFace = null;\n\n\tvar currentLineWidth = null;\n\n\tvar currentPolygonOffsetFactor = null;\n\tvar currentPolygonOffsetUnits = null;\n\n\tvar maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tvar lineWidthAvailable = false;\n\tvar version = 0;\n\tvar glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tvar currentTextureSlot = null;\n\tvar currentBoundTextures = {};\n\n\tvar currentScissor = new Vector4();\n\tvar currentViewport = new Vector4();\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tvar texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tvar emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tenable( gl.BLEND );\n\tsetBlending( NormalBlending );\n\n\t//\n\n\tfunction initAttributes() {\n\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction enable( id ) {\n\n\t\tif ( capabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tcapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( capabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tcapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction getCompressedTextureFormats() {\n\n\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\tcompressedTextureFormats = [];\n\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_astc' ) ) {\n\n\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\n\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn compressedTextureFormats;\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending !== NoBlending ) {\n\n\t\t\tenable( gl.BLEND );\n\n\t\t} else {\n\n\t\t\tdisable( gl.BLEND );\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\tcase AdditiveBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase SubtractiveBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MultiplyBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcurrentBlendEquation = null;\n\t\t\tcurrentBlendSrc = null;\n\t\t\tcurrentBlendDst = null;\n\t\t\tcurrentBlendEquationAlpha = null;\n\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t} else {\n\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\t\tgl.blendEquationSeparate( utils.convert( blendEquation ), utils.convert( blendEquationAlpha ) );\n\n\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t\t}\n\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\t\tgl.blendFuncSeparate( utils.convert( blendSrc ), utils.convert( blendDst ), utils.convert( blendSrcAlpha ), utils.convert( blendDstAlpha ) );\n\n\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tvar flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcapabilities = {};\n\n\t\tcompressedTextureFormats = null;\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlending = null;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\tenable: enable,\n\t\tdisable: disable,\n\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tvar _isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext ); /* global WebGL2RenderingContext */\n\tvar _videoTextures = {};\n\tvar _canvas;\n\n\t//\n\n\tfunction clampToMaxSize( image, maxSize ) {\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tif ( 'data' in image ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\n\t\t\t// premultiplied alpha.\n\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\n\n\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tcanvas.width = Math.floor( image.width * scale );\n\t\t\tcanvas.height = Math.floor( image.height * scale );\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\treturn canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction makePowerOfTwo( image ) {\n\n\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement || image instanceof ImageBitmap ) {\n\n\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t\t_canvas.width = _Math.floorPowerOfTwo( image.width );\n\t\t\t_canvas.height = _Math.floorPowerOfTwo( image.height );\n\n\t\t\tvar context = _canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, _canvas.width, _canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + _canvas.width + 'x' + _canvas.height, image );\n\n\t\t\treturn _canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, isPowerOfTwo ) {\n\n\t\treturn texture.generateMipmaps && isPowerOfTwo &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tvar texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\tdelete _videoTextures[ texture.id ];\n\n\t\t}\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tvar renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\n\n\t\t\t// cube texture\n\n\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\n\n\t\t} else {\n\n\t\t\t// 2D texture\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\t// remove all webgl properties\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget.texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tvar image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image.length === 6 ) {\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\n\n\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\n\t\t\t\tvar isCompressed = ( texture && texture.isCompressedTexture );\n\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\tvar cubeImage = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, texture, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t} else {\n\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\n\n\t}\n\n\tfunction setTextureParameters( textureType, texture, isPowerOfTwoImage ) {\n\n\t\tvar extension;\n\n\t\tif ( isPowerOfTwoImage ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, utils.convert( texture.wrapS ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, utils.convert( texture.wrapT ) );\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, utils.convert( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, utils.convert( texture.minFilter ) );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\n\n\t\t\t}\n\n\t\t}\n\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension ) {\n\n\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\tif ( texture.type === HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\n\n\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\n\n\t\t\timage = makePowerOfTwo( image );\n\n\t\t}\n\n\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\tglType = utils.convert( texture.type );\n\n\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\n\n\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tvar internalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\tif ( ! _isWebGL2 ) throw new Error( 'Float Depth Texture only supported in WebGL2.0' );\n\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t} else if ( _isWebGL2 ) {\n\n\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthFormat && internalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\tinternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\tgenerateMipmap( _gl.TEXTURE_2D, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\tstate.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\t// FIXME: We don't support !depth !stencil\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\tinfo.memory.textures ++;\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n\t\t} else {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tvar texture = renderTarget.texture;\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isTargetPowerOfTwo ) ) {\n\n\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\tstate.bindTexture( target, null );\n\n\t\t}\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tvar id = texture.id;\n\t\tvar frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures[ id ] !== frame ) {\n\n\t\t\t_videoTextures[ id ] = frame;\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\n}\n\n/**\n * @author thespite / http://www.twitter.com/thespite\n */\n\nfunction WebGLUtils( gl, extensions ) {\n\n\tfunction convert( p ) {\n\n\t\tvar extension;\n\n\t\tif ( p === RepeatWrapping ) return gl.REPEAT;\n\t\tif ( p === ClampToEdgeWrapping ) return gl.CLAMP_TO_EDGE;\n\t\tif ( p === MirroredRepeatWrapping ) return gl.MIRRORED_REPEAT;\n\n\t\tif ( p === NearestFilter ) return gl.NEAREST;\n\t\tif ( p === NearestMipMapNearestFilter ) return gl.NEAREST_MIPMAP_NEAREST;\n\t\tif ( p === NearestMipMapLinearFilter ) return gl.NEAREST_MIPMAP_LINEAR;\n\n\t\tif ( p === LinearFilter ) return gl.LINEAR;\n\t\tif ( p === LinearMipMapNearestFilter ) return gl.LINEAR_MIPMAP_NEAREST;\n\t\tif ( p === LinearMipMapLinearFilter ) return gl.LINEAR_MIPMAP_LINEAR;\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedShort565Type ) return gl.UNSIGNED_SHORT_5_6_5;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\tif ( p === AddEquation ) return gl.FUNC_ADD;\n\t\tif ( p === SubtractEquation ) return gl.FUNC_SUBTRACT;\n\t\tif ( p === ReverseSubtractEquation ) return gl.FUNC_REVERSE_SUBTRACT;\n\n\t\tif ( p === ZeroFactor ) return gl.ZERO;\n\t\tif ( p === OneFactor ) return gl.ONE;\n\t\tif ( p === SrcColorFactor ) return gl.SRC_COLOR;\n\t\tif ( p === OneMinusSrcColorFactor ) return gl.ONE_MINUS_SRC_COLOR;\n\t\tif ( p === SrcAlphaFactor ) return gl.SRC_ALPHA;\n\t\tif ( p === OneMinusSrcAlphaFactor ) return gl.ONE_MINUS_SRC_ALPHA;\n\t\tif ( p === DstAlphaFactor ) return gl.DST_ALPHA;\n\t\tif ( p === OneMinusDstAlphaFactor ) return gl.ONE_MINUS_DST_ALPHA;\n\n\t\tif ( p === DstColorFactor ) return gl.DST_COLOR;\n\t\tif ( p === OneMinusDstColorFactor ) return gl.ONE_MINUS_DST_COLOR;\n\t\tif ( p === SrcAlphaSaturateFactor ) return gl.SRC_ALPHA_SATURATE;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn p;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === MinEquation || p === MaxEquation ) {\n\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Group() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Group';\n\n}\n\nGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Group,\n\n\tisGroup: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author tschw\n */\n\nfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'PerspectiveCamera';\n\n\tthis.fov = fov !== undefined ? fov : 50;\n\tthis.zoom = 1;\n\n\tthis.near = near !== undefined ? near : 0.1;\n\tthis.far = far !== undefined ? far : 2000;\n\tthis.focus = 10;\n\n\tthis.aspect = aspect !== undefined ? aspect : 1;\n\tthis.view = null;\n\n\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\tthis.updateProjectionMatrix();\n\n}\n\nPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: PerspectiveCamera,\n\n\tisPerspectiveCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength: function ( focalLength ) {\n\n\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength: function () {\n\n\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t},\n\n\tgetEffectiveFOV: function () {\n\n\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t},\n\n\tgetFilmWidth: function () {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t},\n\n\tgetFilmHeight: function () {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t},\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   var w = 1920;\n\t *   var h = 1080;\n\t *   var fullWidth = w * 3;\n\t *   var fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar near = this.near,\n\t\t\ttop = near * Math.tan(\n\t\t\t\t_Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\theight = 2 * top,\n\t\t\twidth = this.aspect * height,\n\t\t\tleft = - 0.5 * width,\n\t\t\tview = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tvar skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ArrayCamera( array ) {\n\n\tPerspectiveCamera.call( this );\n\n\tthis.cameras = array || [];\n\n}\n\nArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\tconstructor: ArrayCamera,\n\n\tisArrayCamera: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebVRManager( renderer ) {\n\n\tvar scope = this;\n\n\tvar device = null;\n\tvar frameData = null;\n\n\tvar poseTarget = null;\n\n\tvar controllers = [];\n\tvar standingMatrix = new Matrix4();\n\tvar standingMatrixInverse = new Matrix4();\n\n\tif ( typeof window !== 'undefined' && 'VRFrameData' in window ) {\n\n\t\tframeData = new window.VRFrameData();\n\t\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\n\n\t}\n\n\tvar matrixWorldInverse = new Matrix4();\n\tvar tempQuaternion = new Quaternion();\n\tvar tempPosition = new Vector3();\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.bounds = new Vector4( 0.0, 0.0, 0.5, 1.0 );\n\tcameraL.layers.enable( 1 );\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.bounds = new Vector4( 0.5, 0.0, 0.5, 1.0 );\n\tcameraR.layers.enable( 2 );\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tfunction isPresenting() {\n\n\t\treturn device !== null && device.isPresenting === true;\n\n\t}\n\n\tvar currentSize, currentPixelRatio;\n\n\tfunction onVRDisplayPresentChange() {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\n\t\t\tvar renderWidth = eyeParameters.renderWidth;\n\t\t\tvar renderHeight = eyeParameters.renderHeight;\n\n\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\tcurrentSize = renderer.getSize();\n\n\t\t\trenderer.setDrawingBufferSize( renderWidth * 2, renderHeight, 1 );\n\n\t\t\tanimation.start();\n\n\t\t} else if ( scope.enabled ) {\n\n\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t}\n\n\t//\n\n\tvar isTriggerPressed = false;\n\n\tfunction findGamepad( id ) {\n\n\t\tvar gamepads = navigator.getGamepads && navigator.getGamepads();\n\n\t\tfor ( var i = 0, j = 0, l = gamepads.length; i < l; i ++ ) {\n\n\t\t\tvar gamepad = gamepads[ i ];\n\n\t\t\tif ( gamepad && ( gamepad.id === 'Daydream Controller' ||\n\t\t\t\tgamepad.id === 'Gear VR Controller' || gamepad.id === 'Oculus Go Controller' ||\n\t\t\t\tgamepad.id === 'OpenVR Gamepad' || gamepad.id.startsWith( 'Oculus Touch' ) ||\n\t\t\t\tgamepad.id.startsWith( 'Spatial Controller' ) ) ) {\n\n\t\t\t\tif ( j === id ) return gamepad;\n\n\t\t\t\tj ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateControllers() {\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar gamepad = findGamepad( i );\n\n\t\t\tif ( gamepad !== undefined && gamepad.pose !== undefined ) {\n\n\t\t\t\tif ( gamepad.pose === null ) return;\n\n\t\t\t\t//  Pose\n\n\t\t\t\tvar pose = gamepad.pose;\n\n\t\t\t\tif ( pose.hasPosition === false ) controller.position.set( 0.2, - 0.6, - 0.05 );\n\n\t\t\t\tif ( pose.position !== null ) controller.position.fromArray( pose.position );\n\t\t\t\tif ( pose.orientation !== null ) controller.quaternion.fromArray( pose.orientation );\n\t\t\t\tcontroller.matrix.compose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\tcontroller.matrix.premultiply( standingMatrix );\n\t\t\t\tcontroller.matrix.decompose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\tcontroller.matrixWorldNeedsUpdate = true;\n\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t//  Trigger\n\n\t\t\t\tvar buttonId = gamepad.id === 'Daydream Controller' ? 0 : 1;\n\n\t\t\t\tif ( isTriggerPressed !== gamepad.buttons[ buttonId ].pressed ) {\n\n\t\t\t\t\tisTriggerPressed = gamepad.buttons[ buttonId ].pressed;\n\n\t\t\t\t\tif ( isTriggerPressed ) {\n\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectstart' } );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectend' } );\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'select' } );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tcontroller.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.enabled = false;\n\tthis.userHeight = 1.6;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new Group();\n\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\tcontroller.visible = false;\n\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\treturn controller;\n\n\t};\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\n\t\tanimation.setContext( value );\n\n\t};\n\n\tthis.setPoseTarget = function ( object ) {\n\n\t\tif ( object !== undefined ) poseTarget = object;\n\n\t};\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tif ( device === null ) {\n\n\t\t\tcamera.position.set( 0, scope.userHeight, 0 );\n\t\t\treturn camera;\n\n\t\t}\n\n\t\tdevice.depthNear = camera.near;\n\t\tdevice.depthFar = camera.far;\n\n\t\tdevice.getFrameData( frameData );\n\n\t\t//\n\n\t\tvar stageParameters = device.stageParameters;\n\n\t\tif ( stageParameters ) {\n\n\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\n\n\t\t} else {\n\n\t\t\tstandingMatrix.makeTranslation( 0, scope.userHeight, 0 );\n\n\t\t}\n\n\n\t\tvar pose = frameData.pose;\n\t\tvar poseObject = poseTarget !== null ? poseTarget : camera;\n\n\t\t// We want to manipulate poseObject by its position and quaternion components since users may rely on them.\n\t\tposeObject.matrix.copy( standingMatrix );\n\t\tposeObject.matrix.decompose( poseObject.position, poseObject.quaternion, poseObject.scale );\n\n\t\tif ( pose.orientation !== null ) {\n\n\t\t\ttempQuaternion.fromArray( pose.orientation );\n\t\t\tposeObject.quaternion.multiply( tempQuaternion );\n\n\t\t}\n\n\t\tif ( pose.position !== null ) {\n\n\t\t\ttempQuaternion.setFromRotationMatrix( standingMatrix );\n\t\t\ttempPosition.fromArray( pose.position );\n\t\t\ttempPosition.applyQuaternion( tempQuaternion );\n\t\t\tposeObject.position.add( tempPosition );\n\n\t\t}\n\n\t\tposeObject.updateMatrixWorld();\n\n\t\tif ( device.isPresenting === false ) return camera;\n\n\t\t//\n\n\t\tcameraL.near = camera.near;\n\t\tcameraR.near = camera.near;\n\n\t\tcameraL.far = camera.far;\n\t\tcameraR.far = camera.far;\n\n\t\tcameraVR.matrixWorld.copy( camera.matrixWorld );\n\t\tcameraVR.matrixWorldInverse.copy( camera.matrixWorldInverse );\n\n\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\n\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\n\n\t\t// TODO (mrdoob) Double check this code\n\n\t\tstandingMatrixInverse.getInverse( standingMatrix );\n\n\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\n\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\tvar parent = poseObject.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\n\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\n\n\t\t}\n\n\t\t// envMap and Mirror needs camera.matrixWorld\n\n\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\n\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\n\n\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\n\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\n\n\t\t// HACK (mrdoob)\n\t\t// https://github.com/w3c/webvr/issues/203\n\n\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t//\n\n\t\tvar layers = device.getLayers();\n\n\t\tif ( layers.length ) {\n\n\t\t\tvar layer = layers[ 0 ];\n\n\t\t\tif ( layer.leftBounds !== null && layer.leftBounds.length === 4 ) {\n\n\t\t\t\tcameraL.bounds.fromArray( layer.leftBounds );\n\n\t\t\t}\n\n\t\t\tif ( layer.rightBounds !== null && layer.rightBounds.length === 4 ) {\n\n\t\t\t\tcameraR.bounds.fromArray( layer.rightBounds );\n\n\t\t\t}\n\n\t\t}\n\n\t\tupdateControllers();\n\n\t\treturn cameraVR;\n\n\t};\n\n\tthis.getStandingMatrix = function () {\n\n\t\treturn standingMatrix;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar animation = new WebGLAnimation();\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tanimation.setAnimationLoop( callback );\n\n\t};\n\n\tthis.submitFrame = function () {\n\n\t\tif ( isPresenting() ) device.submitFrame();\n\n\t};\n\n\tthis.dispose = function () {\n\n\t\tif ( typeof window !== 'undefined' ) {\n\n\t\t\twindow.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange );\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebXRManager( renderer ) {\n\n\tvar gl = renderer.context;\n\n\tvar device = null;\n\tvar session = null;\n\n\tvar frameOfRef = null;\n\n\tvar pose = null;\n\n\tvar controllers = [];\n\tvar inputSources = [];\n\n\tfunction isPresenting() {\n\n\t\treturn session !== null && frameOfRef !== null;\n\n\n\t}\n\n\t//\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.layers.enable( 1 );\n\tcameraL.viewport = new Vector4();\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.layers.enable( 2 );\n\tcameraR.viewport = new Vector4();\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new Group();\n\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\tcontroller.visible = false;\n\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\treturn controller;\n\n\t};\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\n\t\tgl.setCompatibleXRDevice( value );\n\n\t};\n\n\t//\n\n\tfunction onSessionEvent( event ) {\n\n\t\tvar controller = controllers[ inputSources.indexOf( event.inputSource ) ];\n\t\tif ( controller ) controller.dispatchEvent( { type: event.type } );\n\n\t}\n\n\tfunction onSessionEnd() {\n\n\t\trenderer.setFramebuffer( null );\n\t\tanimation.stop();\n\n\t}\n\n\tthis.setSession = function ( value, options ) {\n\n\t\tsession = value;\n\n\t\tif ( session !== null ) {\n\n\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\n\t\t\tsession.baseLayer = new XRWebGLLayer( session, gl );\n\t\t\tsession.requestFrameOfReference( options.frameOfReferenceType ).then( function ( value ) {\n\n\t\t\t\tframeOfRef = value;\n\n\t\t\t\trenderer.setFramebuffer( session.baseLayer.framebuffer );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t} );\n\n\t\t\t//\n\n\t\t\tinputSources = session.getInputSources();\n\n\t\t\tsession.addEventListener( 'inputsourceschange', function () {\n\n\t\t\t\tinputSources = session.getInputSources();\n\t\t\t\tconsole.log( inputSources );\n\n\t\t\t} );\n\n\t\t}\n\n\t};\n\n\tfunction updateCamera( camera, parent ) {\n\n\t\tif ( parent === null ) {\n\n\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t} else {\n\n\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t}\n\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t}\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar parent = camera.parent;\n\t\t\tvar cameras = cameraVR.cameras;\n\n\t\t\t// apply camera.parent to cameraVR\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update camera and its children\n\n\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\t\tvar children = camera.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\treturn cameraVR;\n\n\t\t}\n\n\t\treturn camera;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tpose = frame.getDevicePose( frameOfRef );\n\n\t\tif ( pose !== null ) {\n\n\t\t\tvar layer = session.baseLayer;\n\t\t\tvar views = frame.views;\n\n\t\t\tfor ( var i = 0; i < views.length; i ++ ) {\n\n\t\t\t\tvar view = views[ i ];\n\t\t\t\tvar viewport = layer.getViewport( view );\n\t\t\t\tvar viewMatrix = pose.getViewMatrix( view );\n\n\t\t\t\tvar camera = cameraVR.cameras[ i ];\n\t\t\t\tcamera.matrix.fromArray( viewMatrix ).getInverse( camera.matrix );\n\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t// HACK (mrdoob)\n\t\t\t\t\t// https://github.com/w3c/webvr/issues/203\n\n\t\t\t\t\tcameraVR.projectionMatrix.copy( camera.projectionMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar inputSource = inputSources[ i ];\n\n\t\t\tif ( inputSource ) {\n\n\t\t\t\tvar inputPose = frame.getInputPose( inputSource, frameOfRef );\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\tcontroller.matrix.elements = inputPose.pointerMatrix;\n\t\t\t\t\tcontroller.matrix.decompose( controller.position, controller.rotation, controller.scale );\n\t\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcontroller.visible = false;\n\n\t\t}\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\n\t};\n\n\tthis.dispose = function () {};\n\n\t// DEPRECATED\n\n\tthis.getStandingMatrix = function () {\n\n\t\tconsole.warn( 'THREE.WebXRManager: getStandingMatrix() is no longer needed.' );\n\t\treturn new THREE.Matrix4();\n\n\t};\n\n\tthis.submitFrame = function () {};\n\n}\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n * @author tschw\n */\n\nfunction WebGLRenderer( parameters ) {\n\n\tconsole.log( 'THREE.WebGLRenderer', REVISION );\n\n\tparameters = parameters || {};\n\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default';\n\n\tvar currentRenderList = null;\n\tvar currentRenderState = null;\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\tthis.context = null;\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.gammaInput = false;\n\tthis.gammaOutput = false;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = LinearToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\tthis.toneMappingWhitePoint = 1.0;\n\n\t// morphs\n\n\tthis.maxMorphTargets = 8;\n\tthis.maxMorphNormals = 4;\n\n\t// internal properties\n\n\tvar _this = this,\n\n\t\t_isContextLost = false,\n\n\t\t// internal state cache\n\n\t\t_framebuffer = null,\n\n\t\t_currentRenderTarget = null,\n\t\t_currentFramebuffer = null,\n\t\t_currentMaterialId = - 1,\n\t\t_currentGeometryProgram = '',\n\n\t\t_currentCamera = null,\n\t\t_currentArrayCamera = null,\n\n\t\t_currentViewport = new Vector4(),\n\t\t_currentScissor = new Vector4(),\n\t\t_currentScissorTest = null,\n\n\t\t//\n\n\t\t_usedTextureUnits = 0,\n\n\t\t//\n\n\t\t_width = _canvas.width,\n\t\t_height = _canvas.height,\n\n\t\t_pixelRatio = 1,\n\n\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t_scissorTest = false,\n\n\t\t// frustum\n\n\t\t_frustum = new Frustum(),\n\n\t\t// clipping\n\n\t\t_clipping = new WebGLClipping(),\n\t\t_clippingEnabled = false,\n\t\t_localClippingEnabled = false,\n\n\t\t// camera matrices cache\n\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_vector3 = new Vector3();\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tvar _gl;\n\n\ttry {\n\n\t\tvar contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference\n\t\t};\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\n\t}\n\n\tvar extensions, capabilities, state, info;\n\tvar properties, textures, attributes, geometries, objects;\n\tvar programCache, renderLists, renderStates;\n\n\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\tvar spriteRenderer;\n\n\tvar utils;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\t\textensions.get( 'WEBGL_depth_texture' );\n\t\textensions.get( 'OES_texture_float' );\n\t\textensions.get( 'OES_texture_float_linear' );\n\t\textensions.get( 'OES_texture_half_float' );\n\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\textensions.get( 'OES_standard_derivatives' );\n\t\textensions.get( 'OES_element_index_uint' );\n\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tutils = new WebGLUtils( _gl, extensions );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tstate = new WebGLState( _gl, extensions, utils );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tattributes = new WebGLAttributes( _gl );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info );\n\t\tobjects = new WebGLObjects( geometries, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates();\n\n\t\tbackground = new WebGLBackground( _this, state, objects, _premultipliedAlpha );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info );\n\n\t\tspriteRenderer = new WebGLSpriteRenderer( _this, _gl, state, textures, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.context = _gl;\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// vr\n\n\tvar vr = ( 'xr' in navigator ) ? new WebXRManager( _this ) : new WebVRManager( _this );\n\n\tthis.vr = vr;\n\n\t// shadow map\n\n\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\tthis.shadowMap = shadowMap;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width,\n\t\t\theight: _height\n\t\t};\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( vr.isPresenting() ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = width * _pixelRatio;\n\t\t_canvas.height = height * _pixelRatio;\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width * _pixelRatio,\n\t\t\theight: _height * _pixelRatio\n\t\t};\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = width * pixelRatio;\n\t\t_canvas.height = height * pixelRatio;\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function () {\n\n\t\treturn _currentViewport;\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t_viewport.set( x, _height - y - height, width, height );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t_scissor.set( x, _height - y - height, width, height );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function () {\n\n\t\treturn background.getClearColor();\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tvar bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n\t\tthis.setRenderTarget( renderTarget );\n\t\tthis.clear( color, depth, stencil );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tobjects.dispose();\n\n\t\tvr.dispose();\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tinitGLContext();\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tvar material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReference( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReference( material ) {\n\n\t\tvar programInfo = properties.get( material ).program;\n\n\t\tmaterial.program = undefined;\n\n\t\tif ( programInfo !== undefined ) {\n\n\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program, material ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program, material );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program, material ) {\n\n\t\tstate.initAttributes();\n\n\t\tvar buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\n\n\t\t\tif ( ! material.isMeshPhongMaterial &&\n\t\t\t\t! material.isMeshStandardMaterial &&\n\t\t\t\t! material.isMeshNormalMaterial &&\n\t\t\t\tmaterial.flatShading === true ) {\n\n\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\n\n\t\t\t\t\tvar array = object.normalArray;\n\n\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\n\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\n\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\n\n\t\t\t\t\tarray[ i + 0 ] = nx;\n\t\t\t\t\tarray[ i + 1 ] = ny;\n\t\t\t\t\tarray[ i + 2 ] = nz;\n\n\t\t\t\t\tarray[ i + 3 ] = nx;\n\t\t\t\t\tarray[ i + 4 ] = ny;\n\t\t\t\t\tarray[ i + 5 ] = nz;\n\n\t\t\t\t\tarray[ i + 6 ] = nx;\n\t\t\t\t\tarray[ i + 7 ] = ny;\n\t\t\t\t\tarray[ i + 8 ] = nz;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.normal );\n\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs && material.map ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.uv );\n\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors && material.vertexColors !== NoColors ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.color );\n\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\tvar frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\tvar program = setProgram( camera, fog, material, object );\n\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + ( material.wireframe === true );\n\n\t\tvar updateBuffers = false;\n\n\t\tif ( geometryProgram !== _currentGeometryProgram ) {\n\n\t\t\t_currentGeometryProgram = geometryProgram;\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( object.morphTargetInfluences ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\t//\n\n\t\tvar index = geometry.index;\n\t\tvar position = geometry.attributes.position;\n\t\tvar rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tvar attribute;\n\t\tvar renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, attribute.buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar dataCount = Infinity;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdataCount = index.count;\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\tdataCount = position.count;\n\n\t\t}\n\n\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else {\n\n\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t}\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\tfunction setupVertexAttributes( material, program, geometry ) {\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.initAttributes();\n\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( var name in programAttributes ) {\n\n\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t}\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.material ) {\n\n\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( vr.isPresenting() ) return;\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof window !== 'undefined' ) animation.setContext( window );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\tvr.setAnimationLoop( callback );\n\n\t\tanimation.start();\n\n\t};\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n\t\tif ( ! ( camera && camera.isCamera ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost ) return;\n\n\t\t// reset caching for this frame\n\n\t\t_currentGeometryProgram = '';\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tcamera = vr.getCamera( camera );\n\n\t\t}\n\n\t\t//\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.onBeforeRender( _this, scene, camera, renderTarget );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\tcurrentRenderList.init();\n\n\t\tprojectObject( scene, camera, _this.sortObjects );\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort();\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset ) this.info.reset();\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\trenderTarget = null;\n\n\t\t}\n\n\t\tthis.setRenderTarget( renderTarget );\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t// render scene\n\n\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\tif ( scene.overrideMaterial ) {\n\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t} else {\n\n\t\t\t// opaque pass (front-to-back order)\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\n\n\t\t\t// transparent pass (back-to-front order)\n\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\n\n\t\t}\n\n\t\t// custom renderers\n\n\t\tvar spritesArray = currentRenderState.state.spritesArray;\n\n\t\tspriteRenderer.render( spritesArray, scene, camera );\n\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\tif ( renderTarget ) {\n\n\t\t\ttextures.updateRenderTargetMipmap( renderTarget );\n\n\t\t}\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\tscene.onAfterRender( _this, scene, camera );\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tvr.submitFrame();\n\n\t\t}\n\n\t\t// _gl.finish();\n\n\t\tcurrentRenderList = null;\n\t\tcurrentRenderState = null;\n\n\t};\n\n\t/*\n\t// TODO Duplicated code (Frustum)\n\n\tvar _sphere = new Sphere();\n\n\tfunction isObjectViewable( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null )\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere ).\n\t\tapplyMatrix4( object.matrixWorld );\n\n\t\treturn isSphereViewable( _sphere );\n\n\t}\n\n\tfunction isSpriteViewable( sprite ) {\n\n\t\t_sphere.center.set( 0, 0, 0 );\n\t\t_sphere.radius = 0.7071067811865476;\n\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn isSphereViewable( _sphere );\n\n\t}\n\n\tfunction isSphereViewable( sphere ) {\n\n\t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\n\n\t\tvar numPlanes = _clipping.numPlanes;\n\n\t\tif ( numPlanes === 0 ) return true;\n\n\t\tvar planes = _this.clippingPlanes,\n\n\t\t\tcenter = sphere.center,\n\t\t\tnegRad = - sphere.radius,\n\t\t\ti = 0;\n\n\t\tdo {\n\n\t\t\t// out when deeper than radius in the negative halfspace\n\t\t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\n\n\t\t} while ( ++ i !== numPlanes );\n\n\t\treturn true;\n\n\t}\n\t*/\n\n\tfunction projectObject( object, camera, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushSprite( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\tvar object = renderItem.object;\n\t\t\tvar geometry = renderItem.geometry;\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\tvar group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\tif ( 'viewport' in camera2 ) { // XR\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar bounds = camera2.bounds;\n\n\t\t\t\t\t\t\tvar x = bounds.x * _width;\n\t\t\t\t\t\t\tvar y = bounds.y * _height;\n\t\t\t\t\t\t\tvar width = bounds.z * _width;\n\t\t\t\t\t\t\tvar height = bounds.w * _height;\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.set( x, y, width, height ).multiplyScalar( _pixelRatio ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tvar frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\t_currentGeometryProgram = '';\n\n\t\t\trenderObjectImmediate( object, program, material );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t}\n\n\tfunction initMaterial( material, fog, object ) {\n\n\t\tvar materialProperties = properties.get( material );\n\n\t\tvar lights = currentRenderState.state.lights;\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tvar parameters = programCache.getParameters(\n\t\t\tmaterial, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\tvar program = materialProperties.program;\n\t\tvar programChange = true;\n\n\t\tif ( program === undefined ) {\n\n\t\t\t// new material\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t} else if ( program.code !== code ) {\n\n\t\t\t// changed glsl or parameters\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t} else if ( materialProperties.lightsHash !== lights.state.hash ) {\n\n\t\t\tproperties.update( material, 'lightsHash', lights.state.hash );\n\t\t\tprogramChange = false;\n\n\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t// same glsl and uniform list\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// only rebuild uniform list\n\t\t\tprogramChange = false;\n\n\t\t}\n\n\t\tif ( programChange ) {\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\n\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tmaterial.onBeforeCompile( materialProperties.shader, _this );\n\n\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\n\n\t\t\tmaterialProperties.program = program;\n\t\t\tmaterial.program = program;\n\n\t\t}\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( material.morphTargets ) {\n\n\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.morphNormals ) {\n\n\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( ! material.isShaderMaterial &&\n\t\t\t! material.isRawShaderMaterial ||\n\t\t\tmaterial.clipping === true ) {\n\n\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t}\n\n\t\tmaterialProperties.fog = fog;\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.lightsHash = lights.state.hash;\n\n\t\tif ( material.lights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\tuniformsList =\n\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t}\n\n\tfunction setProgram( camera, fog, material, object ) {\n\n\t\t_usedTextureUnits = 0;\n\n\t\tvar materialProperties = properties.get( material );\n\t\tvar lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled ) {\n\n\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\tvar useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\t_clipping.setState(\n\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate === false ) {\n\n\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.lights && materialProperties.lightsHash !== lights.state.hash ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate ) {\n\n\t\t\tinitMaterial( material, fog, object );\n\t\t\tmaterial.needsUpdate = false;\n\n\t\t}\n\n\t\tvar refreshProgram = false;\n\t\tvar refreshMaterial = false;\n\t\tvar refreshLights = false;\n\n\t\tvar program = materialProperties.program,\n\t\t\tp_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || camera !== _currentCamera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\t// Avoid unneeded uniform updates per ArrayCamera's sub-camera\n\n\t\t\tif ( _currentCamera !== ( _currentArrayCamera || camera ) ) {\n\n\t\t\t\t_currentCamera = ( _currentArrayCamera || camera );\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// not sure why, but otherwise weird things happen\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tvar skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\tsize = _Math.ceilPowerOfTwo( size );\n\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\t\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshToonMaterial ) {\n\n\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDepth( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDistance( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\n\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\tm_uniforms.color.value = material.color;\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t}\n\n\t\t\t// RectAreaLight Texture\n\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\tif ( m_uniforms.ltc_1 !== undefined ) m_uniforms.ltc_1.value = UniformsLib.LTC_1;\n\t\t\tif ( m_uniforms.ltc_2 !== undefined ) m_uniforms.ltc_2.value = UniformsLib.LTC_2;\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// Uniforms (refresh uniforms objects)\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\tuniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\tuniforms.maxMipLevel.value = properties.get( material.envMap ).__maxMipLevel;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. normal map\n\t\t// 4. bump map\n\t\t// 5. alpha map\n\t\t// 6. emissive map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\tuniforms.scale.value = _height * 0.5;\n\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value = fog.color;\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value = material.specular;\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\trefreshUniformsPhong( uniforms, material );\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\t// Textures\n\n\tfunction allocTextureUnit() {\n\n\t\tvar textureUnit = _usedTextureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\t_usedTextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tthis.allocTextureUnit = allocTextureUnit;\n\n\t// this.setTexture2D = setTexture2D;\n\tthis.setTexture2D = ( function () {\n\n\t\tvar warned = false;\n\n\t\t// backwards compatibility: peel texture.texture\n\t\treturn function setTexture2D( texture, slot ) {\n\n\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTexture = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTexture( texture, slot ) {\n\n\t\t\tif ( ! warned ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\n\t\t\t\twarned = true;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTextureCube = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTextureCube( texture, slot ) {\n\n\t\t\t// backwards compatibility: peel texture.texture\n\t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t\t// TODO: unify these code paths\n\t\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\ttextures.setTextureCube( texture, slot );\n\n\t\t\t} else {\n\n\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\n\t\t\t\ttextures.setTextureCubeDynamic( texture, slot );\n\n\t\t\t}\n\n\t\t};\n\n\t}() );\n\n\t//\n\n\tthis.setFramebuffer = function ( value ) {\n\n\t\t_framebuffer = value;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tvar framebuffer = _framebuffer;\n\t\tvar isCube = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ renderTarget.activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( framebuffer ) {\n\n\t\t\tvar restore = false;\n\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\trestore = true;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! ( textureType === HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\n\n\t\tvar width = texture.image.width;\n\t\tvar height = texture.image.height;\n\t\tvar glFormat = utils.convert( texture.format );\n\n\t\tthis.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexImage2D( _gl.TEXTURE_2D, level || 0, glFormat, position.x, position.y, width, height, 0 );\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\n\n\t\tvar width = srcTexture.image.width;\n\t\tvar height = srcTexture.image.height;\n\t\tvar glFormat = utils.convert( dstTexture.format );\n\t\tvar glType = utils.convert( dstTexture.type );\n\n\t\tthis.setTexture2D( dstTexture, 0 );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level || 0, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level || 0, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction FogExp2( color, density ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n}\n\nFogExp2.prototype.isFogExp2 = true;\n\nFogExp2.prototype.clone = function () {\n\n\treturn new FogExp2( this.color, this.density );\n\n};\n\nFogExp2.prototype.toJSON = function ( /* meta */ ) {\n\n\treturn {\n\t\ttype: 'FogExp2',\n\t\tcolor: this.color.getHex(),\n\t\tdensity: this.density\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Fog( color, near, far ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\n\tthis.near = ( near !== undefined ) ? near : 1;\n\tthis.far = ( far !== undefined ) ? far : 1000;\n\n}\n\nFog.prototype.isFog = true;\n\nFog.prototype.clone = function () {\n\n\treturn new Fog( this.color, this.near, this.far );\n\n};\n\nFog.prototype.toJSON = function ( /* meta */ ) {\n\n\treturn {\n\t\ttype: 'Fog',\n\t\tcolor: this.color.getHex(),\n\t\tnear: this.near,\n\t\tfar: this.far\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Scene() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Scene';\n\n\tthis.background = null;\n\tthis.fog = null;\n\tthis.overrideMaterial = null;\n\n\tthis.autoUpdate = true; // checked by the renderer\n\n}\n\nScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Scene,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *\tuvOffset: new THREE.Vector2(),\n *\tuvScale: new THREE.Vector2()\n * }\n */\n\nfunction SpriteMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'SpriteMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\tthis.map = null;\n\n\tthis.rotation = 0;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nSpriteMaterial.prototype = Object.create( Material.prototype );\nSpriteMaterial.prototype.constructor = SpriteMaterial;\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nSpriteMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.map = source.map;\n\n\tthis.rotation = source.rotation;\n\n\treturn this;\n\n};\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Sprite( material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Sprite';\n\n\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\tthis.center = new Vector2( 0.5, 0.5 );\n\n}\n\nSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Sprite,\n\n\tisSprite: true,\n\n\traycast: ( function () {\n\n\t\tvar intersectPoint = new Vector3();\n\t\tvar worldScale = new Vector3();\n\t\tvar mvPosition = new Vector3();\n\n\t\tvar alignedPosition = new Vector2();\n\t\tvar rotatedPosition = new Vector2();\n\t\tvar viewWorldMatrix = new Matrix4();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t\t\t// compute position in camera space\n\t\t\talignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t\t\t// to check if rotation is not zero\n\t\t\tif ( sin !== undefined ) {\n\n\t\t\t\trotatedPosition.x = ( cos * alignedPosition.x ) - ( sin * alignedPosition.y );\n\t\t\t\trotatedPosition.y = ( sin * alignedPosition.x ) + ( cos * alignedPosition.y );\n\n\t\t\t} else {\n\n\t\t\t\trotatedPosition.copy( alignedPosition );\n\n\t\t\t}\n\n\n\t\t\tvertexPosition.copy( mvPosition );\n\t\t\tvertexPosition.x += rotatedPosition.x;\n\t\t\tvertexPosition.y += rotatedPosition.y;\n\n\t\t\t// transform to world space\n\t\t\tvertexPosition.applyMatrix4( viewWorldMatrix );\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tworldScale.setFromMatrixScale( this.matrixWorld );\n\t\t\tviewWorldMatrix.getInverse( this.modelViewMatrix ).premultiply( this.matrixWorld );\n\t\t\tmvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\t\tvar rotation = this.material.rotation;\n\t\t\tvar sin, cos;\n\t\t\tif ( rotation !== 0 ) {\n\n\t\t\t\tcos = Math.cos( rotation );\n\t\t\t\tsin = Math.sin( rotation );\n\n\t\t\t}\n\n\t\t\tvar center = this.center;\n\n\t\t\ttransformVertex( vA.set( - 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\ttransformVertex( vB.set( 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\ttransformVertex( vC.set( 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\n\t\t\t// check first triangle\n\t\t\tvar intersect = raycaster.ray.intersectTriangle( vA, vB, vC, false, intersectPoint );\n\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\t// check second triangle\n\t\t\t\ttransformVertex( vB.set( - 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\t\tintersect = raycaster.ray.intersectTriangle( vA, vC, vB, false, intersectPoint );\n\t\t\t\tif ( intersect === null ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\n\t\t\t} );\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.material ).copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\treturn this;\n\n\t}\n\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LOD() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'LOD';\n\n\tObject.defineProperties( this, {\n\t\tlevels: {\n\t\t\tenumerable: true,\n\t\t\tvalue: []\n\t\t}\n\t} );\n\n}\n\nLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: LOD,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\tvar levels = source.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\taddLevel: function ( object, distance ) {\n\n\t\tif ( distance === undefined ) distance = 0;\n\n\t\tdistance = Math.abs( distance );\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t},\n\n\tgetObjectForDistance: function ( distance ) {\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn levels[ i - 1 ].object;\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar matrixPosition = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t};\n\n\t}() ),\n\n\tupdate: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.levels = [];\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nfunction Skeleton( bones, boneInverses ) {\n\n\t// copy the bone array\n\n\tbones = bones || [];\n\n\tthis.bones = bones.slice( 0 );\n\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\t// use the supplied bone inverses or calculate the inverses\n\n\tif ( boneInverses === undefined ) {\n\n\t\tthis.calculateInverses();\n\n\t} else {\n\n\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Skeleton.prototype, {\n\n\tcalculateInverses: function () {\n\n\t\tthis.boneInverses = [];\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t},\n\n\tpose: function () {\n\n\t\tvar bone, i, il;\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: ( function () {\n\n\t\tvar offsetMatrix = new Matrix4();\n\t\tvar identityMatrix = new Matrix4();\n\n\t\treturn function update() {\n\n\t\t\tvar bones = this.bones;\n\t\t\tvar boneInverses = this.boneInverses;\n\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\tvar boneTexture = this.boneTexture;\n\n\t\t\t// flatten bone matrices to array\n\n\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;\n\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\toffsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t}\n\n\t\t\tif ( boneTexture !== undefined ) {\n\n\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t};\n\n\t} )(),\n\n\tclone: function () {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t},\n\n\tgetBoneByName: function ( name ) {\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction Bone() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Bone';\n\n}\n\nBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Bone,\n\n\tisBone: true\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction SkinnedMesh( geometry, material ) {\n\n\tMesh.call( this, geometry, material );\n\n\tthis.type = 'SkinnedMesh';\n\n\tthis.bindMode = 'attached';\n\tthis.bindMatrix = new Matrix4();\n\tthis.bindMatrixInverse = new Matrix4();\n\n\tvar bones = this.initBones();\n\tvar skeleton = new Skeleton( bones );\n\n\tthis.bind( skeleton, this.matrixWorld );\n\n\tthis.normalizeSkinWeights();\n\n}\n\nSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: SkinnedMesh,\n\n\tisSkinnedMesh: true,\n\n\tinitBones: function () {\n\n\t\tvar bones = [], bone, gbone;\n\t\tvar i, il;\n\n\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\n\n\t\t\t// first, create array of 'Bone' objects from geometry data\n\n\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\t// create new 'Bone' object\n\n\t\t\t\tbone = new Bone();\n\t\t\t\tbones.push( bone );\n\n\t\t\t\t// apply values\n\n\t\t\t\tbone.name = gbone.name;\n\t\t\t\tbone.position.fromArray( gbone.pos );\n\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\n\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\n\n\t\t\t}\n\n\t\t\t// second, create bone hierarchy\n\n\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\tif ( ( gbone.parent !== - 1 ) && ( gbone.parent !== null ) && ( bones[ gbone.parent ] !== undefined ) ) {\n\n\t\t\t\t\t// subsequent bones in the hierarchy\n\n\t\t\t\t\tbones[ gbone.parent ].add( bones[ i ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// topmost bone, immediate child of the skinned mesh\n\n\t\t\t\t\tthis.add( bones[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// now the bones are part of the scene graph and children of the skinned mesh.\n\t\t// let's update the corresponding matrices\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn bones;\n\n\t},\n\n\tbind: function ( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t},\n\n\tpose: function () {\n\n\t\tthis.skeleton.pose();\n\n\t},\n\n\tnormalizeSkinWeights: function () {\n\n\t\tvar scale, i;\n\n\t\tif ( this.geometry && this.geometry.isGeometry ) {\n\n\t\t\tfor ( i = 0; i < this.geometry.skinWeights.length; i ++ ) {\n\n\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\n\n\t\t\t\tscale = 1.0 / sw.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tsw.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( this.geometry && this.geometry.isBufferGeometry ) {\n\n\t\t\tvar vec = new Vector4();\n\n\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\tfor ( i = 0; i < skinWeight.count; i ++ ) {\n\n\t\t\t\tvec.x = skinWeight.getX( i );\n\t\t\t\tvec.y = skinWeight.getY( i );\n\t\t\t\tvec.z = skinWeight.getZ( i );\n\t\t\t\tvec.w = skinWeight.getW( i );\n\n\t\t\t\tscale = 1.0 / vec.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tvec.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nfunction LineBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'LineBasicMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\tthis.linecap = 'round';\n\tthis.linejoin = 'round';\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nLineBasicMaterial.prototype = Object.create( Material.prototype );\nLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nLineBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\tthis.linecap = source.linecap;\n\tthis.linejoin = source.linejoin;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Line( geometry, material, mode ) {\n\n\tif ( mode === 1 ) {\n\n\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\n\t\treturn new LineSegments( geometry, material );\n\n\t}\n\n\tObject3D.call( this );\n\n\tthis.type = 'Line';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Line,\n\n\tisLine: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [ 0 ];\n\n\t\t\t\t\tfor ( var i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i ] += start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tlineDistances[ 0 ] = 0;\n\n\t\t\t\tfor ( var i = 1, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += vertices[ i - 1 ].distanceTo( vertices[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() ),\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar precision = raycaster.linePrecision;\n\t\t\tvar precisionSq = precision * precision;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar vStart = new Vector3();\n\t\t\tvar vEnd = new Vector3();\n\t\t\tvar interSegment = new Vector3();\n\t\t\tvar interRay = new Vector3();\n\t\t\tvar step = ( this && this.isLineSegments ) ? 2 : 1;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LineSegments( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineSegments';\n\n}\n\nLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineSegments,\n\n\tisLineSegments: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [];\n\n\t\t\t\t\tfor ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i += 2 ) {\n\n\t\t\t\t\tstart.copy( vertices[ i ] );\n\t\t\t\t\tend.copy( vertices[ i + 1 ] );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() )\n\n} );\n\n/**\n * @author mgreter / http://github.com/mgreter\n */\n\nfunction LineLoop( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineLoop';\n\n}\n\nLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineLoop,\n\n\tisLineLoop: true,\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n *  morphTargets: <bool>\n * }\n */\n\nfunction PointsMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'PointsMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.size = 1;\n\tthis.sizeAttenuation = true;\n\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nPointsMaterial.prototype = Object.create( Material.prototype );\nPointsMaterial.prototype.constructor = PointsMaterial;\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nPointsMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.size = source.size;\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Points( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Points';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Points,\n\n\tisPoints: true,\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar object = this;\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\tsphere.radius += threshold;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\tvar position = new Vector3();\n\t\t\tvar intersectPoint = new Vector3();\n\n\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\tray.closestPointToPoint( point, intersectPoint );\n\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.generateMipmaps = false;\n\n}\n\nVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\n\n\tconstructor: VideoTexture,\n\n\tisVideoTexture: true,\n\n\tupdate: function () {\n\n\t\tvar video = this.image;\n\n\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { width: width, height: height };\n\tthis.mipmaps = mipmaps;\n\n\t// no flipping for cube textures\n\t// (also flipping doesn't work for compressed textures )\n\n\tthis.flipY = false;\n\n\t// can't generate mipmaps for compressed textures\n\t// mips must be embedded in DDS files\n\n\tthis.generateMipmaps = false;\n\n}\n\nCompressedTexture.prototype = Object.create( Texture.prototype );\nCompressedTexture.prototype.constructor = CompressedTexture;\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\n/**\n * @author Matt DesLauriers / @mattdesl\n * @author atix / arthursilber.de\n */\n\nfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\tformat = format !== undefined ? format : DepthFormat;\n\n\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t}\n\n\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.image = { width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.flipY = false;\n\tthis.generateMipmaps\t= false;\n\n}\n\nDepthTexture.prototype = Object.create( Texture.prototype );\nDepthTexture.prototype.constructor = DepthTexture;\nDepthTexture.prototype.isDepthTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WireframeGeometry( geometry ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'WireframeGeometry';\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar i, j, l, o, ol;\n\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\tvar vertex;\n\n\t// different logic for Geometry and BufferGeometry\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\t// create a data structure that contains all edges without duplicates\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\te = edges[ key ];\n\n\t\t\tvertex = geometry.vertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\tvar position, indices, groups;\n\t\tvar group, start, count;\n\t\tvar index1, index2;\n\n\t\tvertex = new Vector3();\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\t// indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\t\t\tindices = geometry.index;\n\t\t\tgroups = geometry.groups;\n\n\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t}\n\n\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\tgroup = groups[ o ];\n\n\t\t\t\tstart = group.start;\n\t\t\t\tcount = group.count;\n\n\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tedge1 = indices.getX( i + j );\n\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( key in edges ) {\n\n\t\t\t\te = edges[ key ];\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// non-indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\n\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\tindex1 = 3 * i + j;\n\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\nWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n */\n\n// ParametricGeometry\n\nfunction ParametricGeometry( func, slices, stacks ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ParametricGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\tthis.mergeVertices();\n\n}\n\nParametricGeometry.prototype = Object.create( Geometry.prototype );\nParametricGeometry.prototype.constructor = ParametricGeometry;\n\n// ParametricBufferGeometry\n\nfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ParametricBufferGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\tvar EPS = 0.00001;\n\n\tvar normal = new Vector3();\n\n\tvar p0 = new Vector3(), p1 = new Vector3();\n\tvar pu = new Vector3(), pv = new Vector3();\n\n\tvar i, j;\n\n\tif ( func.length < 3 ) {\n\n\t\tconsole.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\n\n\t}\n\n\t// generate vertices, normals and uvs\n\n\tvar sliceCount = slices + 1;\n\n\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\tvar v = i / stacks;\n\n\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\tvar u = j / slices;\n\n\t\t\t// vertex\n\n\t\t\tfunc( u, v, p0 );\n\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t// normal\n\n\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\tfunc( u - EPS, v, p1 );\n\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u + EPS, v, p1 );\n\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\tfunc( u, v - EPS, p1 );\n\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u, v + EPS, p1 );\n\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, v );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\tvar a = i * sliceCount + j;\n\t\t\tvar b = i * sliceCount + j + 1;\n\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\tvar d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t// faces one and two\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n/**\n * @author clockworkgeek / https://github.com/clockworkgeek\n * @author timothypratley / https://github.com/timothypratley\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PolyhedronGeometry\n\nfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PolyhedronGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\nPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n// PolyhedronBufferGeometry\n\nfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PolyhedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tradius = radius || 1;\n\tdetail = detail || 0;\n\n\t// default buffer data\n\n\tvar vertexBuffer = [];\n\tvar uvBuffer = [];\n\n\t// the subdivision creates the vertex buffer data\n\n\tsubdivide( detail );\n\n\t// all vertices should lie on a conceptual sphere with a given radius\n\n\tappplyRadius( radius );\n\n\t// finally, create the uv data\n\n\tgenerateUVs();\n\n\t// build non-indexed geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\tif ( detail === 0 ) {\n\n\t\tthis.computeVertexNormals(); // flat normals\n\n\t} else {\n\n\t\tthis.normalizeNormals(); // smooth normals\n\n\t}\n\n\t// helper functions\n\n\tfunction subdivide( detail ) {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t// get the vertices of the face\n\n\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t// perform subdivision\n\n\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t}\n\n\t}\n\n\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\tvar cols = Math.pow( 2, detail );\n\n\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\tvar v = [];\n\n\t\tvar i, j;\n\n\t\t// construct all of the vertices for this subdivision\n\n\t\tfor ( i = 0; i <= cols; i ++ ) {\n\n\t\t\tv[ i ] = [];\n\n\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\tvar rows = cols - i;\n\n\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// construct all of the faces\n\n\t\tfor ( i = 0; i < cols; i ++ ) {\n\n\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction appplyRadius( radius ) {\n\n\t\tvar vertex = new Vector3();\n\n\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tvar vertex = new Vector3();\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t}\n\n\t\tcorrectUVs();\n\n\t\tcorrectSeam();\n\n\t}\n\n\tfunction correctSeam() {\n\n\t\t// handle case when face straddles the seam, see #3269\n\n\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t// uv data of a single face\n\n\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction pushVertex( vertex ) {\n\n\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t}\n\n\tfunction getVertexByIndex( index, vertex ) {\n\n\t\tvar stride = index * 3;\n\n\t\tvertex.x = vertices[ stride + 0 ];\n\t\tvertex.y = vertices[ stride + 1 ];\n\t\tvertex.z = vertices[ stride + 2 ];\n\n\t}\n\n\tfunction correctUVs() {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\tvar centroid = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\tvar azi = azimuth( centroid );\n\n\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t}\n\n\t}\n\n\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t}\n\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t}\n\n\t}\n\n\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\tfunction azimuth( vector ) {\n\n\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t}\n\n\n\t// Angle above the XZ plane.\n\n\tfunction inclination( vector ) {\n\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t}\n\n}\n\nPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TetrahedronGeometry\n\nfunction TetrahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TetrahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\nTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n// TetrahedronBufferGeometry\n\nfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t];\n\n\tvar indices = [\n\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'TetrahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// OctahedronGeometry\n\nfunction OctahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'OctahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nOctahedronGeometry.prototype = Object.create( Geometry.prototype );\nOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n// OctahedronBufferGeometry\n\nfunction OctahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t];\n\n\tvar indices = [\n\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t1, 3, 4,\t1, 4, 2\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'OctahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// IcosahedronGeometry\n\nfunction IcosahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'IcosahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\nIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n// IcosahedronBufferGeometry\n\nfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\tvar vertices = [\n\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t];\n\n\tvar indices = [\n\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'IcosahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n/**\n * @author Abe Pazos / https://hamoid.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// DodecahedronGeometry\n\nfunction DodecahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'DodecahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\nDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n// DodecahedronBufferGeometry\n\nfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\tvar r = 1 / t;\n\n\tvar vertices = [\n\n\t\t// (±1, ±1, ±1)\n\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t// (0, ±1/φ, ±φ)\n\t\t 0, - r, - t, 0, - r, t,\n\t\t 0, r, - t, 0, r, t,\n\n\t\t// (±1/φ, ±φ, 0)\n\t\t- r, - t, 0, - r, t, 0,\n\t\t r, - t, 0, r, t, 0,\n\n\t\t// (±φ, 0, ±1/φ)\n\t\t- t, 0, - r, t, 0, - r,\n\t\t- t, 0, r, t, 0, r\n\t];\n\n\tvar indices = [\n\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'DodecahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n/**\n * @author oosmoxiecode / https://github.com/oosmoxiecode\n * @author WestLangley / https://github.com/WestLangley\n * @author zz85 / https://github.com/zz85\n * @author miningold / https://github.com/miningold\n * @author jonobr1 / https://github.com/jonobr1\n * @author Mugen87 / https://github.com/Mugen87\n *\n */\n\n// TubeGeometry\n\nfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TubeGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = bufferGeometry.tangents;\n\tthis.normals = bufferGeometry.normals;\n\tthis.binormals = bufferGeometry.binormals;\n\n\t// create geometry\n\n\tthis.fromBufferGeometry( bufferGeometry );\n\tthis.mergeVertices();\n\n}\n\nTubeGeometry.prototype = Object.create( Geometry.prototype );\nTubeGeometry.prototype.constructor = TubeGeometry;\n\n// TubeBufferGeometry\n\nfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TubeBufferGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\ttubularSegments = tubularSegments || 64;\n\tradius = radius || 1;\n\tradialSegments = radialSegments || 8;\n\tclosed = closed || false;\n\n\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = frames.tangents;\n\tthis.normals = frames.normals;\n\tthis.binormals = frames.binormals;\n\n\t// helper variables\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\tvar uv = new Vector2();\n\tvar P = new Vector3();\n\n\tvar i, j;\n\n\t// buffer\n\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\tvar indices = [];\n\n\t// create buffer data\n\n\tgenerateBufferData();\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// functions\n\n\tfunction generateBufferData() {\n\n\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\tgenerateSegment( i );\n\n\t\t}\n\n\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t// at the regular position on the given path\n\t\t//\n\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t// uvs are generated in a separate function.\n\t\t// this makes it easy compute correct values for closed geometries\n\n\t\tgenerateUVs();\n\n\t\t// finally create faces\n\n\t\tgenerateIndices();\n\n\t}\n\n\tfunction generateSegment( i ) {\n\n\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t// retrieve corresponding normal and binormal\n\n\t\tvar N = frames.normals[ i ];\n\t\tvar B = frames.binormals[ i ];\n\n\t\t// generate normals and vertices for the current segment\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\tvar sin = Math.sin( v );\n\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t// normal\n\n\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\tnormal.normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\tfunction generateIndices() {\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author Mugen87 / https://github.com/Mugen87\n *\n * based on http://www.blackpawn.com/texts/pqtorus/\n */\n\n// TorusKnotGeometry\n\nfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusKnotGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\tthis.mergeVertices();\n\n}\n\nTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\nTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n// TorusKnotBufferGeometry\n\nfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusKnotBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\tp = p || 2;\n\tq = q || 3;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, j;\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar P1 = new Vector3();\n\tvar P2 = new Vector3();\n\n\tvar B = new Vector3();\n\tvar T = new Vector3();\n\tvar N = new Vector3();\n\n\t// generate vertices, normals and uvs\n\n\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t// calculate orthonormal basis\n\n\t\tT.subVectors( P2, P1 );\n\t\tN.addVectors( P2, P1 );\n\t\tB.crossVectors( T, N );\n\t\tN.crossVectors( B, T );\n\n\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\tB.normalize();\n\t\tN.normalize();\n\n\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t// now calculate the final vertex position.\n\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// this function calculates the current position on the torus curve\n\n\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\tvar cu = Math.cos( u );\n\t\tvar su = Math.sin( u );\n\t\tvar quOverP = q / p * u;\n\t\tvar cs = Math.cos( quOverP );\n\n\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t}\n\n}\n\nTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TorusGeometry\n\nfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\tthis.mergeVertices();\n\n}\n\nTorusGeometry.prototype = Object.create( Geometry.prototype );\nTorusGeometry.prototype.constructor = TorusGeometry;\n\n// TorusBufferGeometry\n\nfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\tarc = arc || Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar center = new Vector3();\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tvar u = i / tubularSegments * arc;\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * Port from https://github.com/mapbox/earcut (v2.1.2)\n */\n\nvar Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\tdim = dim || 2;\n\n\t\tvar hasHoles = holeIndices && holeIndices.length,\n\t\t\touterLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,\n\t\t\touterNode = linkedList( data, 0, outerLen, dim, true ),\n\t\t\ttriangles = [];\n\n\t\tif ( ! outerNode ) return triangles;\n\n\t\tvar minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( var i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\n\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tvar i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\n\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tvar p = start, again;\n\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\n\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tvar stop = ear, prev, next;\n\n\t// iterate through ears, slicing them one by one\n\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertice leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( ear, triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\n\nfunction isEar( ear ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tvar p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\n\tvar minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\n\tvar minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\t// first look for points inside the triangle in increasing z-order\n\n\tvar p = ear.nextZ;\n\n\twhile ( p && p.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.nextZ;\n\n\t}\n\n\t// then look for points in decreasing z-order\n\n\tp = ear.prevZ;\n\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\n\t\tp = p.prevZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\n\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tvar a = p.prev, b = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn p;\n\n}\n\n// try splitting polygon into two and triangulate them independently\n\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\n\tvar a = start;\n\n\tdo {\n\n\t\tvar b = a.next.next;\n\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\n\t\t\t\tvar c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\n\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tvar queue = [], i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\n\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\n\tif ( outerNode ) {\n\n\t\tvar b = splitPolygon( outerNode, hole );\n\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\n\nfunction findHoleBridge( hole, outerNode ) {\n\n\tvar p = outerNode,\n\t\thx = hole.x,\n\t\thy = hole.y,\n\t\tqx = - Infinity,\n\t\tm;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tvar x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m.prev; // hole touches outer segment; pick lower endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tvar stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y,\n\t\ttanMin = Infinity,\n\t\ttan;\n\n\tp = m.next;\n\n\twhile ( p !== stop ) {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn m;\n\n}\n\n// interlink polygon nodes in z-order\n\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\nfunction sortLinked( list ) {\n\n\tvar i, p, q, e, tail, numMerges, pSize, qSize, inSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\n\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\n\nfunction getLeftmost( start ) {\n\n\tvar p = start, leftmost = start;\n\n\tdo {\n\n\t\tif ( p.x < leftmost.x ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\n\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) &&\n\t\tlocallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b );\n\n}\n\n// signed area of a triangle\n\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\n\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\n\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tif ( ( equals( p1, q1 ) && equals( p2, q2 ) ) ||\n\t\t\t( equals( p1, q2 ) && equals( p2, q1 ) ) ) return true;\n\n\treturn area( p1, q1, p2 ) > 0 !== area( p1, q1, q2 ) > 0 &&\n\t\t\t\t area( p2, q2, p1 ) > 0 !== area( p2, q2, q1 ) > 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\n\nfunction intersectsPolygon( a, b ) {\n\n\tvar p = a;\n\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\t\t\tintersects( p, p.next, a, b ) ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\n\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\n\nfunction middleInside( a, b ) {\n\n\tvar p = a,\n\t\tinside = false,\n\t\tpx = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) ) {\n\n\t\t\tinside = ! inside;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\nfunction splitPolygon( a, b ) {\n\n\tvar a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\n\nfunction insertNode( i, x, y, last ) {\n\n\tvar p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertice index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertice nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tvar sum = 0;\n\n\tfor ( var i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nvar ShapeUtils = {\n\n\t// calculate area of the contour polygon\n\n\tarea: function ( contour ) {\n\n\t\tvar n = contour.length;\n\t\tvar a = 0.0;\n\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t},\n\n\tisClockWise: function ( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t},\n\n\ttriangulateShape: function ( contour, holes ) {\n\n\t\tvar vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tvar holeIndices = []; // array of hole indices\n\t\tvar faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tvar holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( var i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tvar triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( var i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n};\n\nfunction removeDupEndPts( points ) {\n\n\tvar l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( var i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline is bevel\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n// ExtrudeGeometry\n\nfunction ExtrudeGeometry( shapes, options ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ExtrudeGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\tthis.mergeVertices();\n\n}\n\nExtrudeGeometry.prototype = Object.create( Geometry.prototype );\nExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\nExtrudeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n// ExtrudeBufferGeometry\n\nfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ExtrudeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\tvar scope = this;\n\n\tvar verticesArray = [];\n\tvar uvArray = [];\n\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\tvar shape = shapes[ i ];\n\t\taddShape( shape );\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\tthis.computeVertexNormals();\n\n\t// functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar placeholder = [];\n\n\t\t// options\n\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\t\tvar depth = options.depth !== undefined ? options.depth : 100;\n\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\tvar extrudePath = options.extrudePath;\n\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t// deprecated options\n\n\t\tif ( options.amount !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\tdepth = options.amount;\n\n\t\t}\n\n\t\t//\n\n\t\tvar extrudePts, extrudeByPath = false;\n\t\tvar splineTube, binormal, normal, position2;\n\n\t\tif ( extrudePath ) {\n\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\textrudeByPath = true;\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t// SETUP TNB variables\n\n\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\tbinormal = new Vector3();\n\t\t\tnormal = new Vector3();\n\t\t\tposition2 = new Vector3();\n\n\t\t}\n\n\t\t// Safeguards if bevels are not enabled\n\n\t\tif ( ! bevelEnabled ) {\n\n\t\t\tbevelSegments = 0;\n\t\t\tbevelThickness = 0;\n\t\t\tbevelSize = 0;\n\n\t\t}\n\n\t\t// Variables initialization\n\n\t\tvar ahole, h, hl; // looping of holes\n\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t/* Vertices */\n\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tvertices = vertices.concat( ahole );\n\n\t\t}\n\n\n\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t}\n\n\t\tvar b, bs, t, z,\n\t\t\tvert, vlen = vertices.length,\n\t\t\tface, flen = faces.length;\n\n\n\t\t// Find directions for point movement\n\n\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t//\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t// check for collinear edges\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t// not collinear\n\n\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t//  but prevent crazy spikes\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\tvar direction_eq = false; // assumes: opposite\n\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t}\n\n\n\t\tvar contourMovements = [];\n\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t}\n\n\t\tvar holesMovements = [],\n\t\t\toneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\toneHoleMovements = [];\n\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t}\n\n\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t}\n\n\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tbs = bevelSize;\n\n\t\t// Back facing vertices\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add stepped vertices...\n\t\t// Including front facing vertices\n\n\t\tvar s;\n\n\t\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Add bevel segments planes\n\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/* Faces */\n\n\t\t// Top and bottom faces\n\n\t\tbuildLidFaces();\n\n\t\t// Sides faces\n\n\t\tbuildSideFaces();\n\n\n\t\t/////  Internal functions\n\n\t\tfunction buildLidFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\n\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t}\n\n\t\t// Create faces for the z-sides of the shape\n\n\t\tfunction buildSideFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\t\t\tvar layeroffset = 0;\n\t\t\tsidewalls( contour, layeroffset );\n\t\t\tlayeroffset += contour.length;\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t//, true\n\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t}\n\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t}\n\n\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\tvar j, k;\n\t\t\ti = contour.length;\n\n\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\tj = i;\n\t\t\t\tk = i - 1;\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\tvar s = 0,\n\t\t\t\t\tsl = steps + bevelSegments * 2;\n\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction v( x, y, z ) {\n\n\t\t\tplaceholder.push( x );\n\t\t\tplaceholder.push( y );\n\t\t\tplaceholder.push( z );\n\n\t\t}\n\n\n\t\tfunction f3( a, b, c ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\n\t\t}\n\n\t\tfunction f4( a, b, c, d ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( d );\n\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\t\t\taddVertex( d );\n\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t}\n\n\t\tfunction addVertex( index ) {\n\n\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t}\n\n\n\t\tfunction addUV( vector2 ) {\n\n\t\t\tuvArray.push( vector2.x );\n\t\t\tuvArray.push( vector2.y );\n\n\t\t}\n\n\t}\n\n}\n\nExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\nExtrudeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n//\n\nvar WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\tvar d_x = vertices[ indexD * 3 ];\n\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n};\n\nfunction toJSON( shapes, options, data ) {\n\n\t//\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\t//\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float> // how far from text outline is bevel\n * }\n */\n\n// TextGeometry\n\nfunction TextGeometry( text, parameters ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TextGeometry';\n\n\tthis.parameters = {\n\t\ttext: text,\n\t\tparameters: parameters\n\t};\n\n\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\tthis.mergeVertices();\n\n}\n\nTextGeometry.prototype = Object.create( Geometry.prototype );\nTextGeometry.prototype.constructor = TextGeometry;\n\n// TextBufferGeometry\n\nfunction TextBufferGeometry( text, parameters ) {\n\n\tparameters = parameters || {};\n\n\tvar font = parameters.font;\n\n\tif ( ! ( font && font.isFont ) ) {\n\n\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\treturn new Geometry();\n\n\t}\n\n\tvar shapes = font.generateShapes( text, parameters.size );\n\n\t// translate parameters to ExtrudeGeometry API\n\n\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t// defaults\n\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\tthis.type = 'TextBufferGeometry';\n\n}\n\nTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\nTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// SphereGeometry\n\nfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'SphereGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nSphereGeometry.prototype = Object.create( Geometry.prototype );\nSphereGeometry.prototype.constructor = SphereGeometry;\n\n// SphereBufferGeometry\n\nfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'SphereBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\tphiStart = phiStart !== undefined ? phiStart : 0;\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\tvar thetaEnd = thetaStart + thetaLength;\n\n\tvar ix, iy;\n\n\tvar index = 0;\n\tvar grid = [];\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\tvar verticesRow = [];\n\n\t\tvar v = iy / heightSegments;\n\n\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\tvar u = ix / widthSegments;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormal.set( vertex.x, vertex.y, vertex.z ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, 1 - v );\n\n\t\t\tverticesRow.push( index ++ );\n\n\t\t}\n\n\t\tgrid.push( verticesRow );\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n/**\n * @author Kaleb Murphy\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// RingGeometry\n\nfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'RingGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nRingGeometry.prototype = Object.create( Geometry.prototype );\nRingGeometry.prototype.constructor = RingGeometry;\n\n// RingBufferGeometry\n\nfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'RingBufferGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tinnerRadius = innerRadius || 0.5;\n\touterRadius = outerRadius || 1;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// some helper variables\n\n\tvar segment;\n\tvar radius = innerRadius;\n\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// increase the radius for next row of vertices\n\n\t\tradius += radiusStep;\n\n\t}\n\n\t// indices\n\n\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\tvar a = segment;\n\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\tvar d = segment + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n/**\n * @author astrodud / http://astrodud.isgreat.org/\n * @author zz85 / https://github.com/zz85\n * @author bhouston / http://clara.io\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// LatheGeometry\n\nfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'LatheGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\tthis.mergeVertices();\n\n}\n\nLatheGeometry.prototype = Object.create( Geometry.prototype );\nLatheGeometry.prototype.constructor = LatheGeometry;\n\n// LatheBufferGeometry\n\nfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'LatheBufferGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tsegments = Math.floor( segments ) || 12;\n\tphiStart = phiStart || 0;\n\tphiLength = phiLength || Math.PI * 2;\n\n\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar base;\n\tvar inverseSegments = 1.0 / segments;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar i, j;\n\n\t// generate vertices and uvs\n\n\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\tvar sin = Math.sin( phi );\n\t\tvar cos = Math.cos( phi );\n\n\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\tvertex.y = points[ j ].y;\n\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// uv\n\n\t\t\tuv.x = i / segments;\n\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\tbase = j + i * points.length;\n\n\t\t\tvar a = base;\n\t\t\tvar b = base + points.length;\n\t\t\tvar c = base + points.length + 1;\n\t\t\tvar d = base + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// generate normals\n\n\tthis.computeVertexNormals();\n\n\t// if the geometry is closed, we need to average the normals along the seam.\n\t// because the corresponding vertices are identical (but still have different UVs).\n\n\tif ( phiLength === Math.PI * 2 ) {\n\n\t\tvar normals = this.attributes.normal.array;\n\t\tvar n1 = new Vector3();\n\t\tvar n2 = new Vector3();\n\t\tvar n = new Vector3();\n\n\t\t// this is the buffer offset for the last line of vertices\n\n\t\tbase = segments * points.length * 3;\n\n\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t// select the normal of the vertex in the first line\n\n\t\t\tn1.x = normals[ j + 0 ];\n\t\t\tn1.y = normals[ j + 1 ];\n\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t// select the normal of the vertex in the last line\n\n\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t// average normals\n\n\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t// assign the new values to both normals\n\n\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t}\n\n\t}\n\n}\n\nLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n/**\n * @author jonobr1 / http://jonobr1.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// ShapeGeometry\n\nfunction ShapeGeometry( shapes, curveSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ShapeGeometry';\n\n\tif ( typeof curveSegments === 'object' ) {\n\n\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\tcurveSegments = curveSegments.curveSegments;\n\n\t}\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\tthis.mergeVertices();\n\n}\n\nShapeGeometry.prototype = Object.create( Geometry.prototype );\nShapeGeometry.prototype.constructor = ShapeGeometry;\n\nShapeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n// ShapeBufferGeometry\n\nfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ShapeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tcurveSegments = curveSegments || 12;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar groupStart = 0;\n\tvar groupCount = 0;\n\n\t// allow single and array values for \"shapes\" parameter\n\n\tif ( Array.isArray( shapes ) === false ) {\n\n\t\taddShape( shapes );\n\n\t} else {\n\n\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\taddShape( shapes[ i ] );\n\n\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\tgroupStart += groupCount;\n\t\t\tgroupCount = 0;\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t// helper functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar i, l, shapeHole;\n\n\t\tvar indexOffset = vertices.length / 3;\n\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\tvar shapeVertices = points.shape;\n\t\tvar shapeHoles = points.holes;\n\n\t\t// check direction of vertices\n\n\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t// also check if holes are in the opposite direction\n\n\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tshapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t// join vertices of inner and outer paths to a single array\n\n\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\tshapeHole = shapeHoles[ i ];\n\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t}\n\n\t\t// vertices, normals, uvs\n\n\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\tvar vertex = shapeVertices[ i ];\n\n\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\tnormals.push( 0, 0, 1 );\n\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t}\n\n\t\t// incides\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\tindices.push( a, b, c );\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t}\n\n}\n\nShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\nShapeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n//\n\nfunction toJSON$1( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'EdgesGeometry';\n\n\tthis.parameters = {\n\t\tthresholdAngle: thresholdAngle\n\t};\n\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\n\t// prepare source geometry\n\n\tvar geometry2;\n\n\tif ( geometry.isBufferGeometry ) {\n\n\t\tgeometry2 = new Geometry();\n\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t} else {\n\n\t\tgeometry2 = geometry.clone();\n\n\t}\n\n\tgeometry2.mergeVertices();\n\tgeometry2.computeFaceNormals();\n\n\tvar sourceVertices = geometry2.vertices;\n\tvar faces = geometry2.faces;\n\n\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\tvar face = faces[ i ];\n\n\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t} else {\n\n\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// generate vertices\n\n\tfor ( key in edges ) {\n\n\t\tvar e = edges[ key ];\n\n\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\nEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// CylinderGeometry\n\nfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CylinderGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCylinderGeometry.prototype = Object.create( Geometry.prototype );\nCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n// CylinderBufferGeometry\n\nfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CylinderBufferGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tvar scope = this;\n\n\tradiusTop = radiusTop !== undefined ? radiusTop : 1;\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\n\theight = height || 1;\n\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\n\topenEnded = openEnded !== undefined ? openEnded : false;\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar index = 0;\n\tvar indexArray = [];\n\tvar halfHeight = height / 2;\n\tvar groupStart = 0;\n\n\t// generate geometry\n\n\tgenerateTorso();\n\n\tif ( openEnded === false ) {\n\n\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction generateTorso() {\n\n\t\tvar x, y;\n\t\tvar normal = new Vector3();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\t// this will be used to calculate the normal\n\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\tvar indexRow = [];\n\n\t\t\tvar v = y / heightSegments;\n\n\t\t\t// calculate the radius of the current row\n\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\t// now save vertices of the row in our index array\n\n\t\t\tindexArray.push( indexRow );\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\tvar a = indexArray[ y ][ x ];\n\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\n\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// update group counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n\tfunction generateCap( top ) {\n\n\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\tvar uv = new Vector2();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t// save the index of the first center vertex\n\t\tcenterIndexStart = index;\n\n\t\t// first we generate the center vertex data of the cap.\n\t\t// because the geometry needs one set of uvs per face,\n\t\t// we must generate a center vertex per face/segment\n\n\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// save the index of the last center vertex\n\n\t\tcenterIndexEnd = index;\n\n\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\tvar u = x / radialSegments;\n\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * sinTheta;\n\t\t\tvertex.y = halfHeight * sign;\n\t\t\tvertex.z = radius * cosTheta;\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tvar c = centerIndexStart + x;\n\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\tif ( top === true ) {\n\n\t\t\t\t// face top\n\n\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t} else {\n\n\t\t\t\t// face bottom\n\n\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t}\n\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n}\n\nCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\n// ConeGeometry\n\nfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\nConeGeometry.prototype.constructor = ConeGeometry;\n\n// ConeBufferGeometry\n\nfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\nConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n * @author hughes\n */\n\n// CircleGeometry\n\nfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CircleGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCircleGeometry.prototype = Object.create( Geometry.prototype );\nCircleGeometry.prototype.constructor = CircleGeometry;\n\n// CircleBufferGeometry\n\nfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CircleBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, s;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\n\t// center point\n\n\tvertices.push( 0, 0, 0 );\n\tnormals.push( 0, 0, 1 );\n\tuvs.push( 0.5, 0.5 );\n\n\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t// vertex\n\n\t\tvertex.x = radius * Math.cos( segment );\n\t\tvertex.y = radius * Math.sin( segment );\n\n\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t// normal\n\n\t\tnormals.push( 0, 0, 1 );\n\n\t\t// uvs\n\n\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\tuvs.push( uv.x, uv.y );\n\n\t}\n\n\t// indices\n\n\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\tindices.push( i, i + 1, 0 );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\tWireframeGeometry: WireframeGeometry,\n\tParametricGeometry: ParametricGeometry,\n\tParametricBufferGeometry: ParametricBufferGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeBufferGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusBufferGeometry,\n\tTextGeometry: TextGeometry,\n\tTextBufferGeometry: TextBufferGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereBufferGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingBufferGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneBufferGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheBufferGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeBufferGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeBufferGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderBufferGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleBufferGeometry,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxBufferGeometry\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  color: <THREE.Color>\n * }\n */\n\nfunction ShadowMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShadowMaterial';\n\n\tthis.color = new Color( 0x000000 );\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nShadowMaterial.prototype = Object.create( Material.prototype );\nShadowMaterial.prototype.constructor = ShadowMaterial;\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\nShadowMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction RawShaderMaterial( parameters ) {\n\n\tShaderMaterial.call( this, parameters );\n\n\tthis.type = 'RawShaderMaterial';\n\n}\n\nRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\nRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshStandardMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.type = 'MeshStandardMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.roughness = 0.5;\n\tthis.metalness = 0.5;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.roughnessMap = null;\n\n\tthis.metalnessMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.envMapIntensity = 1.0;\n\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshStandardMaterial.prototype = Object.create( Material.prototype );\nMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.color.copy( source.color );\n\tthis.roughness = source.roughness;\n\tthis.metalness = source.metalness;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.roughnessMap = source.roughnessMap;\n\n\tthis.metalnessMap = source.metalnessMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.envMapIntensity = source.envMapIntensity;\n\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  reflectivity: <float>\n * }\n */\n\nfunction MeshPhysicalMaterial( parameters ) {\n\n\tMeshStandardMaterial.call( this );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.type = 'MeshPhysicalMaterial';\n\n\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\tthis.clearCoat = 0.0;\n\tthis.clearCoatRoughness = 0.0;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\nMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\nMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.reflectivity = source.reflectivity;\n\n\tthis.clearCoat = source.clearCoat;\n\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshPhongMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshPhongMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.specular = new Color( 0x111111 );\n\tthis.shininess = 30;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhongMaterial.prototype = Object.create( Material.prototype );\nMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\nMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.specular.copy( source.specular );\n\tthis.shininess = source.shininess;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author takahirox / http://github.com/takahirox\n *\n * parameters = {\n *  gradientMap: new THREE.Texture( <Image> )\n * }\n */\n\nfunction MeshToonMaterial( parameters ) {\n\n\tMeshPhongMaterial.call( this );\n\n\tthis.defines = { 'TOON': '' };\n\n\tthis.type = 'MeshToonMaterial';\n\n\tthis.gradientMap = null;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\nMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\nMeshToonMaterial.prototype.copy = function ( source ) {\n\n\tMeshPhongMaterial.prototype.copy.call( this, source );\n\n\tthis.gradientMap = source.gradientMap;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshNormalMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshNormalMaterial';\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshNormalMaterial.prototype = Object.create( Material.prototype );\nMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\nMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshLambertMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshLambertMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshLambertMaterial.prototype = Object.create( Material.prototype );\nMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\nMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\nfunction LineDashedMaterial( parameters ) {\n\n\tLineBasicMaterial.call( this );\n\n\tthis.type = 'LineDashedMaterial';\n\n\tthis.scale = 1;\n\tthis.dashSize = 3;\n\tthis.gapSize = 1;\n\n\tthis.setValues( parameters );\n\n}\n\nLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\nLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nLineDashedMaterial.prototype.copy = function ( source ) {\n\n\tLineBasicMaterial.prototype.copy.call( this, source );\n\n\tthis.scale = source.scale;\n\tthis.dashSize = source.dashSize;\n\tthis.gapSize = source.gapSize;\n\n\treturn this;\n\n};\n\n\n\nvar Materials = /*#__PURE__*/Object.freeze({\n\tShadowMaterial: ShadowMaterial,\n\tSpriteMaterial: SpriteMaterial,\n\tRawShaderMaterial: RawShaderMaterial,\n\tShaderMaterial: ShaderMaterial,\n\tPointsMaterial: PointsMaterial,\n\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\tMeshStandardMaterial: MeshStandardMaterial,\n\tMeshPhongMaterial: MeshPhongMaterial,\n\tMeshToonMaterial: MeshToonMaterial,\n\tMeshNormalMaterial: MeshNormalMaterial,\n\tMeshLambertMaterial: MeshLambertMaterial,\n\tMeshDepthMaterial: MeshDepthMaterial,\n\tMeshDistanceMaterial: MeshDistanceMaterial,\n\tMeshBasicMaterial: MeshBasicMaterial,\n\tLineDashedMaterial: LineDashedMaterial,\n\tLineBasicMaterial: LineBasicMaterial,\n\tMaterial: Material\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\tvar scope = this;\n\n\tvar isLoading = false;\n\tvar itemsLoaded = 0;\n\tvar itemsTotal = 0;\n\tvar urlModifier = undefined;\n\n\tthis.onStart = undefined;\n\tthis.onLoad = onLoad;\n\tthis.onProgress = onProgress;\n\tthis.onError = onError;\n\n\tthis.itemStart = function ( url ) {\n\n\t\titemsTotal ++;\n\n\t\tif ( isLoading === false ) {\n\n\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tisLoading = true;\n\n\t};\n\n\tthis.itemEnd = function ( url ) {\n\n\t\titemsLoaded ++;\n\n\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t}\n\n\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\tisLoading = false;\n\n\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\tscope.onLoad();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.itemError = function ( url ) {\n\n\t\tif ( scope.onError !== undefined ) {\n\n\t\t\tscope.onError( url );\n\n\t\t}\n\n\t};\n\n\tthis.resolveURL = function ( url ) {\n\n\t\tif ( urlModifier ) {\n\n\t\t\treturn urlModifier( url );\n\n\t\t}\n\n\t\treturn url;\n\n\t};\n\n\tthis.setURLModifier = function ( transform ) {\n\n\t\turlModifier = transform;\n\t\treturn this;\n\n\t};\n\n}\n\nvar DefaultLoadingManager = new LoadingManager();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar loading = {};\n\nfunction FileLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FileLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Check for data: URI\n\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\tif ( dataUriRegexResult ) {\n\n\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\tvar data = dataUriRegexResult[ 3 ];\n\n\t\t\tdata = window.decodeURIComponent( data );\n\n\t\t\tif ( isBase64 ) data = window.atob( data );\n\n\t\t\ttry {\n\n\t\t\t\tvar response;\n\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\tvar view = new Uint8Array( data.length );\n\n\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Initialise array for duplicate requests\n\n\t\t\tloading[ url ] = [];\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tvar response = this.response;\n\n\t\t\t\tCache.add( url, response );\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t}\n\n\t\t\trequest.send( null );\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResponseType: function ( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t},\n\n\tsetWithCredentials: function ( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t},\n\n\tsetMimeType: function ( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t},\n\n\tsetRequestHeader: function ( value ) {\n\n\t\tthis.requestHeader = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n */\n\nfunction CompressedTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( CompressedTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar images = [];\n\n\t\tvar texture = new CompressedTexture();\n\t\ttexture.image = images;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Nikos M. / https://github.com/foo123/\n *\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n */\n\nfunction DataTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( DataTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texture = new DataTexture();\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( undefined !== texData.image ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( undefined !== texData.data ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\n\n\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n\t\t\tif ( undefined !== texData.format ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\t\t\tif ( undefined !== texData.type ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( undefined !== texData.mipmaps ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t}\n\n\t\t\tif ( 1 === texData.mipmapCount ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction ImageLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( ImageLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemEnd( url );\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction CubeTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( CubeTextureLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new CubeTexture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tvar loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction TextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( TextureLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new Texture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\n\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\tvar isJPEG = url.search( /\\.(jpg|jpeg)$/ ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Extensible curve object\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\n/**************************************************************\n *\tAbstract Curve base class\n **************************************************************/\n\nfunction Curve() {\n\n\tthis.type = 'Curve';\n\n\tthis.arcLengthDivisions = 200;\n\n}\n\nObject.assign( Curve.prototype, {\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint: function ( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t},\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt: function ( u, optionalTarget ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t},\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get total curve arc length\n\n\tgetLength: function () {\n\n\t\tvar lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t},\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tvar cache = [];\n\t\tvar current, last = this.getPoint( 0 );\n\t\tvar p, sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t},\n\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t},\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping: function ( u, distance ) {\n\n\t\tvar arcLengths = this.getLengths();\n\n\t\tvar i = 0, il = arcLengths.length;\n\n\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tvar low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tvar lengthBefore = arcLengths[ i ];\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t},\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent: function ( t ) {\n\n\t\tvar delta = 0.0001;\n\t\tvar t1 = t - delta;\n\t\tvar t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tvar pt1 = this.getPoint( t1 );\n\t\tvar pt2 = this.getPoint( t2 );\n\n\t\tvar vec = pt2.clone().sub( pt1 );\n\t\treturn vec.normalize();\n\n\t},\n\n\tgetTangentAt: function ( u ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t );\n\n\t},\n\n\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tvar normal = new Vector3();\n\n\t\tvar tangents = [];\n\t\tvar normals = [];\n\t\tvar binormals = [];\n\n\t\tvar vec = new Vector3();\n\t\tvar mat = new Matrix4();\n\n\t\tvar i, u, theta;\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tu = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\ttangents[ i ].normalize();\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tvar min = Number.MAX_VALUE;\n\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'EllipseCurve';\n\n\tthis.aX = aX || 0;\n\tthis.aY = aY || 0;\n\n\tthis.xRadius = xRadius || 1;\n\tthis.yRadius = yRadius || 1;\n\n\tthis.aStartAngle = aStartAngle || 0;\n\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\n\n\tthis.aClockwise = aClockwise || false;\n\n\tthis.aRotation = aRotation || 0;\n\n}\n\nEllipseCurve.prototype = Object.create( Curve.prototype );\nEllipseCurve.prototype.constructor = EllipseCurve;\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nEllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar twoPi = Math.PI * 2;\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t// ensures that deltaAngle is 0 .. 2 PI\n\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\tif ( samePoints ) {\n\n\t\t\tdeltaAngle = 0;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = twoPi;\n\n\t\t}\n\n\t}\n\n\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\tdeltaAngle = - twoPi;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t}\n\n\t}\n\n\tvar angle = this.aStartAngle + t * deltaAngle;\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\tif ( this.aRotation !== 0 ) {\n\n\t\tvar cos = Math.cos( this.aRotation );\n\t\tvar sin = Math.sin( this.aRotation );\n\n\t\tvar tx = x - this.aX;\n\t\tvar ty = y - this.aY;\n\n\t\t// Rotate the point about the center of the ellipse.\n\t\tx = tx * cos - ty * sin + this.aX;\n\t\ty = tx * sin + ty * cos + this.aY;\n\n\t}\n\n\treturn point.set( x, y );\n\n};\n\nEllipseCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.aX = source.aX;\n\tthis.aY = source.aY;\n\n\tthis.xRadius = source.xRadius;\n\tthis.yRadius = source.yRadius;\n\n\tthis.aStartAngle = source.aStartAngle;\n\tthis.aEndAngle = source.aEndAngle;\n\n\tthis.aClockwise = source.aClockwise;\n\n\tthis.aRotation = source.aRotation;\n\n\treturn this;\n\n};\n\n\nEllipseCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.aX = this.aX;\n\tdata.aY = this.aY;\n\n\tdata.xRadius = this.xRadius;\n\tdata.yRadius = this.yRadius;\n\n\tdata.aStartAngle = this.aStartAngle;\n\tdata.aEndAngle = this.aEndAngle;\n\n\tdata.aClockwise = this.aClockwise;\n\n\tdata.aRotation = this.aRotation;\n\n\treturn data;\n\n};\n\nEllipseCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.aX = json.aX;\n\tthis.aY = json.aY;\n\n\tthis.xRadius = json.xRadius;\n\tthis.yRadius = json.yRadius;\n\n\tthis.aStartAngle = json.aStartAngle;\n\tthis.aEndAngle = json.aEndAngle;\n\n\tthis.aClockwise = json.aClockwise;\n\n\tthis.aRotation = json.aRotation;\n\n\treturn this;\n\n};\n\nfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\tthis.type = 'ArcCurve';\n\n}\n\nArcCurve.prototype = Object.create( EllipseCurve.prototype );\nArcCurve.prototype.constructor = ArcCurve;\n\nArcCurve.prototype.isArcCurve = true;\n\n/**\n * @author zz85 https://github.com/zz85\n *\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nvar tmp = new Vector3();\nvar px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\nfunction CatmullRomCurve3( points, closed, curveType, tension ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CatmullRomCurve3';\n\n\tthis.points = points || [];\n\tthis.closed = closed || false;\n\tthis.curveType = curveType || 'centripetal';\n\tthis.tension = tension || 0.5;\n\n}\n\nCatmullRomCurve3.prototype = Object.create( Curve.prototype );\nCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\nCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\nCatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar points = this.points;\n\tvar l = points.length;\n\n\tvar p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tif ( this.closed ) {\n\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\tintPoint = l - 2;\n\t\tweight = 1;\n\n\t}\n\n\tvar p0, p1, p2, p3; // 4 points\n\n\tif ( this.closed || intPoint > 0 ) {\n\n\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate first point\n\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\tp0 = tmp;\n\n\t}\n\n\tp1 = points[ intPoint % l ];\n\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate last point\n\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\tp3 = tmp;\n\n\t}\n\n\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t// init Centripetal / Chordal Catmull-Rom\n\t\tvar pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t// safety check for repeated points\n\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t}\n\n\tpoint.set(\n\t\tpx.calc( weight ),\n\t\tpy.calc( weight ),\n\t\tpz.calc( weight )\n\t);\n\n\treturn point;\n\n};\n\nCatmullRomCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\tthis.closed = source.closed;\n\tthis.curveType = source.curveType;\n\tthis.tension = source.tension;\n\n\treturn this;\n\n};\n\nCatmullRomCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\tdata.closed = this.closed;\n\tdata.curveType = this.curveType;\n\tdata.tension = this.tension;\n\n\treturn data;\n\n};\n\nCatmullRomCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t}\n\n\tthis.closed = json.closed;\n\tthis.curveType = json.curveType;\n\tthis.tension = json.tension;\n\n\treturn this;\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tvar v0 = ( p2 - p0 ) * 0.5;\n\tvar v1 = ( p3 - p1 ) * 0.5;\n\tvar t2 = t * t;\n\tvar t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tvar k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\tthis.v3 = v3 || new Vector2();\n\n}\n\nCubicBezierCurve.prototype = Object.create( Curve.prototype );\nCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\tthis.v3 = v3 || new Vector3();\n\n}\n\nCubicBezierCurve3.prototype = Object.create( Curve.prototype );\nCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\nCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\nCubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction LineCurve( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve';\n\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nLineCurve.prototype = Object.create( Curve.prototype );\nLineCurve.prototype.constructor = LineCurve;\n\nLineCurve.prototype.isLineCurve = true;\n\nLineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve.prototype.getTangent = function ( /* t */ ) {\n\n\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\treturn tangent.normalize();\n\n};\n\nLineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction LineCurve3( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve3';\n\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nLineCurve3.prototype = Object.create( Curve.prototype );\nLineCurve3.prototype.constructor = LineCurve3;\n\nLineCurve3.prototype.isLineCurve3 = true;\n\nLineCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'SplineCurve';\n\n\tthis.points = points || [];\n\n}\n\nSplineCurve.prototype = Object.create( Curve.prototype );\nSplineCurve.prototype.constructor = SplineCurve;\n\nSplineCurve.prototype.isSplineCurve = true;\n\nSplineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar points = this.points;\n\tvar p = ( points.length - 1 ) * t;\n\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tvar p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\tvar p1 = points[ intPoint ];\n\tvar p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\tvar p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\tpoint.set(\n\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t);\n\n\treturn point;\n\n};\n\nSplineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\treturn this;\n\n};\n\nSplineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\treturn data;\n\n};\n\nSplineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t}\n\n\treturn this;\n\n};\n\n\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n **/\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nfunction CurvePath() {\n\n\tCurve.call( this );\n\n\tthis.type = 'CurvePath';\n\n\tthis.curves = [];\n\tthis.autoClose = false; // Automatically closes the path\n\n}\n\nCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\tconstructor: CurvePath,\n\n\tadd: function ( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t},\n\n\tclosePath: function () {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t},\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint: function ( t ) {\n\n\t\tvar d = t * this.getLength();\n\t\tvar curveLengths = this.getCurveLengths();\n\t\tvar i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t},\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength: function () {\n\n\t\tvar lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t},\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t},\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths: function () {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tvar lengths = [], sums = 0;\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t},\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 40;\n\n\t\tvar points = [];\n\n\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tgetPoints: function ( divisions ) {\n\n\t\tdivisions = divisions || 12;\n\n\t\tvar points = [], last;\n\n\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tvar curve = curves[ i ];\n\t\t\tvar resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\n\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\tfor ( var j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Creates free form 2d path using series of points, lines or curves.\n **/\n\nfunction Path( points ) {\n\n\tCurvePath.call( this );\n\n\tthis.type = 'Path';\n\n\tthis.currentPoint = new Vector2();\n\n\tif ( points ) {\n\n\t\tthis.setFromPoints( points );\n\n\t}\n\n}\n\nPath.prototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\tconstructor: Path,\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( var i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t},\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tvar curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tvar curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tvar curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t},\n\n\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t},\n\n\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tvar lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurvePath.prototype.copy.call( this, source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = CurvePath.prototype.toJSON.call( this );\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurvePath.prototype.fromJSON.call( this, json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Defines a 2d shape plane using paths.\n **/\n\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\nfunction Shape( points ) {\n\n\tPath.call( this, points );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.type = 'Shape';\n\n\tthis.holes = [];\n\n}\n\nShape.prototype = Object.assign( Object.create( Path.prototype ), {\n\n\tconstructor: Shape,\n\n\tgetPointsHoles: function ( divisions ) {\n\n\t\tvar holesPts = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t},\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints: function ( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tPath.prototype.copy.call( this, source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Path.prototype.toJSON.call( this );\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tPath.prototype.fromJSON.call( this, json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Light( color, intensity ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Light';\n\n\tthis.color = new Color( color );\n\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\tthis.receiveShadow = undefined;\n\n}\n\nLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Light,\n\n\tisLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\tLight.call( this, skyColor, intensity );\n\n\tthis.type = 'HemisphereLight';\n\n\tthis.castShadow = undefined;\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.groundColor = new Color( groundColor );\n\n}\n\nHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: HemisphereLight,\n\n\tisHemisphereLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LightShadow( camera ) {\n\n\tthis.camera = camera;\n\n\tthis.bias = 0;\n\tthis.radius = 1;\n\n\tthis.mapSize = new Vector2( 512, 512 );\n\n\tthis.map = null;\n\tthis.matrix = new Matrix4();\n\n}\n\nObject.assign( LightShadow.prototype, {\n\n\tcopy: function ( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction SpotLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n}\n\nSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: SpotLightShadow,\n\n\tisSpotLightShadow: true,\n\n\tupdate: function ( light ) {\n\n\t\tvar camera = this.camera;\n\n\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\tvar far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'SpotLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / Math.PI;\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new SpotLightShadow();\n\n}\n\nSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: SpotLight,\n\n\tisSpotLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction PointLight( color, intensity, distance, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'PointLight';\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n}\n\nPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: PointLight,\n\n\tisPointLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectionalLightShadow( ) {\n\n\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n}\n\nDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: DirectionalLightShadow\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DirectionalLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'DirectionalLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tthis.shadow = new DirectionalLightShadow();\n\n}\n\nDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: DirectionalLight,\n\n\tisDirectionalLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AmbientLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'AmbientLight';\n\n\tthis.castShadow = undefined;\n\n}\n\nAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: AmbientLight,\n\n\tisAmbientLight: true\n\n} );\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\nfunction RectAreaLight( color, intensity, width, height ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'RectAreaLight';\n\n\tthis.width = ( width !== undefined ) ? width : 10;\n\tthis.height = ( height !== undefined ) ? height : 10;\n\n}\n\nRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: RectAreaLight,\n\n\tisRectAreaLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n *\n * A Track that interpolates Strings\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nStringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: StringKeyframeTrack,\n\n\tValueTypeName: 'string',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\n\tInterpolantFactoryMethodSmooth: undefined\n\n} );\n\n/**\n *\n * A Track of Boolean keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction BooleanKeyframeTrack( name, times, values ) {\n\n\tKeyframeTrack.call( this, name, times, values );\n\n}\n\nBooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: BooleanKeyframeTrack,\n\n\tValueTypeName: 'bool',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\tInterpolantFactoryMethodSmooth: undefined\n\n\t// Note: Actually this track could have a optimized / compressed\n\t// representation of a single value and a custom interpolant that\n\t// computes \"firstValue ^ isOdd( index )\".\n\n} );\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n * @author tschw\n */\n\nfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tthis.parameterPositions = parameterPositions;\n\tthis._cachedIndex = 0;\n\n\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\tthis.sampleValues = sampleValues;\n\tthis.valueSize = sampleSize;\n\n}\n\nObject.assign( Interpolant.prototype, {\n\n\tevaluate: function ( t ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\ti1 = this._cachedIndex,\n\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tvar right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t},\n\n\tsettings: null, // optional, subclass-specific settings structure\n\t// Note: The indirection allows central control of many interpolants.\n\n\t// --- Protected interface\n\n\tDefaultSettings_: {},\n\n\tgetSettings_: function () {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t},\n\n\tcopySampleValue_: function ( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// Template methods for derived classes:\n\n\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t},\n\n\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( Interpolant.prototype, {\n\n\t//( 0, t, t0 ), returns this.resultBuffer\n\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t//( N-1, tN-1, t ), returns this.resultBuffer\n\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n} );\n\n/**\n * Spherical linear unit quaternion interpolant.\n *\n * @author tschw\n */\n\nfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: QuaternionLinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset = i1 * stride,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of quaternion keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: QuaternionKeyframeTrack,\n\n\tValueTypeName: 'quaternion',\n\n\t// ValueBufferType is inherited\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n} );\n\n/**\n *\n * A Track of keyframe values that represent color.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: ColorKeyframeTrack,\n\n\tValueTypeName: 'color'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n\t// Note: Very basic implementation and nothing special yet.\n\t// However, this is the place for color space parameterization.\n\n} );\n\n/**\n *\n * A Track of numeric keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nNumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: NumberKeyframeTrack,\n\n\tValueTypeName: 'number'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n *\n * @author tschw\n */\n\nfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\tthis._weightPrev = - 0;\n\tthis._offsetPrev = - 0;\n\tthis._weightNext = - 0;\n\tthis._offsetNext = - 0;\n\n}\n\nCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: CubicInterpolant,\n\n\tDefaultSettings_: {\n\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\n\t},\n\n\tintervalChanged_: function ( i1, t0, t1 ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\tiPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t},\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tvar sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tvar s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tvar s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tvar sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n */\n\nfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: LinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n *\n * @author tschw\n */\n\nfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: DiscreteInterpolant,\n\n\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n} );\n\n/**\n * @author tschw\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nvar AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tvar n = times.length;\n\t\tvar result = new Array( n );\n\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tvar nValues = values.length;\n\t\tvar result = new values.constructor( nValues );\n\n\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tvar value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n *\n * A timed sequence of keyframes for a specific property.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\tthis.name = name;\n\n\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\tthis.validate();\n\tthis.optimize();\n\n}\n\n// Static methods:\n\nObject.assign( KeyframeTrack, {\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tparse: function ( json ) {\n\n\t\tif ( json.type === undefined ) {\n\n\t\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t\t}\n\n\t\tvar trackType = KeyframeTrack._getTrackTypeForValueTypeName( json.type );\n\n\t\tif ( json.times === undefined ) {\n\n\t\t\tvar times = [], values = [];\n\n\t\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\t\tjson.times = times;\n\t\t\tjson.values = values;\n\n\t\t}\n\n\t\t// derived classes can define a static parse method\n\t\tif ( trackType.parse !== undefined ) {\n\n\t\t\treturn trackType.parse( json );\n\n\t\t} else {\n\n\t\t\t// by default, we assume a constructor compatible with the base\n\t\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( track ) {\n\n\t\tvar trackType = track.constructor;\n\n\t\tvar json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t},\n\n\t_getTrackTypeForValueTypeName: function ( typeName ) {\n\n\t\tswitch ( typeName.toLowerCase() ) {\n\n\t\t\tcase 'scalar':\n\t\t\tcase 'double':\n\t\t\tcase 'float':\n\t\t\tcase 'number':\n\t\t\tcase 'integer':\n\n\t\t\t\treturn NumberKeyframeTrack;\n\n\t\t\tcase 'vector':\n\t\t\tcase 'vector2':\n\t\t\tcase 'vector3':\n\t\t\tcase 'vector4':\n\n\t\t\t\treturn VectorKeyframeTrack;\n\n\t\t\tcase 'color':\n\n\t\t\t\treturn ColorKeyframeTrack;\n\n\t\t\tcase 'quaternion':\n\n\t\t\t\treturn QuaternionKeyframeTrack;\n\n\t\t\tcase 'bool':\n\t\t\tcase 'boolean':\n\n\t\t\t\treturn BooleanKeyframeTrack;\n\n\t\t\tcase 'string':\n\n\t\t\t\treturn StringKeyframeTrack;\n\n\t\t}\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n\t}\n\n} );\n\nObject.assign( KeyframeTrack.prototype, {\n\n\tconstructor: KeyframeTrack,\n\n\tTimeBufferType: Float32Array,\n\n\tValueBufferType: Float32Array,\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tsetInterpolation: function ( interpolation ) {\n\n\t\tvar factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t},\n\n\tgetInterpolation: function () {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t},\n\n\tgetValueSize: function () {\n\n\t\treturn this.values.length / this.times.length;\n\n\t},\n\n\t// move all keyframes either forwards or backwards in time\n\tshift: function ( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale: function ( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim: function ( startTime, endTime ) {\n\n\t\tvar times = this.times,\n\t\t\tnKeys = times.length,\n\t\t\tfrom = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\n\n\t\t\tvar stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tvar valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar prevTime = null;\n\n\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tvar currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize: function () {\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\twriteIndex = 1,\n\t\t\tlastIndex = times.length - 1;\n\n\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tvar keep = false;\n\n\t\t\tvar time = times[ i ];\n\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of vectored keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nVectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: VectorKeyframeTrack,\n\n\tValueTypeName: 'vector'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n *\n * Reusable set of Tracks that represent an animation.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nfunction AnimationClip( name, duration, tracks ) {\n\n\tthis.name = name;\n\tthis.tracks = tracks;\n\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// this means it should figure out its duration by scanning the tracks\n\tif ( this.duration < 0 ) {\n\n\t\tthis.resetDuration();\n\n\t}\n\n\tthis.optimize();\n\n}\n\nObject.assign( AnimationClip, {\n\n\tparse: function ( json ) {\n\n\t\tvar tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t},\n\n\ttoJSON: function ( clip ) {\n\n\t\tvar tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tvar json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid\n\n\t\t};\n\n\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t},\n\n\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tvar times = [];\n\t\t\tvar values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t},\n\n\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\tvar clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tvar o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\tvar animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar clips = [];\n\n\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t},\n\n\t// parse the animation.hierarchy format\n\tparseAnimation: function ( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar tracks = [];\n\n\t\tvar clipName = animation.name || 'default';\n\t\t// automatic length determination in AnimationClip.\n\t\tvar duration = animation.length || - 1;\n\t\tvar fps = animation.fps || 30;\n\n\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\treturn clip;\n\n\t}\n\n} );\n\nObject.assign( AnimationClip.prototype, {\n\n\tresetDuration: function () {\n\n\t\tvar tracks = this.tracks, duration = 0;\n\n\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tvar track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t},\n\n\ttrim: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\toptimize: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction MaterialLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.textures = {};\n\n}\n\nObject.assign( MaterialLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTextures: function ( value ) {\n\n\t\tthis.textures = value;\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tvar material = new Materials[ json.type ]();\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\n\t\tif ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\n\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\n\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\tmaterial.transparent = true;\n\n\t\t}\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tvar normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\treturn material;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferGeometryLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( BufferGeometryLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tvar attributes = json.data.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\tgeometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\n\n\t\t}\n\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tvar center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\nvar TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\t// Workaround for IE11 pre KB2929437. See #11440\n\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Loader() {}\n\nLoader.Handlers = {\n\n\thandlers: [],\n\n\tadd: function ( regex, loader ) {\n\n\t\tthis.handlers.push( regex, loader );\n\n\t},\n\n\tget: function ( file ) {\n\n\t\tvar handlers = this.handlers;\n\n\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\tvar regex = handlers[ i ];\n\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\treturn loader;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n};\n\nObject.assign( Loader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tonLoadStart: function () {},\n\n\tonLoadProgress: function () {},\n\n\tonLoadComplete: function () {},\n\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\tvar array = [];\n\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t}\n\n\t\treturn array;\n\n\t},\n\n\tcreateMaterial: ( function () {\n\n\t\tvar BlendingMode = {\n\t\t\tNoBlending: NoBlending,\n\t\t\tNormalBlending: NormalBlending,\n\t\t\tAdditiveBlending: AdditiveBlending,\n\t\t\tSubtractiveBlending: SubtractiveBlending,\n\t\t\tMultiplyBlending: MultiplyBlending,\n\t\t\tCustomBlending: CustomBlending\n\t\t};\n\n\t\tvar color = new Color();\n\t\tvar textureLoader = new TextureLoader();\n\t\tvar materialLoader = new MaterialLoader();\n\n\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n\t\t\t// convert from old material format\n\n\t\t\tvar textures = {};\n\n\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t}\n\n\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t}\n\n\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\n\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t}\n\n\t\t\t\tvar uuid = _Math.generateUUID();\n\n\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\treturn uuid;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar json = {\n\t\t\t\tuuid: _Math.generateUUID(),\n\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t};\n\n\t\t\tfor ( var name in m ) {\n\n\t\t\t\tvar value = m[ name ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\tjson.normalScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\tjson.side = BackSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\tjson.side = DoubleSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\tcase 'opacity':\n\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\tcase 'transparent':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\treturn materialLoader.parse( json );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nvar LoaderUtils = {\n\n\tdecodeText: function ( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tvar s = '';\n\n\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\t// Merges multi-byte utf-8 characters.\n\t\treturn decodeURIComponent( escape( s ) );\n\n\t},\n\n\textractUrlBase: function ( url ) {\n\n\t\tvar index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.substr( 0, index + 1 );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction JSONLoader( manager ) {\n\n\tif ( typeof manager === 'boolean' ) {\n\n\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\n\t\tmanager = undefined;\n\n\t}\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\tthis.withCredentials = false;\n\n}\n\nObject.assign( JSONLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === 'string' ) ? this.texturePath : LoaderUtils.extractUrlBase( url );\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = JSON.parse( text );\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata !== undefined ) {\n\n\t\t\t\tvar type = metadata.type;\n\n\t\t\t\tif ( type !== undefined ) {\n\n\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar object = scope.parse( json, texturePath );\n\t\t\tonLoad( object.geometry, object.materials );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetTexturePath: function ( value ) {\n\n\t\tthis.texturePath = value;\n\t\treturn this;\n\n\t},\n\n\tparse: ( function () {\n\n\t\tfunction parseModel( json, geometry ) {\n\n\t\t\tfunction isBitSet( value, position ) {\n\n\t\t\t\treturn value & ( 1 << position );\n\n\t\t\t}\n\n\t\t\tvar i, j, fi,\n\n\t\t\t\toffset, zLength,\n\n\t\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\n\t\t\t\ttype,\n\t\t\t\tisQuad,\n\t\t\t\thasMaterial,\n\t\t\t\thasFaceVertexUv,\n\t\t\t\thasFaceNormal, hasFaceVertexNormal,\n\t\t\t\thasFaceColor, hasFaceVertexColor,\n\n\t\t\t\tvertex, face, faceA, faceB, hex, normal,\n\n\t\t\t\tuvLayer, uv, u, v,\n\n\t\t\t\tfaces = json.faces,\n\t\t\t\tvertices = json.vertices,\n\t\t\t\tnormals = json.normals,\n\t\t\t\tcolors = json.colors,\n\n\t\t\t\tscale = json.scale,\n\n\t\t\t\tnUvLayers = 0;\n\n\n\t\t\tif ( json.uvs !== undefined ) {\n\n\t\t\t\t// disregard empty arrays\n\n\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\n\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = vertices.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\tvertex = new Vector3();\n\n\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\n\t\t\t\tgeometry.vertices.push( vertex );\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = faces.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\ttype = faces[ offset ++ ];\n\n\t\t\t\tisQuad = isBitSet( type, 0 );\n\t\t\t\thasMaterial = isBitSet( type, 1 );\n\t\t\t\thasFaceVertexUv = isBitSet( type, 3 );\n\t\t\t\thasFaceNormal = isBitSet( type, 4 );\n\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n\t\t\t\thasFaceColor = isBitSet( type, 6 );\n\t\t\t\thasFaceVertexColor = isBitSet( type, 7 );\n\n\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n\t\t\t\tif ( isQuad ) {\n\n\t\t\t\t\tfaceA = new Face3();\n\t\t\t\t\tfaceA.a = faces[ offset ];\n\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\n\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\n\t\t\t\t\tfaceB = new Face3();\n\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\n\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\n\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\n\t\t\t\t\toffset += 4;\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\n\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tfaceA.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\tfaceA.color.setHex( hex );\n\t\t\t\t\t\tfaceB.color.setHex( hex );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( faceA );\n\t\t\t\t\tgeometry.faces.push( faceB );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface = new Face3();\n\t\t\t\t\tface.a = faces[ offset ++ ];\n\t\t\t\t\tface.b = faces[ offset ++ ];\n\t\t\t\t\tface.c = faces[ offset ++ ];\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tface.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tface.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.vertexColors.push( new Color( colors[ colorIndex ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( face );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseSkin( json, geometry ) {\n\n\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n\t\t\tif ( json.skinWeights ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar x = json.skinWeights[ i ];\n\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinWeights.push( new Vector4( x, y, z, w ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.skinIndices ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar a = json.skinIndices[ i ];\n\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinIndices.push( new Vector4( a, b, c, d ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.bones = json.bones;\n\n\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseMorphing( json, geometry ) {\n\n\t\t\tvar scale = json.scale;\n\n\t\t\tif ( json.morphTargets !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\tgeometry.morphTargets[ i ] = {};\n\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\n\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\n\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\n\n\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n\t\t\t\t\t\tvar vertex = new Vector3();\n\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\n\t\t\t\t\t\tdstVertices.push( vertex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\n\n\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\n\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\n\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseAnimations( json, geometry ) {\n\n\t\t\tvar outputAnimations = [];\n\n\t\t\t// parse old style Bone/Hierarchy animations\n\t\t\tvar animations = [];\n\n\t\t\tif ( json.animation !== undefined ) {\n\n\t\t\t\tanimations.push( json.animation );\n\n\t\t\t}\n\n\t\t\tif ( json.animations !== undefined ) {\n\n\t\t\t\tif ( json.animations.length ) {\n\n\t\t\t\t\tanimations = animations.concat( json.animations );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tanimations.push( json.animations );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\n\t\t\t\tvar clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );\n\t\t\t\tif ( clip ) outputAnimations.push( clip );\n\n\t\t\t}\n\n\t\t\t// parse implicit morph animations\n\t\t\tif ( geometry.morphTargets ) {\n\n\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n\t\t\t\tvar morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\n\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\n\n\t\t\t}\n\n\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\n\n\t\t}\n\n\t\treturn function parse( json, texturePath ) {\n\n\t\t\tif ( json.data !== undefined ) {\n\n\t\t\t\t// Geometry 4.0 spec\n\t\t\t\tjson = json.data;\n\n\t\t\t}\n\n\t\t\tif ( json.scale !== undefined ) {\n\n\t\t\t\tjson.scale = 1.0 / json.scale;\n\n\t\t\t} else {\n\n\t\t\t\tjson.scale = 1.0;\n\n\t\t\t}\n\n\t\t\tvar geometry = new Geometry();\n\n\t\t\tparseModel( json, geometry );\n\t\t\tparseSkin( json, geometry );\n\t\t\tparseMorphing( json, geometry );\n\t\t\tparseAnimations( json, geometry );\n\n\t\t\tgeometry.computeFaceNormals();\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\n\t\t\t\treturn { geometry: geometry };\n\n\t\t\t} else {\n\n\t\t\t\tvar materials = Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\n\n\t\t\t\treturn { geometry: geometry, materials: materials };\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ObjectLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.texturePath = '';\n\n}\n\nObject.assign( ObjectLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.texturePath === '' ) {\n\n\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\n\n\t\t}\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url + '. Use THREE.JSONLoader instead.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTexturePath: function ( value ) {\n\n\t\tthis.texturePath = value;\n\t\treturn this;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tparse: function ( json, onLoad ) {\n\n\t\tvar shapes = this.parseShape( json.shapes );\n\t\tvar geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tvar textures = this.parseTextures( json.textures, images );\n\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\tif ( json.animations ) {\n\n\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t}\n\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t},\n\n\tparseShape: function ( json ) {\n\n\t\tvar shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t},\n\n\tparseGeometries: function ( json, shapes ) {\n\n\t\tvar geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar geometryLoader = new JSONLoader();\n\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar geometry;\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\tif ( extrudePath !== undefined ) {\n\n\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.options\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.texturePath ).geometry;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t},\n\n\tparseMaterials: function ( json, textures ) {\n\n\t\tvar materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tarray.push( loader.parse( data.materials[ j ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterials[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t},\n\n\tparseAnimations: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar data = json[ i ];\n\n\t\t\tvar clip = AnimationClip.parse( data );\n\n\t\t\tif ( data.uuid !== undefined ) clip.uuid = data.uuid;\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t},\n\n\tparseImages: function ( json, onLoad ) {\n\n\t\tvar scope = this;\n\t\tvar images = {};\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\tvar loader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( var i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tvar image = json[ i ];\n\t\t\t\tvar url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\timages[ image.uuid ] = [];\n\n\t\t\t\t\tfor ( var j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar currentUrl = url[ j ];\n\n\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( currentUrl ) ? currentUrl : scope.texturePath + currentUrl;\n\n\t\t\t\t\t\timages[ image.uuid ].push( loadImage( path ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\n\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t},\n\n\tparseTextures: function ( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tvar textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( Array.isArray( images[ data.image ] ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture( images[ data.image ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture = new Texture( images[ data.image ] );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t},\n\n\tparseObject: function ( data, geometries, materials ) {\n\n\t\tvar object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tvar children = data.children;\n\n\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tvar levels = data.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tvar level = levels[ l ];\n\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n} );\n\nvar TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tSphericalReflectionMapping: SphericalReflectionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping\n};\n\nvar TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nvar TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\n\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\n\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\n};\n\n/**\n * @author thespite / http://clicktorelease.com/\n */\n\n\nfunction ImageBitmapLoader( manager ) {\n\n\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t}\n\n\tif ( typeof fetch === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t}\n\n\tthis.manager = manager !== undefined ? manager : DefaultLoadingManager;\n\tthis.options = undefined;\n\n}\n\nImageBitmapLoader.prototype = {\n\n\tconstructor: ImageBitmapLoader,\n\n\tsetOptions: function setOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tfetch( url ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, scope.options );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemEnd( url );\n\t\t\tscope.manager.itemError( url );\n\n\t\t} );\n\n\t},\n\n\tsetCrossOrigin: function ( /* value */ ) {\n\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n **/\n\nfunction ShapePath() {\n\n\tthis.type = 'ShapePath';\n\n\tthis.color = new Color();\n\n\tthis.subPaths = [];\n\tthis.currentPath = null;\n\n}\n\nObject.assign( ShapePath.prototype, {\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t},\n\n\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tvar inside = false;\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tvar edgeLowPt = inPolygon[ p ];\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\tvar subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tvar betterShapeHoles = [];\n\t\tvar newShapes = [];\n\t\tvar newShapeHoles = [];\n\t\tvar mainIdx = 0;\n\t\tvar tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tvar ambiguous = false;\n\t\t\tvar toChange = [];\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar tmpHoles;\n\n\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction Font( data ) {\n\n\tthis.type = 'Font';\n\n\tthis.data = data;\n\n}\n\nObject.assign( Font.prototype, {\n\n\tisFont: true,\n\n\tgenerateShapes: function ( text, size ) {\n\n\t\tif ( size === undefined ) size = 100;\n\n\t\tvar shapes = [];\n\t\tvar paths = createPaths( text, size, this.data );\n\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\nfunction createPaths( text, size, data ) {\n\n\tvar chars = Array.from ? Array.from( text ) : String( text ).split( '' ); // see #13988\n\tvar scale = size / data.resolution;\n\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tvar paths = [];\n\n\tvar offsetX = 0, offsetY = 0;\n\n\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\tvar char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tvar ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\tvar glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) return;\n\n\tvar path = new ShapePath();\n\n\tvar x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\tvar action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction FontLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FontLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tvar font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\treturn new Font( json );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar context;\n\nvar AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( context === undefined ) {\n\n\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\tcontext = value;\n\n\t}\n\n};\n\n/**\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction AudioLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( AudioLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\tvar bufferCopy = buffer.slice( 0 );\n\n\t\t\tvar context = AudioContext.getContext();\n\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t} );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction StereoCamera() {\n\n\tthis.type = 'StereoCamera';\n\n\tthis.aspect = 1;\n\n\tthis.eyeSep = 0.064;\n\n\tthis.cameraL = new PerspectiveCamera();\n\tthis.cameraL.layers.enable( 1 );\n\tthis.cameraL.matrixAutoUpdate = false;\n\n\tthis.cameraR = new PerspectiveCamera();\n\tthis.cameraR.layers.enable( 2 );\n\tthis.cameraR.matrixAutoUpdate = false;\n\n}\n\nObject.assign( StereoCamera.prototype, {\n\n\tupdate: ( function () {\n\n\t\tvar instance, focus, fov, aspect, near, far, zoom, eyeSep;\n\n\t\tvar eyeRight = new Matrix4();\n\t\tvar eyeLeft = new Matrix4();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tinstance = this;\n\t\t\t\tfocus = camera.focus;\n\t\t\t\tfov = camera.fov;\n\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\tnear = camera.near;\n\t\t\t\tfar = camera.far;\n\t\t\t\tzoom = camera.zoom;\n\n\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\teyeSep = this.eyeSep / 2;\n\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\n\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t// translate xOffset\n\n\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t// for left eye\n\n\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t// for right eye\n\n\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * Camera for rendering cube maps\n *\t- renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CubeCamera( near, far, cubeResolution ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'CubeCamera';\n\n\tvar fov = 90, aspect = 1;\n\n\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPX.up.set( 0, - 1, 0 );\n\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\tthis.add( cameraPX );\n\n\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNX.up.set( 0, - 1, 0 );\n\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\tthis.add( cameraNX );\n\n\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPY.up.set( 0, 0, 1 );\n\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\tthis.add( cameraPY );\n\n\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNY.up.set( 0, 0, - 1 );\n\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\tthis.add( cameraNY );\n\n\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPZ.up.set( 0, - 1, 0 );\n\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\tthis.add( cameraPZ );\n\n\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNZ.up.set( 0, - 1, 0 );\n\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\tthis.add( cameraNZ );\n\n\tvar options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\tthis.renderTarget.texture.name = \"CubeCamera\";\n\n\tthis.update = function ( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tvar renderTarget = this.renderTarget;\n\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderTarget.activeCubeFace = 0;\n\t\trenderer.render( scene, cameraPX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 1;\n\t\trenderer.render( scene, cameraNX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 2;\n\t\trenderer.render( scene, cameraPY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 3;\n\t\trenderer.render( scene, cameraNY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 4;\n\t\trenderer.render( scene, cameraPZ, renderTarget );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderTarget.activeCubeFace = 5;\n\t\trenderer.render( scene, cameraNZ, renderTarget );\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\tvar renderTarget = this.renderTarget;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\trenderTarget.activeCubeFace = i;\n\t\t\trenderer.setRenderTarget( renderTarget );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n}\n\nCubeCamera.prototype = Object.create( Object3D.prototype );\nCubeCamera.prototype.constructor = CubeCamera;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioListener() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'AudioListener';\n\n\tthis.context = AudioContext.getContext();\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( this.context.destination );\n\n\tthis.filter = null;\n\n}\n\nAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: AudioListener,\n\n\tgetInput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tremoveFilter: function ( ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.filter;\n\n\t},\n\n\tsetFilter: function ( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t},\n\n\tgetMasterVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetMasterVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar listener = this.context.listener;\n\t\t\tvar up = this.up;\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\tif ( listener.positionX ) {\n\n\t\t\t\tlistener.positionX.setValueAtTime( position.x, this.context.currentTime );\n\t\t\t\tlistener.positionY.setValueAtTime( position.y, this.context.currentTime );\n\t\t\t\tlistener.positionZ.setValueAtTime( position.z, this.context.currentTime );\n\t\t\t\tlistener.forwardX.setValueAtTime( orientation.x, this.context.currentTime );\n\t\t\t\tlistener.forwardY.setValueAtTime( orientation.y, this.context.currentTime );\n\t\t\t\tlistener.forwardZ.setValueAtTime( orientation.z, this.context.currentTime );\n\t\t\t\tlistener.upX.setValueAtTime( up.x, this.context.currentTime );\n\t\t\t\tlistener.upY.setValueAtTime( up.y, this.context.currentTime );\n\t\t\t\tlistener.upZ.setValueAtTime( up.z, this.context.currentTime );\n\n\t\t\t} else {\n\n\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction Audio( listener ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Audio';\n\n\tthis.context = listener.context;\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( listener.getInput() );\n\n\tthis.autoplay = false;\n\n\tthis.buffer = null;\n\tthis.loop = false;\n\tthis.startTime = 0;\n\tthis.offset = 0;\n\tthis.playbackRate = 1;\n\tthis.isPlaying = false;\n\tthis.hasPlaybackControl = true;\n\tthis.sourceType = 'empty';\n\n\tthis.filters = [];\n\n}\n\nAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Audio,\n\n\tgetOutput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tsetNodeSource: function ( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetMediaElementSource: function ( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetBuffer: function ( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t},\n\n\tplay: function () {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar source = this.context.createBufferSource();\n\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.playbackRate.setValueAtTime( this.playbackRate, this.startTime );\n\t\tthis.startTime = this.context.currentTime;\n\t\tsource.start( this.startTime, this.offset );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\treturn this.connect();\n\n\t},\n\n\tpause: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.offset += ( this.context.currentTime - this.startTime ) * this.playbackRate;\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.source.stop();\n\t\tthis.offset = 0;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t},\n\n\tconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdisconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilters: function () {\n\n\t\treturn this.filters;\n\n\t},\n\n\tsetFilters: function ( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value;\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t},\n\n\tsetFilter: function ( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t},\n\n\tsetPlaybackRate: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setValueAtTime( this.playbackRate, this.context.currentTime );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetPlaybackRate: function () {\n\n\t\treturn this.playbackRate;\n\n\t},\n\n\tonEnded: function () {\n\n\t\tthis.isPlaying = false;\n\n\t},\n\n\tgetLoop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t},\n\n\tsetLoop: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PositionalAudio( listener ) {\n\n\tAudio.call( this, listener );\n\n\tthis.panner = this.context.createPanner();\n\tthis.panner.connect( this.gain );\n\n}\n\nPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\tconstructor: PositionalAudio,\n\n\tgetOutput: function () {\n\n\t\treturn this.panner;\n\n\t},\n\n\tgetRefDistance: function () {\n\n\t\treturn this.panner.refDistance;\n\n\t},\n\n\tsetRefDistance: function ( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetRolloffFactor: function () {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t},\n\n\tsetRolloffFactor: function ( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetDistanceModel: function () {\n\n\t\treturn this.panner.distanceModel;\n\n\t},\n\n\tsetDistanceModel: function ( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxDistance: function () {\n\n\t\treturn this.panner.maxDistance;\n\n\t},\n\n\tsetMaxDistance: function ( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tsetDirectionalCone: function ( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar panner = this.panner;\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t\tpanner.setPosition( position.x, position.y, position.z );\n\t\t\tpanner.setOrientation( orientation.x, orientation.y, orientation.z );\n\n\t\t};\n\n\t} )()\n\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioAnalyser( audio, fftSize ) {\n\n\tthis.analyser = audio.context.createAnalyser();\n\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\taudio.getOutput().connect( this.analyser );\n\n}\n\nObject.assign( AudioAnalyser.prototype, {\n\n\tgetFrequencyData: function () {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t},\n\n\tgetAverageFrequency: function () {\n\n\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n} );\n\n/**\n *\n * Buffered scene graph property that allows weighted accumulation.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\tthis.binding = binding;\n\tthis.valueSize = valueSize;\n\n\tvar bufferType = Float64Array,\n\t\tmixFunction;\n\n\tswitch ( typeName ) {\n\n\t\tcase 'quaternion':\n\t\t\tmixFunction = this._slerp;\n\t\t\tbreak;\n\n\t\tcase 'string':\n\t\tcase 'bool':\n\t\t\tbufferType = Array;\n\t\t\tmixFunction = this._select;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tmixFunction = this._lerp;\n\n\t}\n\n\tthis.buffer = new bufferType( valueSize * 4 );\n\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t//\n\t// interpolators can use .buffer as their .result\n\t// the data then goes to 'incoming'\n\t//\n\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t// the cumulative result and are compared to detect\n\t// changes\n\t//\n\t// 'orig' stores the original state of the property\n\n\tthis._mixBufferRegion = mixFunction;\n\n\tthis.cumulativeWeight = 0;\n\n\tthis.useCount = 0;\n\tthis.referenceCount = 0;\n\n}\n\nObject.assign( PropertyMixer.prototype, {\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate: function ( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tvar mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t},\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply: function ( accuIndex ) {\n\n\t\tvar stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState: function () {\n\n\t\tvar binding = this.binding;\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * 3;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\tthis.cumulativeWeight = 0;\n\n\t},\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState: function () {\n\n\t\tvar originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t},\n\n\n\t// mix functions\n\n\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t},\n\n\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tvar s = 1 - t;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tvar j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * A reference to a real property in the scene graph.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\n// Characters [].:/ are reserved for track binding syntax.\nvar RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\nfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis._targetGroup = targetGroup;\n\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n}\n\nObject.assign( Composite.prototype, {\n\n\tgetValue: function ( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t},\n\n\tsetValue: function ( array, offset ) {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t},\n\n\tbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t},\n\n\tunbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n} );\n\n\nfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\tthis.path = path;\n\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\tthis.rootNode = rootNode;\n\n}\n\nObject.assign( PropertyBinding, {\n\n\tComposite: Composite,\n\n\tcreate: function ( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param  {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tsanitizeNodeName: ( function () {\n\n\t\tvar reservedRe = new RegExp( '[' + RESERVED_CHARS_RE + ']', 'g' );\n\n\t\treturn function sanitizeNodeName( name ) {\n\n\t\t\treturn name.replace( /\\s/g, '_' ).replace( reservedRe, '' );\n\n\t\t};\n\n\t}() ),\n\n\tparseTrackName: function () {\n\n\t\t// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t\t// instead, we exclude reserved characters and match everything else.\n\t\tvar wordChar = '[^' + RESERVED_CHARS_RE + ']';\n\t\tvar wordCharOrDot = '[^' + RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n\t\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t\t// be matched to parse the rest of the track name.\n\t\tvar directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', wordChar );\n\n\t\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\t\tvar nodeRe = /(WCOD+)?/.source.replace( 'WCOD', wordCharOrDot );\n\n\t\t// Object on target node, and accessor. May not contain reserved\n\t\t// characters. Accessor may contain any character except closing bracket.\n\t\tvar objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', wordChar );\n\n\t\t// Property and accessor. May not contain reserved characters. Accessor may\n\t\t// contain any non-bracket characters.\n\t\tvar propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', wordChar );\n\n\t\tvar trackRe = new RegExp( ''\n\t\t\t+ '^'\n\t\t\t+ directoryRe\n\t\t\t+ nodeRe\n\t\t\t+ objectRe\n\t\t\t+ propertyRe\n\t\t\t+ '$'\n\t\t);\n\n\t\tvar supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\n\t\treturn function parseTrackName( trackName ) {\n\n\t\t\tvar matches = trackRe.exec( trackName );\n\n\t\t\tif ( ! matches ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\tvar results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t};\n\n\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\t\t\t\tif ( supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\treturn results;\n\n\t\t};\n\n\t}(),\n\n\tfindNode: function ( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tvar bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n} );\n\nObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable: function () {},\n\t_setValue_unavailable: function () {},\n\n\tBindingType: {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t},\n\n\tVersioning: {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t},\n\n\tGetterByBindingType: [\n\n\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t},\n\n\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\tvar source = this.resolvedProperty;\n\n\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t}\n\n\t\t},\n\n\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t},\n\n\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t}\n\n\t],\n\n\tSetterByBindingTypeAndVersioning: [\n\n\t\t[\n\t\t\t// Direct\n\n\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// EntireArray\n\n\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// ArrayElement\n\n\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// HasToFromArray\n\n\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t]\n\n\t],\n\n\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t// prototype version of these methods with one that represents\n\t\t// the bound state. When the property is not found, the methods\n\t\t// become no-ops.\n\n\t},\n\n\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t},\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind: function () {\n\n\t\tvar targetObject = this.node,\n\t\t\tparsedPath = this.parsedPath,\n\n\t\t\tobjectName = parsedPath.objectName,\n\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tvar versioning = this.Versioning.None;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tvar bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t},\n\n\tunbind: function () {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( PropertyBinding.prototype, {\n\n\t// initial state of these methods that calls 'bind'\n\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n} );\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n * \t-\tAdd objects you would otherwise pass as 'root' to the\n * \t\tconstructor or the .clipAction method of AnimationMixer.\n *\n * \t-\tInstead pass this object as 'root'.\n *\n * \t-\tYou can also add and remove objects later when the mixer\n * \t\tis running.\n *\n * Note:\n *\n *  \tObjects of this class appear as one object to the mixer,\n *  \tso cache control of the individual objects must be done\n *  \ton the group.\n *\n * Limitation:\n *\n * \t- \tThe animated properties must be compatible among the\n * \t\tall objects in the group.\n *\n *  -\tA single property can either be controlled through a\n *  \ttarget group or directly, but not both.\n *\n * @author tschw\n */\n\nfunction AnimationObjectGroup() {\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// cached objects followed by the active ones\n\tthis._objects = Array.prototype.slice.call( arguments );\n\n\tthis.nCachedObjects_ = 0;\t\t\t// threshold\n\t// note: read by PropertyBinding.Composite\n\n\tvar indices = {};\n\tthis._indicesByUUID = indices;\t\t// for bookkeeping\n\n\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t}\n\n\tthis._paths = [];\t\t\t\t\t// inside: string\n\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\n\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\n\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\n\n\tvar scope = this;\n\n\tthis.stats = {\n\n\t\tobjects: {\n\t\t\tget total() {\n\n\t\t\t\treturn scope._objects.length;\n\n\t\t\t},\n\t\t\tget inUse() {\n\n\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t}\n\t\t},\n\t\tget bindingsPerObject() {\n\n\t\t\treturn scope._bindings.length;\n\n\t\t}\n\n\t};\n\n}\n\nObject.assign( AnimationObjectGroup.prototype, {\n\n\tisAnimationObjectGroup: true,\n\n\tadd: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length,\n\t\t\tknownObject = undefined;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\tremove: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// remove & forget\n\tuncache: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ],\n\t\t\tbindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tvar paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tvar object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t},\n\n\tunsubscribe_: function ( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * Action provided by AnimationMixer for scheduling clip playback on specific\n * objects.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n *\n */\n\nfunction AnimationAction( mixer, clip, localRoot ) {\n\n\tthis._mixer = mixer;\n\tthis._clip = clip;\n\tthis._localRoot = localRoot || null;\n\n\tvar tracks = clip.tracks,\n\t\tnTracks = tracks.length,\n\t\tinterpolants = new Array( nTracks );\n\n\tvar interpolantSettings = {\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\t};\n\n\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\tinterpolants[ i ] = interpolant;\n\t\tinterpolant.settings = interpolantSettings;\n\n\t}\n\n\tthis._interpolantSettings = interpolantSettings;\n\n\tthis._interpolants = interpolants;\t// bound by the mixer\n\n\t// inside: PropertyMixer (managed by the mixer)\n\tthis._propertyBindings = new Array( nTracks );\n\n\tthis._cacheIndex = null;\t\t\t// for the memory manager\n\tthis._byClipCacheIndex = null;\t\t// for the memory manager\n\n\tthis._timeScaleInterpolant = null;\n\tthis._weightInterpolant = null;\n\n\tthis.loop = LoopRepeat;\n\tthis._loopCount = - 1;\n\n\t// global mixer time when the action is to be started\n\t// it's set back to 'null' upon start of the action\n\tthis._startTime = null;\n\n\t// scaled local time of the action\n\t// gets clamped or wrapped to 0..clip.duration according to loop\n\tthis.time = 0;\n\n\tthis.timeScale = 1;\n\tthis._effectiveTimeScale = 1;\n\n\tthis.weight = 1;\n\tthis._effectiveWeight = 1;\n\n\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\n\n\tthis.paused = false;\t\t\t\t// true -> zero effective time scale\n\tthis.enabled = true;\t\t\t\t// false -> zero effective weight\n\n\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\n\n\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\n\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\n\n}\n\nObject.assign( AnimationAction.prototype, {\n\n\t// State & Scheduling\n\n\tplay: function () {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t},\n\n\treset: function () {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0;\t\t\t// restart clip\n\t\tthis._loopCount = - 1;\t// forget previous loops\n\t\tthis._startTime = null;\t// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t},\n\n\tisRunning: function () {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t},\n\n\t// return true when play has been called\n\tisScheduled: function () {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t},\n\n\tstartAt: function ( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t},\n\n\tsetLoop: function ( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t},\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight: function ( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t},\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight: function () {\n\n\t\treturn this._effectiveWeight;\n\n\t},\n\n\tfadeIn: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t},\n\n\tfadeOut: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t},\n\n\tcrossFadeFrom: function ( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcrossFadeTo: function ( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t},\n\n\tstopFading: function () {\n\n\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale: function ( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale: function () {\n\n\t\treturn this._effectiveTimeScale;\n\n\t},\n\n\tsetDuration: function ( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\tsyncWith: function ( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\thalt: function ( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t},\n\n\twarp: function ( startTimeScale, endTimeScale, duration ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t},\n\n\tstopWarping: function () {\n\n\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Object Accessors\n\n\tgetMixer: function () {\n\n\t\treturn this._mixer;\n\n\t},\n\n\tgetClip: function () {\n\n\t\treturn this._clip;\n\n\t},\n\n\tgetRoot: function () {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t},\n\n\t// Interna\n\n\t_update: function ( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tvar weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tvar interpolants = this._interpolants;\n\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_updateWeight: function ( time ) {\n\n\t\tvar weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t},\n\n\t_updateTimeScale: function ( time ) {\n\n\t\tvar timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t},\n\n\t_updateTime: function ( deltaTime ) {\n\n\t\tvar time = this.time + deltaTime;\n\n\t\tif ( deltaTime === 0 ) return time;\n\n\t\tvar duration = this._clip.duration,\n\n\t\t\tloop = this.loop,\n\t\t\tloopCount = this._loopCount;\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else break handle_stop;\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\tthis.time = time;\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.time = time;\n\t\treturn time;\n\n\t},\n\n\t_setEndings: function ( atStart, atEnd, pingPong ) {\n\n\t\tvar settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart \t= ZeroSlopeEnding;\n\t\t\tsettings.endingEnd\t\t= ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_scheduleFading: function ( duration, weightNow, weightThen ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * Player for AnimationClips.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction AnimationMixer( root ) {\n\n\tthis._root = root;\n\tthis._initMemoryManager();\n\tthis._accuIndex = 0;\n\n\tthis.time = 0;\n\n\tthis.timeScale = 1.0;\n\n}\n\nAnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: AnimationMixer,\n\n\t_bindAction: function ( action, prototypeAction ) {\n\n\t\tvar root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar track = tracks[ i ],\n\t\t\t\ttrackName = track.name,\n\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t},\n\n\t_activateAction: function ( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t},\n\n\t_deactivateAction: function ( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t},\n\n\t// Memory manager\n\n\t_initMemoryManager: function () {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \t\tknownActions: Array< AnimationAction >\t- used as prototypes\n\t\t// \t\tactionByRoot: AnimationAction\t\t\t- lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t},\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction: function ( action ) {\n\n\t\tvar index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t},\n\n\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\tvar actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t},\n\n\t_removeInactiveAction: function ( action ) {\n\n\t\tvar actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tvar clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t},\n\n\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\tvar bindings = action._propertyBindings;\n\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tvar binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_lendAction: function ( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t},\n\n\t_takeBackAction: function ( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t},\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tbindings = this._bindings;\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t},\n\n\t_removeInactiveBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tremove_empty_map: {\n\n\t\t\tfor ( var _ in bindingByName ) break remove_empty_map; // eslint-disable-line no-unused-vars\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t},\n\n\t_lendBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t},\n\n\t_takeBackBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t},\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant: function () {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t},\n\n\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t},\n\n\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\tprototypeAction = null;\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tvar existingAction =\n\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t},\n\n\t// get an existing action\n\texistingAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction: function () {\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tthis._nActiveActions = 0;\n\t\tthis._nActiveBindings = 0;\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tactions[ i ].reset();\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].useCount = 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// advance the time and update apply the animation\n\tupdate: function ( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tvar action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tvar bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// return this mixer's root target object\n\tgetRoot: function () {\n\n\t\treturn this._root;\n\n\t},\n\n\t// free all resources specific to a particular clip\n\tuncacheClip: function ( clip ) {\n\n\t\tvar actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t},\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot: function ( root ) {\n\n\t\tvar rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remove a targeted clip from the cache\n\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Uniform( value ) {\n\n\tif ( typeof value === 'string' ) {\n\n\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\tvalue = arguments[ 1 ];\n\n\t}\n\n\tthis.value = value;\n\n}\n\nUniform.prototype.clone = function () {\n\n\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n};\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferGeometry() {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'InstancedBufferGeometry';\n\tthis.maxInstancedCount = undefined;\n\n}\n\nInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\tconstructor: InstancedBufferGeometry,\n\n\tisInstancedBufferGeometry: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferGeometry.prototype.copy.call( this, source );\n\n\t\tthis.maxInstancedCount = source.maxInstancedCount;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\tthis.data = interleavedBuffer;\n\tthis.itemSize = itemSize;\n\tthis.offset = offset;\n\n\tthis.normalized = normalized === true;\n\n}\n\nObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\tcount: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.count;\n\n\t\t}\n\n\t},\n\n\tarray: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.array;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( InterleavedBufferAttribute.prototype, {\n\n\tisInterleavedBufferAttribute: true,\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBuffer( array, stride ) {\n\n\tthis.array = array;\n\tthis.stride = stride;\n\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( InterleavedBuffer.prototype, {\n\n\tisInterleavedBuffer: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\tInterleavedBuffer.call( this, array, stride );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\tconstructor: InstancedInterleavedBuffer,\n\n\tisInstancedInterleavedBuffer: true,\n\n\tcopy: function ( source ) {\n\n\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferAttribute( array, itemSize, meshPerAttribute ) {\n\n\tBufferAttribute.call( this, array, itemSize );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\tconstructor: InstancedBufferAttribute,\n\n\tisInstancedBufferAttribute: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://clara.io/\n * @author stephomi / http://stephaneginier.com/\n */\n\nfunction Raycaster( origin, direction, near, far ) {\n\n\tthis.ray = new Ray( origin, direction );\n\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\tthis.near = near || 0;\n\tthis.far = far || Infinity;\n\n\tthis.params = {\n\t\tMesh: {},\n\t\tLine: {},\n\t\tLOD: {},\n\t\tPoints: { threshold: 1 },\n\t\tSprite: {}\n\t};\n\n\tObject.defineProperties( this.params, {\n\t\tPointCloud: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\treturn this.Points;\n\n\t\t\t}\n\t\t}\n\t} );\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.visible === false ) return;\n\n\tobject.raycast( raycaster, intersects );\n\n\tif ( recursive === true ) {\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Raycaster.prototype, {\n\n\tlinePrecision: 1,\n\n\tset: function ( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t},\n\n\tsetFromCamera: function ( coords, camera ) {\n\n\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\n\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t}\n\n\t},\n\n\tintersectObject: function ( object, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t},\n\n\tintersectObjects: function ( objects, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\treturn intersects;\n\n\t\t}\n\n\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Clock( autoStart ) {\n\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\tthis.startTime = 0;\n\tthis.oldTime = 0;\n\tthis.elapsedTime = 0;\n\n\tthis.running = false;\n\n}\n\nObject.assign( Clock.prototype, {\n\n\tstart: function () {\n\n\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t},\n\n\tgetElapsedTime: function () {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t},\n\n\tgetDelta: function () {\n\n\t\tvar diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The poles (phi) are at the positive and negative y axis.\n * The equator starts at positive z.\n */\n\nfunction Spherical( radius, phi, theta ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\n\n\treturn this;\n\n}\n\nObject.assign( Spherical.prototype, {\n\n\tset: function ( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t},\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe: function () {\n\n\t\tvar EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( vec3 ) {\n\n\t\tthis.radius = vec3.length();\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\n\t\t\tthis.phi = Math.acos( _Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n *\n */\n\nfunction Cylindrical( radius, theta, y ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\treturn this;\n\n}\n\nObject.assign( Cylindrical.prototype, {\n\n\tset: function ( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( vec3 ) {\n\n\t\tthis.radius = Math.sqrt( vec3.x * vec3.x + vec3.z * vec3.z );\n\t\tthis.theta = Math.atan2( vec3.x, vec3.z );\n\t\tthis.y = vec3.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Box2( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n}\n\nObject.assign( Box2.prototype, {\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction ImmediateRenderObject( material ) {\n\n\tObject3D.call( this );\n\n\tthis.material = material;\n\tthis.render = function ( /* renderCallback */ ) {};\n\n}\n\nImmediateRenderObject.prototype = Object.create( Object3D.prototype );\nImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\nImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length * 3;\n\n\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\nVertexNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\tvar idx = 0;\n\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction SpotLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = [\n\t\t0, 0, 0, \t0, 0, 1,\n\t\t0, 0, 0, \t1, 0, 1,\n\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t0, 0, 0, \t0, 1, 1,\n\t\t0, 0, 0, \t0, - 1, 1\n\t];\n\n\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\tpositions.push(\n\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t);\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.cone = new LineSegments( geometry, material );\n\tthis.add( this.cone );\n\n\tthis.update();\n\n}\n\nSpotLightHelper.prototype = Object.create( Object3D.prototype );\nSpotLightHelper.prototype.constructor = SpotLightHelper;\n\nSpotLightHelper.prototype.dispose = function () {\n\n\tthis.cone.geometry.dispose();\n\tthis.cone.material.dispose();\n\n};\n\nSpotLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\tvar vector2 = new Vector3();\n\n\treturn function update() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t};\n\n}();\n\n/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction getBoneList( object ) {\n\n\tvar boneList = [];\n\n\tif ( object && object.isBone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nfunction SkeletonHelper( object ) {\n\n\tvar bones = getBoneList( object );\n\n\tvar geometry = new BufferGeometry();\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar color1 = new Color( 0, 0, 1 );\n\tvar color2 = new Color( 0, 1, 0 );\n\n\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\tvar bone = bones[ i ];\n\n\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t}\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.root = object;\n\tthis.bones = bones;\n\n\tthis.matrix = object.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n}\n\nSkeletonHelper.prototype = Object.create( LineSegments.prototype );\nSkeletonHelper.prototype.constructor = SkeletonHelper;\n\nSkeletonHelper.prototype.updateMatrixWorld = function () {\n\n\tvar vector = new Vector3();\n\n\tvar boneMatrix = new Matrix4();\n\tvar matrixWorldInv = new Matrix4();\n\n\treturn function updateMatrixWorld( force ) {\n\n\t\tvar bones = this.bones;\n\n\t\tvar geometry = this.geometry;\n\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\tmatrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j, vector.x, vector.y, vector.z );\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, vector.x, vector.y, vector.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PointLightHelper( light, sphereSize, color ) {\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.color = color;\n\n\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\n\tMesh.call( this, geometry, material );\n\n\tthis.matrix = this.light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n\n\t/*\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tvar d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n}\n\nPointLightHelper.prototype = Object.create( Mesh.prototype );\nPointLightHelper.prototype.constructor = PointLightHelper;\n\nPointLightHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\n};\n\nPointLightHelper.prototype.update = function () {\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.material.color.copy( this.light.color );\n\n\t}\n\n\t/*\n\tvar d = this.light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.visible = true;\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\t*/\n\n};\n\n/**\n * @author abelnation / http://github.com/abelnation\n * @author Mugen87 / http://github.com/Mugen87\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction RectAreaLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.addAttribute( 'position', new BufferAttribute( new Float32Array( 5 * 3 ), 3 ) );\n\n\tthis.line = new Line( geometry, material );\n\tthis.add( this.line );\n\n\n\tthis.update();\n\n}\n\nRectAreaLightHelper.prototype = Object.create( Object3D.prototype );\nRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\nRectAreaLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nRectAreaLightHelper.prototype.update = function () {\n\n\t// calculate new dimensions of the helper\n\n\tvar hx = this.light.width * 0.5;\n\tvar hy = this.light.height * 0.5;\n\n\tvar position = this.line.geometry.attributes.position;\n\tvar array = position.array;\n\n\t// update vertices\n\n\tarray[ 0 ] = hx; array[ 1 ] = - hy; array[ 2 ] = 0;\n\tarray[ 3 ] = hx; array[ 4 ] = hy; array[ 5 ] = 0;\n\tarray[ 6 ] = - hx; array[ 7 ] = hy; array[ 8 ] = 0;\n\tarray[ 9 ] = - hx; array[ 10 ] = - hy; array[ 11 ] = 0;\n\tarray[ 12 ] = hx; array[ 13 ] = - hy; array[ 14 ] = 0;\n\n\tposition.needsUpdate = true;\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.line.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.line.material.color.copy( this.light.color );\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction HemisphereLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new OctahedronBufferGeometry( size );\n\tgeometry.rotateY( Math.PI * 0.5 );\n\n\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\tif ( this.color === undefined ) this.material.vertexColors = VertexColors;\n\n\tvar position = geometry.getAttribute( 'position' );\n\tvar colors = new Float32Array( position.count * 3 );\n\n\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\tthis.add( new Mesh( geometry, this.material ) );\n\n\tthis.update();\n\n}\n\nHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\nHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\nHemisphereLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nHemisphereLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\n\tvar color1 = new Color();\n\tvar color2 = new Color();\n\n\treturn function update() {\n\n\t\tvar mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\tcolor1.copy( this.light.color );\n\t\t\tcolor2.copy( this.light.groundColor );\n\n\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tvar color = ( i < ( l / 2 ) ) ? color1 : color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction GridHelper( size, divisions, color1, color2 ) {\n\n\tsize = size || 10;\n\tdivisions = divisions || 10;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar center = divisions / 2;\n\tvar step = size / divisions;\n\tvar halfSize = size / 2;\n\n\tvar vertices = [], colors = [];\n\n\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\tvar color = i === center ? color1 : color2;\n\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nGridHelper.prototype = Object.create( LineSegments.prototype );\nGridHelper.prototype.constructor = GridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n * @author Hectate / http://www.github.com/Hectate\n */\n\nfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\tradius = radius || 10;\n\tradials = radials || 16;\n\tcircles = circles || 8;\n\tdivisions = divisions || 64;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar x, z;\n\tvar v, i, j, r, color;\n\n\t// create the radials\n\n\tfor ( i = 0; i <= radials; i ++ ) {\n\n\t\tv = ( i / radials ) * ( Math.PI * 2 );\n\n\t\tx = Math.sin( v ) * radius;\n\t\tz = Math.cos( v ) * radius;\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tvertices.push( x, 0, z );\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tcolors.push( color.r, color.g, color.b );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t}\n\n\t// create the circles\n\n\tfor ( i = 0; i <= circles; i ++ ) {\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tr = radius - ( radius / circles * i );\n\n\t\tfor ( j = 0; j < divisions; j ++ ) {\n\n\t\t\t// first vertex\n\n\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t// second vertex\n\n\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nPolarGridHelper.prototype = Object.create( LineSegments.prototype );\nPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t// FaceNormalsHelper only supports THREE.Geometry\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length;\n\n\t} else {\n\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\tthis.update();\n\n}\n\nFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\nFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\nFaceNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tvar vertices = objGeometry.vertices;\n\n\t\tvar faces = objGeometry.faces;\n\n\t\tvar idx = 0;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar normal = face.normal;\n\n\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t.divideScalar( 3 )\n\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction DirectionalLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tif ( size === undefined ) size = 1;\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [\n\t\t- size, size, 0,\n\t\tsize, size, 0,\n\t\tsize, - size, 0,\n\t\t- size, - size, 0,\n\t\t- size, size, 0\n\t], 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.lightPlane = new Line( geometry, material );\n\tthis.add( this.lightPlane );\n\n\tgeometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\tthis.targetLine = new Line( geometry, material );\n\tthis.add( this.targetLine );\n\n\tthis.update();\n\n}\n\nDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\nDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\nDirectionalLightHelper.prototype.dispose = function () {\n\n\tthis.lightPlane.geometry.dispose();\n\tthis.lightPlane.material.dispose();\n\tthis.targetLine.geometry.dispose();\n\tthis.targetLine.material.dispose();\n\n};\n\nDirectionalLightHelper.prototype.update = function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar v3 = new Vector3();\n\n\treturn function update() {\n\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\tv3.subVectors( v2, v1 );\n\n\t\tthis.lightPlane.lookAt( v3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( v3 );\n\t\tthis.targetLine.scale.z = v3.length();\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author Mugen87 / https://github.com/Mugen87\n *\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nfunction CameraHelper( camera ) {\n\n\tvar geometry = new BufferGeometry();\n\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar pointMap = {};\n\n\t// colors\n\n\tvar colorFrustum = new Color( 0xffaa00 );\n\tvar colorCone = new Color( 0xff0000 );\n\tvar colorUp = new Color( 0x00aaff );\n\tvar colorTarget = new Color( 0xffffff );\n\tvar colorCross = new Color( 0x333333 );\n\n\t// near\n\n\taddLine( 'n1', 'n2', colorFrustum );\n\taddLine( 'n2', 'n4', colorFrustum );\n\taddLine( 'n4', 'n3', colorFrustum );\n\taddLine( 'n3', 'n1', colorFrustum );\n\n\t// far\n\n\taddLine( 'f1', 'f2', colorFrustum );\n\taddLine( 'f2', 'f4', colorFrustum );\n\taddLine( 'f4', 'f3', colorFrustum );\n\taddLine( 'f3', 'f1', colorFrustum );\n\n\t// sides\n\n\taddLine( 'n1', 'f1', colorFrustum );\n\taddLine( 'n2', 'f2', colorFrustum );\n\taddLine( 'n3', 'f3', colorFrustum );\n\taddLine( 'n4', 'f4', colorFrustum );\n\n\t// cone\n\n\taddLine( 'p', 'n1', colorCone );\n\taddLine( 'p', 'n2', colorCone );\n\taddLine( 'p', 'n3', colorCone );\n\taddLine( 'p', 'n4', colorCone );\n\n\t// up\n\n\taddLine( 'u1', 'u2', colorUp );\n\taddLine( 'u2', 'u3', colorUp );\n\taddLine( 'u3', 'u1', colorUp );\n\n\t// target\n\n\taddLine( 'c', 't', colorTarget );\n\taddLine( 'p', 'c', colorCross );\n\n\t// cross\n\n\taddLine( 'cn1', 'cn2', colorCross );\n\taddLine( 'cn3', 'cn4', colorCross );\n\n\taddLine( 'cf1', 'cf2', colorCross );\n\taddLine( 'cf3', 'cf4', colorCross );\n\n\tfunction addLine( a, b, color ) {\n\n\t\taddPoint( a, color );\n\t\taddPoint( b, color );\n\n\t}\n\n\tfunction addPoint( id, color ) {\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\tpointMap[ id ] = [];\n\n\t\t}\n\n\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.camera = camera;\n\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\tthis.matrix = camera.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.pointMap = pointMap;\n\n\tthis.update();\n\n}\n\nCameraHelper.prototype = Object.create( LineSegments.prototype );\nCameraHelper.prototype.constructor = CameraHelper;\n\nCameraHelper.prototype.update = function () {\n\n\tvar geometry, pointMap;\n\n\tvar vector = new Vector3();\n\tvar camera = new Camera();\n\n\tfunction setPoint( point, x, y, z ) {\n\n\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\tvar points = pointMap[ point ];\n\n\t\tif ( points !== undefined ) {\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tposition.setXYZ( points[ i ], vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn function update() {\n\n\t\tgeometry = this.geometry;\n\t\tpointMap = this.pointMap;\n\n\t\tvar w = 1, h = 1;\n\n\t\t// we need just camera projection matrix\n\t\t// world matrix must be identity\n\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', 0, 0, - 1 );\n\t\tsetPoint( 't', 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', - w, - h, - 1 );\n\t\tsetPoint( 'n2', w, - h, - 1 );\n\t\tsetPoint( 'n3', - w, h, - 1 );\n\t\tsetPoint( 'n4', w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', - w, - h, 1 );\n\t\tsetPoint( 'f2', w, - h, 1 );\n\t\tsetPoint( 'f3', - w, h, 1 );\n\t\tsetPoint( 'f4', w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', - w, 0, 1 );\n\t\tsetPoint( 'cf2', w, 0, 1 );\n\t\tsetPoint( 'cf3', 0, - h, 1 );\n\t\tsetPoint( 'cf4', 0, h, 1 );\n\n\t\tsetPoint( 'cn1', - w, 0, - 1 );\n\t\tsetPoint( 'cn2', w, 0, - 1 );\n\t\tsetPoint( 'cn3', 0, - h, - 1 );\n\t\tsetPoint( 'cn4', 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n */\n\nfunction BoxHelper( object, color ) {\n\n\tthis.object = object;\n\n\tif ( color === undefined ) color = 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\tvar positions = new Float32Array( 8 * 3 );\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nBoxHelper.prototype = Object.create( LineSegments.prototype );\nBoxHelper.prototype.constructor = BoxHelper;\n\nBoxHelper.prototype.update = ( function () {\n\n\tvar box = new Box3();\n\n\treturn function update( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\tbox.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tvar min = box.min;\n\t\tvar max = box.max;\n\n\t\t/*\n\t\t  5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tvar position = this.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t};\n\n} )();\n\nBoxHelper.prototype.setFromObject = function ( object ) {\n\n\tthis.object = object;\n\tthis.update();\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3Helper( box, hex ) {\n\n\tthis.type = 'Box3Helper';\n\n\tthis.box = box;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.geometry.computeBoundingSphere();\n\n}\n\nBox3Helper.prototype = Object.create( LineSegments.prototype );\nBox3Helper.prototype.constructor = Box3Helper;\n\nBox3Helper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar box = this.box;\n\n\tif ( box.isEmpty() ) return;\n\n\tbox.getCenter( this.position );\n\n\tbox.getSize( this.scale );\n\n\tthis.scale.multiplyScalar( 0.5 );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction PlaneHelper( plane, size, hex ) {\n\n\tthis.type = 'PlaneHelper';\n\n\tthis.plane = plane;\n\n\tthis.size = ( size === undefined ) ? 1 : size;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tgeometry.computeBoundingSphere();\n\n\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t//\n\n\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\tvar geometry2 = new BufferGeometry();\n\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\tgeometry2.computeBoundingSphere();\n\n\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\n\n}\n\nPlaneHelper.prototype = Object.create( Line.prototype );\nPlaneHelper.prototype.constructor = PlaneHelper;\n\nPlaneHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar scale = - this.plane.constant;\n\n\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\tthis.lookAt( this.plane.normal );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author zz85 / http://github.com/zz85\n * @author bhouston / http://clara.io\n *\n * Creates an arrow for visualizing directions\n *\n * Parameters:\n *  dir - Vector3\n *  origin - Vector3\n *  length - Number\n *  color - color in hex value\n *  headLength - Number\n *  headWidth - Number\n */\n\nvar lineGeometry, coneGeometry;\n\nfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t// dir is assumed to be normalized\n\n\tObject3D.call( this );\n\n\tif ( color === undefined ) color = 0xffff00;\n\tif ( length === undefined ) length = 1;\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tif ( lineGeometry === undefined ) {\n\n\t\tlineGeometry = new BufferGeometry();\n\t\tlineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\tconeGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\t}\n\n\tthis.position.copy( origin );\n\n\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\n\tthis.line.matrixAutoUpdate = false;\n\tthis.add( this.line );\n\n\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\tthis.cone.matrixAutoUpdate = false;\n\tthis.add( this.cone );\n\n\tthis.setDirection( dir );\n\tthis.setLength( length, headLength, headWidth );\n\n}\n\nArrowHelper.prototype = Object.create( Object3D.prototype );\nArrowHelper.prototype.constructor = ArrowHelper;\n\nArrowHelper.prototype.setDirection = ( function () {\n\n\tvar axis = new Vector3();\n\tvar radians;\n\n\treturn function setDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tradians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t}\n\n\t};\n\n}() );\n\nArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\tthis.line.updateMatrix();\n\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\tthis.cone.position.y = length;\n\tthis.cone.updateMatrix();\n\n};\n\nArrowHelper.prototype.setColor = function ( color ) {\n\n\tthis.line.material.color.copy( color );\n\tthis.cone.material.color.copy( color );\n\n};\n\n/**\n * @author sroucheray / http://sroucheray.org/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AxesHelper( size ) {\n\n\tsize = size || 1;\n\n\tvar vertices = [\n\t\t0, 0, 0,\tsize, 0, 0,\n\t\t0, 0, 0,\t0, size, 0,\n\t\t0, 0, 0,\t0, 0, size\n\t];\n\n\tvar colors = [\n\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t0, 0, 1,\t0, 0.6, 1\n\t];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nAxesHelper.prototype = Object.create( LineSegments.prototype );\nAxesHelper.prototype.constructor = AxesHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n}\n\nvar LineStrip = 0;\n\nvar LinePieces = 1;\n\nfunction MeshFaceMaterial( materials ) {\n\n\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\treturn materials;\n\n}\n\nfunction MultiMaterial( materials ) {\n\n\tif ( materials === undefined ) materials = [];\n\n\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\tmaterials.isMultiMaterial = true;\n\tmaterials.materials = materials;\n\tmaterials.clone = function () {\n\n\t\treturn materials.slice();\n\n\t};\n\treturn materials;\n\n}\n\nfunction PointCloud( geometry, material ) {\n\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction Particle( material ) {\n\n\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\treturn new Sprite( material );\n\n}\n\nfunction ParticleSystem( geometry, material ) {\n\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction PointCloudMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleBasicMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleSystemMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction Vertex( x, y, z ) {\n\n\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\treturn new Vector3( x, y, z );\n\n}\n\n//\n\nfunction DynamicBufferAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n}\n\nfunction Int8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\treturn new Int8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\treturn new Uint8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n}\n\nfunction Int16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\treturn new Int16BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\treturn new Uint16BufferAttribute( array, itemSize );\n\n}\n\nfunction Int32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\treturn new Int32BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\treturn new Uint32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\treturn new Float32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float64Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\treturn new Float64BufferAttribute( array, itemSize );\n\n}\n\n//\n\nCurve.create = function ( construct, getPoint ) {\n\n\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\tconstruct.prototype = Object.create( Curve.prototype );\n\tconstruct.prototype.constructor = construct;\n\tconstruct.prototype.getPoint = getPoint;\n\n\treturn construct;\n\n};\n\n//\n\nObject.assign( CurvePath.prototype, {\n\n\tcreatePointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from path points (for Line or Points objects)\n\n\t\tvar pts = this.getPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from equidistant sampling along the path\n\n\t\tvar pts = this.getSpacedPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateGeometry: function ( points ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\tvar geometry = new Geometry();\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\n//\n\nObject.assign( Path.prototype, {\n\n\tfromPoints: function ( points ) {\n\n\t\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\t\tthis.setFromPoints( points );\n\n\t}\n\n} );\n\n//\n\nfunction ClosedSplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\tthis.closed = true;\n\n}\n\nClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction SplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction Spline( points ) {\n\n\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\nObject.assign( Spline.prototype, {\n\n\tinitFromArray: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t},\n\tgetControlPointsArray: function ( /* optionalTarget */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t},\n\treparametrizeByArcLength: function ( /* samplingCoef */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nfunction AxisHelper( size ) {\n\n\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\treturn new AxesHelper( size );\n\n}\n\nfunction BoundingBoxHelper( object, color ) {\n\n\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\treturn new BoxHelper( object, color );\n\n}\n\nfunction EdgesHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\nGridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\nSkeletonHelper.prototype.update = function () {\n\n\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n};\n\nfunction WireframeHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\n//\n\nObject.assign( Loader.prototype, {\n\n\textractUrlBase: function ( url ) {\n\n\t\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\t\treturn LoaderUtils.extractUrlBase( url );\n\n\t}\n\n} );\n\nfunction XHRLoader( manager ) {\n\n\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\treturn new FileLoader( manager );\n\n}\n\nfunction BinaryTextureLoader( manager ) {\n\n\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\treturn new DataTextureLoader( manager );\n\n}\n\n//\n\nObject.assign( Box2.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nObject.assign( Box3.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nLine3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nObject.assign( _Math, {\n\n\trandom16: function () {\n\n\t\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\n\t\treturn Math.random();\n\n\t},\n\n\tnearestPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\n\t\treturn _Math.floorPowerOfTwo( value );\n\n\t},\n\n\tnextPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\n\t\treturn _Math.ceilPowerOfTwo( value );\n\n\t}\n\n} );\n\nObject.assign( Matrix3.prototype, {\n\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\treturn vector.applyMatrix3( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( Matrix4.prototype, {\n\n\textractPosition: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\treturn this.copyPosition( m );\n\n\t},\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tgetPosition: function () {\n\n\t\tvar v1;\n\n\t\treturn function getPosition() {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t};\n\n\t}(),\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\treturn this.makeRotationFromQuaternion( q );\n\n\t},\n\tmultiplyToArray: function () {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector4: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n\t},\n\trotateAxis: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\tv.transformDirection( this );\n\n\t},\n\tcrossVector: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\ttranslate: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t},\n\trotateX: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t},\n\trotateY: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t},\n\trotateZ: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t},\n\trotateByAxis: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t},\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t}\n\n} );\n\nPlane.prototype.isIntersectionLine = function ( line ) {\n\n\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\treturn this.intersectsLine( line );\n\n};\n\nQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\treturn vector.applyQuaternion( this );\n\n};\n\nObject.assign( Ray.prototype, {\n\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionPlane: function ( plane ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\treturn this.intersectsPlane( plane );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t}\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tarea: function () {\n\n\t\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\t\treturn this.getArea();\n\n\t},\n\tbarycoordFromPoint: function ( point, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn this.getBarycoord( point, target );\n\n\t},\n\tmidpoint: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\t\treturn this.getMidpoint( target );\n\n\t},\n\tnormal: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn this.getNormal( target );\n\n\t},\n\tplane: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\t\treturn this.getPlane( target );\n\n\t}\n\n} );\n\nObject.assign( Triangle, {\n\n\tbarycoordFromPoint: function ( point, a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n\t},\n\tnormal: function ( a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn Triangle.getNormal( a, b, c, target );\n\n\t}\n\n} );\n\nObject.assign( Shape.prototype, {\n\n\textractAllPoints: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\t\treturn this.extractPoints( divisions );\n\n\t},\n\textrude: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\treturn new ExtrudeGeometry( this, options );\n\n\t},\n\tmakeGeometry: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\treturn new ShapeGeometry( this, options );\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector3.prototype, {\n\n\tsetEulerFromRotationMatrix: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t},\n\tsetEulerFromQuaternion: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t},\n\tgetPositionFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\treturn this.setFromMatrixPosition( m );\n\n\t},\n\tgetScaleFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\treturn this.setFromMatrixScale( m );\n\n\t},\n\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t},\n\tapplyProjection: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\treturn this.applyMatrix4( m );\n\n\t},\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector4.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\n//\n\nObject.assign( Geometry.prototype, {\n\n\tcomputeTangents: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeLineDistances: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' );\n\n\t}\n\n} );\n\nObject.assign( Object3D.prototype, {\n\n\tgetChildByName: function ( name ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\treturn this.getObjectByName( name );\n\n\t},\n\trenderDepth: function () {\n\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t},\n\ttranslate: function ( distance, axis ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\treturn this.translateOnAxis( axis, distance );\n\n\t},\n\tgetWorldRotation: function () {\n\n\t\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n\t}\n\n} );\n\nObject.defineProperties( Object3D.prototype, {\n\n\teulerOrder: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( LOD.prototype, {\n\n\tobjects: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\treturn this.levels;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t},\n\tset: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\treturn this.arcLengthDivisions;\n\n\t},\n\tset: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\tthis.arcLengthDivisions = value;\n\n\t}\n\n} );\n\n//\n\nPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( Light.prototype, {\n\tonlyShadow: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tlength: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\treturn this.array.length;\n\n\t\t}\n\t},\n\tcopyIndicesArray: function ( /* indices */ ) {\n\n\t\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( BufferGeometry.prototype, {\n\n\taddIndex: function ( index ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\tthis.setIndex( index );\n\n\t},\n\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\tif ( indexOffset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t}\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\tthis.addGroup( start, count );\n\n\t},\n\tclearDrawCalls: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\tthis.clearGroups();\n\n\t},\n\tcomputeTangents: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeOffsets: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( BufferGeometry.prototype, {\n\n\tdrawcalls: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( ExtrudeBufferGeometry.prototype, {\n\n\tgetArrays: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' );\n\n\t},\n\n\taddShapeList: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' );\n\n\t},\n\n\taddShape: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Uniform.prototype, {\n\n\tdynamic: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t}\n\t},\n\tonUpdate: {\n\t\tvalue: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\treturn this;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Material.prototype, {\n\n\twrapAround: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t}\n\t},\n\twrapRGB: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\treturn new Color();\n\n\t\t}\n\t},\n\n\tshading: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\tmetal: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( ShaderMaterial.prototype, {\n\n\tderivatives: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( WebGLRenderer.prototype, {\n\n\tanimate: function ( callback ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\t\tthis.setAnimationLoop( callback );\n\n\t},\n\n\tgetCurrentRenderTarget: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\treturn this.getRenderTarget();\n\n\t},\n\n\tgetMaxAnisotropy: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\treturn this.capabilities.getMaxAnisotropy();\n\n\t},\n\n\tgetPrecision: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\treturn this.capabilities.precision;\n\n\t},\n\n\tresetGLState: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\t\treturn this.state.reset();\n\n\t},\n\n\tsupportsFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t},\n\tsupportsHalfFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t},\n\tsupportsStandardDerivatives: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t},\n\tsupportsCompressedTextureS3TC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t},\n\tsupportsCompressedTexturePVRTC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t},\n\tsupportsBlendMinMax: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t},\n\tsupportsVertexTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\treturn this.capabilities.vertexTextures;\n\n\t},\n\tsupportsInstancedArrays: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t},\n\tenableScissorTest: function ( boolean ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\tthis.setScissorTest( boolean );\n\n\t},\n\tinitMaterial: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t},\n\taddPrePlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t},\n\taddPostPlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t},\n\tupdateShadowMap: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t},\n\tsetFaceCulling: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\tshadowMapEnabled: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.enabled;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n} );\n\nObject.defineProperties( WebGLShadowMap.prototype, {\n\n\tcullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* cullFace */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderReverseSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderSingleSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\twrapS: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebVRManager.prototype, {\n\n\tstanding: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebVRManager: .standing has been removed.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nAudio.prototype.load = function ( file ) {\n\n\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\tvar scope = this;\n\tvar audioLoader = new AudioLoader();\n\taudioLoader.load( file, function ( buffer ) {\n\n\t\tscope.setBuffer( buffer );\n\n\t} );\n\treturn this;\n\n};\n\nAudioAnalyser.prototype.getData = function () {\n\n\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\treturn this.getFrequencyData();\n\n};\n\n//\n\nCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\treturn this.update( renderer, scene );\n\n};\n\n//\n\nvar GeometryUtils = {\n\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\tvar matrix;\n\n\t\tif ( geometry2.isMesh ) {\n\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\tmatrix = geometry2.matrix;\n\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t}\n\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t},\n\n\tcenter: function ( geometry ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\treturn geometry.center();\n\n\t}\n\n};\n\nvar ImageUtils = {\n\n\tcrossOrigin: undefined,\n\n\tloadTexture: function ( url, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\t\tvar loader = new TextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t},\n\n\tloadTextureCube: function ( urls, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\t\tvar loader = new CubeTextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t},\n\n\tloadCompressedTexture: function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n\t},\n\n\tloadCompressedTextureCube: function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n\t}\n\n};\n\n//\n\nfunction Projector() {\n\n\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\n\n\tthis.projectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\tvector.project( camera );\n\n\t};\n\n\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\tvector.unproject( camera );\n\n\t};\n\n\tthis.pickingRay = function () {\n\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t};\n\n}\n\n//\n\nfunction CanvasRenderer() {\n\n\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\n\n\tthis.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\tthis.clear = function () {};\n\tthis.render = function () {};\n\tthis.setClearColor = function () {};\n\tthis.setSize = function () {};\n\n}\n\n//\n\nvar SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tattach: function ( /* child, scene, parent */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t}\n\n};\n\n//\n\nfunction LensFlare() {\n\n\tconsole.error( 'THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js' );\n\n}\n\nexport { WebGLRenderTargetCube, WebGLRenderTarget, WebGLRenderer, ShaderLib, UniformsLib, UniformsUtils, ShaderChunk, FogExp2, Fog, Scene, Sprite, LOD, SkinnedMesh, Skeleton, Bone, Mesh, LineSegments, LineLoop, Line, Points, Group, VideoTexture, DataTexture, CompressedTexture, CubeTexture, CanvasTexture, DepthTexture, Texture, CompressedTextureLoader, DataTextureLoader, CubeTextureLoader, TextureLoader, ObjectLoader, MaterialLoader, BufferGeometryLoader, DefaultLoadingManager, LoadingManager, JSONLoader, ImageLoader, ImageBitmapLoader, FontLoader, FileLoader, Loader, LoaderUtils, Cache, AudioLoader, SpotLightShadow, SpotLight, PointLight, RectAreaLight, HemisphereLight, DirectionalLightShadow, DirectionalLight, AmbientLight, LightShadow, Light, StereoCamera, PerspectiveCamera, OrthographicCamera, CubeCamera, ArrayCamera, Camera, AudioListener, PositionalAudio, AudioContext, AudioAnalyser, Audio, VectorKeyframeTrack, StringKeyframeTrack, QuaternionKeyframeTrack, NumberKeyframeTrack, ColorKeyframeTrack, BooleanKeyframeTrack, PropertyMixer, PropertyBinding, KeyframeTrack, AnimationUtils, AnimationObjectGroup, AnimationMixer, AnimationClip, Uniform, InstancedBufferGeometry, BufferGeometry, Geometry, InterleavedBufferAttribute, InstancedInterleavedBuffer, InterleavedBuffer, InstancedBufferAttribute, Face3, Object3D, Raycaster, Layers, EventDispatcher, Clock, QuaternionLinearInterpolant, LinearInterpolant, DiscreteInterpolant, CubicInterpolant, Interpolant, Triangle, _Math as Math, Spherical, Cylindrical, Plane, Frustum, Sphere, Ray, Matrix4, Matrix3, Box3, Box2, Line3, Euler, Vector4, Vector3, Vector2, Quaternion, Color, ImmediateRenderObject, VertexNormalsHelper, SpotLightHelper, SkeletonHelper, PointLightHelper, RectAreaLightHelper, HemisphereLightHelper, GridHelper, PolarGridHelper, FaceNormalsHelper, DirectionalLightHelper, CameraHelper, BoxHelper, Box3Helper, PlaneHelper, ArrowHelper, AxesHelper, Shape, Path, ShapePath, Font, CurvePath, Curve, ShapeUtils, WebGLUtils, WireframeGeometry, ParametricGeometry, ParametricBufferGeometry, TetrahedronGeometry, TetrahedronBufferGeometry, OctahedronGeometry, OctahedronBufferGeometry, IcosahedronGeometry, IcosahedronBufferGeometry, DodecahedronGeometry, DodecahedronBufferGeometry, PolyhedronGeometry, PolyhedronBufferGeometry, TubeGeometry, TubeBufferGeometry, TorusKnotGeometry, TorusKnotBufferGeometry, TorusGeometry, TorusBufferGeometry, TextGeometry, TextBufferGeometry, SphereGeometry, SphereBufferGeometry, RingGeometry, RingBufferGeometry, PlaneGeometry, PlaneBufferGeometry, LatheGeometry, LatheBufferGeometry, ShapeGeometry, ShapeBufferGeometry, ExtrudeGeometry, ExtrudeBufferGeometry, EdgesGeometry, ConeGeometry, ConeBufferGeometry, CylinderGeometry, CylinderBufferGeometry, CircleGeometry, CircleBufferGeometry, BoxGeometry, BoxBufferGeometry, ShadowMaterial, SpriteMaterial, RawShaderMaterial, ShaderMaterial, PointsMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshPhongMaterial, MeshToonMaterial, MeshNormalMaterial, MeshLambertMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshBasicMaterial, LineDashedMaterial, LineBasicMaterial, Material, Float64BufferAttribute, Float32BufferAttribute, Uint32BufferAttribute, Int32BufferAttribute, Uint16BufferAttribute, Int16BufferAttribute, Uint8ClampedBufferAttribute, Uint8BufferAttribute, Int8BufferAttribute, BufferAttribute, ArcCurve, CatmullRomCurve3, CubicBezierCurve, CubicBezierCurve3, EllipseCurve, LineCurve, LineCurve3, QuadraticBezierCurve, QuadraticBezierCurve3, SplineCurve, REVISION, MOUSE, CullFaceNone, CullFaceBack, CullFaceFront, CullFaceFrontBack, FrontFaceDirectionCW, FrontFaceDirectionCCW, BasicShadowMap, PCFShadowMap, PCFSoftShadowMap, FrontSide, BackSide, DoubleSide, FlatShading, SmoothShading, NoColors, FaceColors, VertexColors, NoBlending, NormalBlending, AdditiveBlending, SubtractiveBlending, MultiplyBlending, CustomBlending, AddEquation, SubtractEquation, ReverseSubtractEquation, MinEquation, MaxEquation, ZeroFactor, OneFactor, SrcColorFactor, OneMinusSrcColorFactor, SrcAlphaFactor, OneMinusSrcAlphaFactor, DstAlphaFactor, OneMinusDstAlphaFactor, DstColorFactor, OneMinusDstColorFactor, SrcAlphaSaturateFactor, NeverDepth, AlwaysDepth, LessDepth, LessEqualDepth, EqualDepth, GreaterEqualDepth, GreaterDepth, NotEqualDepth, MultiplyOperation, MixOperation, AddOperation, NoToneMapping, LinearToneMapping, ReinhardToneMapping, Uncharted2ToneMapping, CineonToneMapping, UVMapping, CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping, SphericalReflectionMapping, CubeUVReflectionMapping, CubeUVRefractionMapping, RepeatWrapping, ClampToEdgeWrapping, MirroredRepeatWrapping, NearestFilter, NearestMipMapNearestFilter, NearestMipMapLinearFilter, LinearFilter, LinearMipMapNearestFilter, LinearMipMapLinearFilter, UnsignedByteType, ByteType, ShortType, UnsignedShortType, IntType, UnsignedIntType, FloatType, HalfFloatType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShort565Type, UnsignedInt248Type, AlphaFormat, RGBFormat, RGBAFormat, LuminanceFormat, LuminanceAlphaFormat, RGBEFormat, DepthFormat, DepthStencilFormat, RGB_S3TC_DXT1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_PVRTC_2BPPV1_Format, RGB_ETC1_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, LoopOnce, LoopRepeat, LoopPingPong, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, ZeroCurvatureEnding, ZeroSlopeEnding, WrapAroundEnding, TrianglesDrawMode, TriangleStripDrawMode, TriangleFanDrawMode, LinearEncoding, sRGBEncoding, GammaEncoding, RGBEEncoding, LogLuvEncoding, RGBM7Encoding, RGBM16Encoding, RGBDEncoding, BasicDepthPacking, RGBADepthPacking, TangentSpaceNormalMap, ObjectSpaceNormalMap, BoxGeometry as CubeGeometry, Face4, LineStrip, LinePieces, MeshFaceMaterial, MultiMaterial, PointCloud, Particle, ParticleSystem, PointCloudMaterial, ParticleBasicMaterial, ParticleSystemMaterial, Vertex, DynamicBufferAttribute, Int8Attribute, Uint8Attribute, Uint8ClampedAttribute, Int16Attribute, Uint16Attribute, Int32Attribute, Uint32Attribute, Float32Attribute, Float64Attribute, ClosedSplineCurve3, SplineCurve3, Spline, AxisHelper, BoundingBoxHelper, EdgesHelper, WireframeHelper, XHRLoader, BinaryTextureLoader, GeometryUtils, ImageUtils, Projector, CanvasRenderer, SceneUtils, LensFlare };\n","import {Scene, TextGeometry, MeshPhongMaterial, Mesh, Group, Vector3, \n  PerspectiveCamera, DirectionalLight, PointLight, Color, FontLoader, \n  WebGLRenderer} from 'three';\nimport GIF from 'gif.js';\nimport DroidSansRegularFont from './droid_sans_regular.typeface.json';\nimport css from './main.css';\n\n\nvar width = 500;\nvar height = 500;\n\nvar createText = function(font, color, displayText) {\n  var text = new TextGeometry(displayText, {\n    font: font,\n    size: 70,\n    height: 20,\n    curveSegments: 12\n  })\n  text.computeBoundingBox();\n  var centerOffset = -0.5 * (text.boundingBox.max.x - text.boundingBox.min.x);\n\n  var material = new MeshPhongMaterial({ color: color, flatShading: true });\n  var textMesh = new Mesh(text, material);\n  textMesh.position.x = centerOffset;\n\n  var group = new Group();\n  group.add(textMesh);\n  group.position.y = 100;\n  return group;\n}\n\nvar createCamera = function() {\n  var cameraTarget = new Vector3(0, 150, 0);\n  var camera = new PerspectiveCamera(60, width/height, 0.1, 1500);\n  camera.position.set(0, 400, 700);\n  camera.lookAt(cameraTarget);\n  return camera;\n}\n\nvar createDirectionalLight = function() {\n  var light = new DirectionalLight(0xffffff, 0.125);\n  light.position.set(0, 0, 1).normalize();\n  return light;\n}\n\nvar createPointLight = function() {\n  var light = new PointLight(0xffffff, 1.5);\n  light.position.set(0, 100, 90);\n  return light;\n}\n\nvar renderGif = function (webGlCanvas, rotationFactor, animateFunction) {\n  var w = webGlCanvas.width;\n  var h = webGlCanvas.height;\n  var tc = document.createElement('canvas');\n  tc.width = w;\n  tc.height = h;\n  var ctx = tc.getContext('2d');\n\n  var gif = new GIF({\n    workers: 2,\n    workerScript: 'gif.worker.bundle.js',\n    quality: 10,\n    width: w,\n    height: h,\n    transparent: 0x00FF00\n  });\n\n  var rotationSlice = Math.PI / rotationFactor;\n  var drawingIterations = (2 * Math.PI) / rotationSlice;\n  for (var i = 0; i < drawingIterations; i++) {\n    ctx.drawImage(webGlCanvas, 0, 0, w, h);\n    gif.addFrame(ctx, {copy: true, delay: 40});\n    animateFunction();\n  }\n\n  gif.on('finished', function(blob) {\n    var img = document.getElementById('result-gif');\n    img.src = URL.createObjectURL(blob);\n  });\n  gif.render()\n}\n\nvar init = function(inputText, inputColor, inputSpeed, submitButton) {\n  var scene = new Scene();\n  scene.background = new Color(0x00FF00);\n  var rotatingText = null;\n  var rotationFactor = parseInt(inputSpeed.value);\n\n  var loader = new FontLoader();\n  var canvas = document.getElementById('3dcanvas');\n\n  var renderer = new WebGLRenderer( { preserveDrawingBuffer: true, antialias: true ,canvas: canvas});\n  renderer.setSize(width, height);\n\n  loader.load(DroidSansRegularFont, function (font) {\n    rotatingText = createText(font, 0xB22222, '')\n    scene.add(rotatingText);\n\n    var dirLight = createDirectionalLight();\n    scene.add(dirLight);\n    var pointLight = createPointLight();\n    scene.add(pointLight);\n\n    submitButton.addEventListener('click', function() {\n      scene.remove(rotatingText);\n      var color = parseInt(inputColor.value, 16);\n      rotationFactor = parseInt(inputSpeed.value);\n\n      rotatingText = createText(font, color, inputText.value)\n      scene.add(rotatingText);\n      renderer.render(scene, camera);\n      renderGif(canvas, rotationFactor, function() {\n            rotatingText.rotateY(Math.PI/rotationFactor);\n            renderer.render(scene, camera);\n      });\n    });\n\n  });\n\n  var camera = createCamera();\n\n  var render = function() {\n        if (rotatingText) {\n          rotatingText.rotateY(Math.PI/rotationFactor);\n        }\n        renderer.render(scene, camera);\n  }\n  animate(render);\n}\n\nvar animate = function (render) {\n  requestAnimationFrame(animate.bind(null, render));\n  render();\n};\n\nvar submitButton = document.getElementById('submit-button');\nvar inputText = document.getElementById('input-text');\nvar inputColor = document.getElementById('input-color');\nvar inputSpeed = document.getElementById('input-speed');\ninit(inputText, inputColor, inputSpeed,  submitButton);\n"],"sourceRoot":""}